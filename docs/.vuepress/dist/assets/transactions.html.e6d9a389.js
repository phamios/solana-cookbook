import{_ as r,r as o,o as i,c as l,a as e,b as t,w as c,F as u,d as s,e as d}from"./app.07ce7a66.js";const p={},m=e("h1",{id:"transactions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#transactions","aria-hidden":"true"},"#"),s(" Transactions")],-1),h=s("Les clients peuvent invoquer des "),_=s("programmes"),f=s(" en soumettant une transaction \xE0 un cluster. Une seule transaction peut comprendre plusieurs instructions, chacune ciblant son propre programme. Lorsqu'une transaction est soumise, Le "),b={href:"https://docs.solana.com/developing/programming-model/runtime",target:"_blank",rel:"noopener noreferrer"},g=s("Runtime"),q=s(" de Solana va traiter ses instructions dans l'ordre et de mani\xE8re atomique. Si le traitement d'au moins une instruction \xE9choue, c'est l'ensemble de la transaction qui \xE9chouera."),v=d('<h2 id="faits" tabindex="-1"><a class="header-anchor" href="#faits" aria-hidden="true">#</a> Faits</h2><div class="custom-container tip"><p class="custom-container-title">Fiche d&#39;Information</p><ul><li>Les instructions sont l&#39;unit\xE9 de base du fonctionnement de Solana</li><li>Chaque instruction contient : <ul><li>Le <code>program_id</code> du programme vis\xE9</li><li>Un tableau de tous les <code>accounts</code> (comptes) dans lesquels il a l&#39;intention de lire ou d&#39;\xE9crire</li><li>Un tableau d&#39;octets <code>instruction_data</code> qui est sp\xE9cifique au programme vis\xE9</li></ul></li><li>Plusieurs instructions peuvent \xEAtre regroup\xE9es en une seule transaction</li><li>Chaque transaction contient : <ul><li>Un tableau de tous les <code>accounts</code> (comptes) dans lesquels il a l&#39;intention de lire ou d&#39;\xE9crire</li><li>Une ou plusieurs <code>instructions</code></li><li>Un <code>blockhash</code> (hash de blocs) r\xE9cent</li><li>Une ou plusieurs <code>signatures</code></li></ul></li><li>Les instructions sont trait\xE9es dans l&#39;ordre et de mani\xE8re atomique</li><li>Si le traitement d&#39;au moins une instruction \xE9choue, c&#39;est l&#39;ensemble de la transaction qui \xE9chouera.</li><li>Les transactions sont limit\xE9es \xE0 1232 octets</li></ul></div><h2 id="examen-plus-approfondi" tabindex="-1"><a class="header-anchor" href="#examen-plus-approfondi" aria-hidden="true">#</a> Examen plus approfondi</h2><p>Le Runtime de Solana n\xE9cessite que les instructions et les transactions sp\xE9cifient une liste de tous les comptes dans lesquels elles ont l&#39;intention de lire ou d&#39;\xE9crire. En exigeant ces comptes \xE0 l&#39;avance, le runtime est capable de parall\xE9liser l&#39;ex\xE9cution de toutes les transactions.</p><p>Lorsqu&#39;une transaction est soumise \xE0 un cluster, le runtime traite ses instructions dans l&#39;ordre et de mani\xE8re atomique. Pour chaque instruction, le programme utilis\xE9 interpr\xE8te le tableau de donn\xE9es et op\xE8re sur les comptes sp\xE9cifi\xE9s. Le programme retournera soit un message de succ\xE8s, soit un code d&#39;erreur. Si une erreur est retourn\xE9e, l&#39;ensemble de la transaction \xE9choue instantan\xE9ment.</p><p>Toute transaction visant \xE0 d\xE9biter un compte ou \xE0 modifier ses donn\xE9es n\xE9cessite la signature de son propri\xE9taire. Tout compte qui sera modifi\xE9 sera marqu\xE9 comme <code>writable</code>. Un compte peut \xEAtre cr\xE9dit\xE9 sans l&#39;autorisation de son propri\xE9taire \xE0 condition que le payeur des frais de transaction couvre les frais de rente et les frais de transaction n\xE9cessaires.</p>',6),k=s("Avant d'\xEAtre soumises, toutes les transactions doivent faire r\xE9f\xE9rence \xE0 un "),x={href:"https://docs.solana.com/developing/programming-model/transactions#recent-blockhash",target:"_blank",rel:"noopener noreferrer"},L=s("hash de blocs r\xE9cent"),S=s(". Le hash de blocs r\xE9cent est utilis\xE9 pour \xE9viter les doublons et \xE9liminer les transactions obsol\xE8tes. L'\xE2ge maximal que peut avoir le hash de blocs d'une transaction est de 150 blocs ou environ 1 minute et 19 secondes au moment o\xF9 nous \xE9crivons ces lignes."),y=e("h3",{id:"frais",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#frais","aria-hidden":"true"},"#"),s(" Frais")],-1),T=e("p",null,"Le r\xE9seau Solana per\xE7oit deux types de frais :",-1),U={href:"https://docs.solana.com/transaction_fees",target:"_blank",rel:"noopener noreferrer"},C=s("Les frais de transaction"),F=s(" pour propager les transactions sur la blockchain (aka \u201Cfrais de gas\u201D ou \u201Cgas fees\u201D)"),w={href:"https://docs.solana.com/developing/programming-model/accounts#rent",target:"_blank",rel:"noopener noreferrer"},A=s("Les frais de rente"),E=s(" pour le stockage des donn\xE9es sur la blockchain"),R=e("p",null,[s("Dans Solana, les frais de transaction sont d\xE9terministes : il n'existe pas de concept de march\xE9 des frais dans lequel les utilisateurs peuvent payer des frais plus \xE9lev\xE9s pour augmenter leurs chances d'\xEAtre inclus dans le bloc suivant. Au moment o\xF9 nous \xE9crivons ces lignes, les frais de transaction sont d\xE9termin\xE9s uniquement par le nombre de signatures requises (i.e. "),e("code",null,"lamports_per_signature"),s("), et non par la quantit\xE9 de ressources utilis\xE9es. Cela est d\xFB au fait qu'il existe actuellement une limite maximale de 1232 bytes pour toutes les transactions.")],-1),B=e("p",null,[s("Toutes les transactions n\xE9cessitent qu'il y ait au moins un compte "),e("code",null,"writable"),s(" (accessible en \xE9criture) pour signer la transaction. Une fois soumise, le compte signataire accessible en \xE9criture qui est s\xE9rialis\xE9 en premier sera le payeur des frais. Ce compte paiera le co\xFBt de la transaction, que celle-ci r\xE9ussisse ou \xE9choue. Si le payeur des frais ne dispose pas d'un solde suffisant pour payer les frais de transaction, la transaction sera abandonn\xE9e.")],-1),I=e("p",null,"Au moment o\xF9 nous \xE9crivons ces lignes, 50 % de tous les frais de transaction sont per\xE7us par le validateur qui produit le bloc, tandis que les 50 % restants sont br\xFBl\xE9s. Ce m\xE9canisme a pour but d'inciter les validateurs \xE0 traiter le plus grand nombre possible de transactions pendant les cr\xE9neaux qui leur sont attribu\xE9s dans le calendrier des leaders.",-1),N=e("h2",{id:"autres-ressources",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#autres-ressources","aria-hidden":"true"},"#"),s(" Autres Ressources")],-1),V={href:"https://docs.solana.com/developing/programming-model/transactions",target:"_blank",rel:"noopener noreferrer"},j=s("Documentation officielle"),D={href:"https://solana.wiki/docs/solidity-guide/transactions/#solana-transaction-structure",target:"_blank",rel:"noopener noreferrer"},J=s("Structure des Transactions"),P={href:"https://jstarry.notion.site/Transaction-Fees-f09387e6a8d84287aa16a34ecb58e239",target:"_blank",rel:"noopener noreferrer"},H=s("Frais de transactions par Justin Starry"),M={href:"https://2501babe.github.io/posts/solana101.html",target:"_blank",rel:"noopener noreferrer"},z=s("Une Introduction \xE0 la Blockchain Solana par Hana"),G={href:"https://jito-labs.medium.com/solana-validator-101-transaction-processing-90bcdc271143",target:"_blank",rel:"noopener noreferrer"},K=s("Traitement des Transactions par Jito Labs"),O={href:"https://medium.com/@asmiller1989/solana-transactions-in-depth-1f7f7fe06ac2",target:"_blank",rel:"noopener noreferrer"},Q=s("Les Transactions sur Solana en profondeur par Alex Miller");function W(X,Y){const a=o("RouterLink"),n=o("ExternalLinkIcon");return i(),l(u,null,[m,e("p",null,[h,t(a,{to:"/fr/core-concepts/programs.html"},{default:c(()=>[_]),_:1}),f,e("a",b,[g,t(n)]),q]),v,e("p",null,[k,e("a",x,[L,t(n)]),S]),y,T,e("ul",null,[e("li",null,[e("a",U,[C,t(n)]),F]),e("li",null,[e("a",w,[A,t(n)]),E])]),R,B,I,N,e("ul",null,[e("li",null,[e("a",V,[j,t(n)])]),e("li",null,[e("a",D,[J,t(n)])]),e("li",null,[e("a",P,[H,t(n)])]),e("li",null,[e("a",M,[z,t(n)])]),e("li",null,[e("a",G,[K,t(n)])]),e("li",null,[e("a",O,[Q,t(n)])])])],64)}var $=r(p,[["render",W]]);export{$ as default};
