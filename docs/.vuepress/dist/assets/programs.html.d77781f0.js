import{_ as i,r as n,o as d,c as l,a as e,b as s,w as c,F as p,d as t,e as r}from"./app.07ce7a66.js";const m={},u=e("h1",{id:"programmes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#programmes","aria-hidden":"true"},"#"),t(" Programmes")],-1),_=e("p",null,"N'importe quel d\xE9veloppeur peut \xE9crire et d\xE9ployer des programmes sur la blockchain Solana. Les programmes (connus sous le nom de contrats intelligents sur d'autres protocoles) servent de base \xE0 l'activit\xE9 sur la blockchain, permettant tout, partant de la DeFi et des NFTs jusqu'aux m\xE9dias sociaux tout en passant par les jeux.",-1),h=e("h2",{id:"faits",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#faits","aria-hidden":"true"},"#"),t(" Faits")],-1),g={class:"custom-container tip"},b=e("p",{class:"custom-container-title"},"Fiche d'Information",-1),f=e("li",null,[t("Les programmes traitent les "),e("a",{href:"./transactions"},"instructions"),t(" des utilisateurs finaux mais aussi d'autres programmes")],-1),v=t("Tous les programmes sont "),k=e("em",null,"stateless",-1),L=t(" (sans \xE9tat): toutes les donn\xE9es avec lesquelles ils interagissent sont stock\xE9es dans des "),x=t("comptes"),P=t(" s\xE9par\xE9s qui sont transmis par des instructions."),y=e("li",null,[t("Les programmes eux-m\xEAmes sont stock\xE9s dans des comptes marqu\xE9s comme "),e("code",null,"executable")],-1),q=t("Tous les programmes appartiennent au "),S={href:"https://docs.solana.com/developing/runtime-facilities/programs#bpf-loader",target:"_blank",rel:"noopener noreferrer"},F=t("BPF Loader"),R=t(" et sont ex\xE9cut\xE9s par le "),B={href:"https://docs.solana.com/developing/programming-model/runtime",target:"_blank",rel:"noopener noreferrer"},C=t("Solana Runtime"),j=t("Les d\xE9veloppeurs \xE9crivent le plus souvent des programmes en Rust ou en C++, mais ils peuvent choisir n'importe quel langage qui cible le backend "),E={href:"https://en.wikipedia.org/wiki/Berkeley_Packet_Filter",target:"_blank",rel:"noopener noreferrer"},T=t("BPF"),A=t(" de "),D={href:"https://llvm.org/",target:"_blank",rel:"noopener noreferrer"},N=t("LLVM"),w=r("<li>Tous les programmes ont un point d&#39;entr\xE9e unique o\xF9 le traitement des instructions a lieu (i.e. <code>process_instruction</code>); et dont les param\xE8tres incluent toujours: <ul><li><code>program_id</code>: <code>pubkey</code></li><li><code>accounts</code>: <code>array</code>,</li><li><code>instruction_data</code>: <code>byte array</code></li></ul></li>",1),I=e("h2",{id:"examen-plus-approfondi",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#examen-plus-approfondi","aria-hidden":"true"},"#"),t(" Examen plus approfondi")],-1),V=e("p",null,"Contrairement \xE0 la plupart des autres blockchains, Solana s\xE9pare compl\xE8tement le code des donn\xE9es. Toutes les donn\xE9es avec lesquelles les programmes interagissent sont stock\xE9es dans des comptes s\xE9par\xE9s et sont transmises, en tant que r\xE9f\xE9rences, via des instructions. Ce mod\xE8le permet \xE0 un seul programme g\xE9n\xE9rique de fonctionner sur plusieurs comptes sans n\xE9cessiter de d\xE9ploiements suppl\xE9mentaires. Des exemples communs de ce mod\xE8le sont observ\xE9s dans les programmes natifs et les programmes SPL.",-1),M=e("h3",{id:"programmes-natifs-la-bibliotheque-des-programmes-de-solana-spl",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#programmes-natifs-la-bibliotheque-des-programmes-de-solana-spl","aria-hidden":"true"},"#"),t(" Programmes Natifs & La Biblioth\xE8que des Programmes de Solana (SPL)")],-1),U=t("Solana est \xE9quip\xE9 d'un certain nombre de programmes qui servent d'\xE9l\xE9ments de base pour les interactions sur la blockchain. Ces programmes sont divis\xE9s en "),J={href:"https://docs.solana.com/developing/runtime-facilities/programs#bpf-loader",target:"_blank",rel:"noopener noreferrer"},O=t("Programmes Natifs"),z=t(" et en "),H={href:"https://spl.solana.com/",target:"_blank",rel:"noopener noreferrer"},G=t("Programmes de la Biblioth\xE8que des Programmes de Solana (SPL)"),K=t("."),Q=t("Les Programmes Natifs fournissent les fonctions de base n\xE9cessaires au fonctionnement des validateurs. Parmi ces programmes, le plus connu est le "),W={href:"https://docs.solana.com/developing/runtime-facilities/programs#system-program",target:"_blank",rel:"noopener noreferrer"},X=t("Programme Syst\xE8me (System Program)"),Y=t(" qui est responsable de l'administration des nouveaux comptes et de transf\xE9rer des SOL entre deux parties."),Z=t("Les programmes de la Biblioth\xE8que des Programmes de Solana (SPL) prennent en charge d'autres activit\xE9s au sein de la blockchain, telles que, par exemple, la cr\xE9ation de jetons, l'\xE9change de jetons ainsi ou encore le pr\xEAt de jetons, ainsi que la cr\xE9ation de pools de staking et le maintien on-chain du service de noms de domaine. Le "),$={href:"https://spl.solana.com/token",target:"_blank",rel:"noopener noreferrer"},ee=t("Programme de Jeton SPL (SPL Token Program)"),te=t(" peut \xEAtre invoqu\xE9 directement via l'interface CLI, tandis que d'autres, comme le "),se={href:"https://spl.solana.com/associated-token-account",target:"_blank",rel:"noopener noreferrer"},oe=t("Programme de Compte de Jeton Associ\xE9 (Associated Token Account Program)"),re=t(" sont g\xE9n\xE9ralement utilis\xE9s par d'autres programmes."),ne=e("h3",{id:"ecrire-des-programmes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ecrire-des-programmes","aria-hidden":"true"},"#"),t(" Ecrire des programmes")],-1),ae=t("Les programmes sont le plus souvent d\xE9velopp\xE9s avec Rust ou C++, mais peuvent \xEAtre d\xE9velopp\xE9s avec n'importe quel langage qui cible le backend BPF de LLVM. Les initiatives r\xE9centes de "),ie={href:"https://neon-labs.org/",target:"_blank",rel:"noopener noreferrer"},de=t("Neon Labs"),le=t(" et "),ce={href:"https://solang.readthedocs.io/en/latest/",target:"_blank",rel:"noopener noreferrer"},pe=t("Solang"),me=t(" permettent la compatibilit\xE9 "),ue={href:"https://ethereum.org/en/developers/docs/evm/",target:"_blank",rel:"noopener noreferrer"},_e=t("EVM"),he=t(" et permettent donc aux d\xE9veloppeurs d'\xE9crire des programmes en Solidity."),ge=r("<p>La plupart des programmes Rust suivent l&#39;architecture suivante :</p><table><thead><tr><th>Fichier</th><th>Description</th></tr></thead><tbody><tr><td>lib.rs</td><td>Registre des modules</td></tr><tr><td>entrypoint.rs</td><td>Point d&#39;entr\xE9e du programme</td></tr><tr><td>instruction.rs</td><td>API du programme, (d\xE9)s\xE9rialisation des instructions</td></tr><tr><td>processor.rs</td><td>Logique du programme</td></tr><tr><td>state.rs</td><td>Objets du programme, (d\xE9)s\xE9rialisation des \xE9tats</td></tr><tr><td>error.rs</td><td>Erreurs sp\xE9cifiques au programme</td></tr></tbody></table>",2),be=t("R\xE9cemment, "),fe={href:"https://github.com/coral-xyz/anchor",target:"_blank",rel:"noopener noreferrer"},ve=t("Anchor"),ke=t(" est devenu le framework le plus populaire pour le d\xE9veloppement de programmes. Anchor est un framework, semblable \xE0 Ruby on Rails, qui r\xE9duit le boilerplate (code passe-partout) et facilite la (d\xE9)s\xE9rialisation pour les programmes d\xE9velopp\xE9s en Rust."),Le=r("<p>Les programmes sont g\xE9n\xE9ralement d\xE9velopp\xE9s et test\xE9s dans les environnements appel\xE9s <em>Localhost</em> et <em>Devnet</em> avant d&#39;\xEAtre d\xE9ploy\xE9s sur le <em>Testnet</em> ou le <em>Mainnet</em>. Solana supporte les environnements suivants :</p><table><thead><tr><th>Environnement du cluster</th><th>URL de Connexion RPC</th></tr></thead><tbody><tr><td>Mainnet-beta</td><td>https://api.mainnet-beta.solana.com</td></tr><tr><td>Testnet</td><td>https://api.testnet.solana.com</td></tr><tr><td>Devnet</td><td>https://api.devnet.solana.com</td></tr><tr><td>Localhost</td><td>Default port: 8899 (e.g. http://localhost:8899, http://192.168.1.88:8899)</td></tr></tbody></table>",2),xe=t("Une fois d\xE9ploy\xE9s dans un environnement, les clients peuvent interagir avec les programmes de la blockchain via les "),Pe={href:"https://docs.solana.com/developing/clients/jsonrpc-api",target:"_blank",rel:"noopener noreferrer"},ye=t("Connexions RPC"),qe=t(" du cluster correspondant."),Se=e("h3",{id:"deployer-des-programmes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#deployer-des-programmes","aria-hidden":"true"},"#"),t(" D\xE9ployer des programmes")],-1),Fe=t("Les d\xE9veloppeurs peuvent d\xE9ployer leurs programmes via le "),Re={href:"https://docs.solana.com/cli/deploy-a-program",target:"_blank",rel:"noopener noreferrer"},Be=t("CLI"),Ce=t(":"),je=r(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>solana program deploy <span class="token operator">&lt;</span>PROGRAM_FILEPATH<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1),Ee=t("Lorsqu'un programme est d\xE9ploy\xE9, il est compil\xE9 en un "),Te={href:"https://en.wikipedia.org/wiki/Executable_and_Linkable_Format",target:"_blank",rel:"noopener noreferrer"},Ae=t("objet partag\xE9 ELF (ELF shared object)"),De=t(" (contenant le bytecode du BPF) et t\xE9l\xE9charg\xE9 sur le cluster Solana. Les programmes vivent dans des comptes (comme \xE0 peu pr\xE8s tout ce qui se trouve sur Solana), sauf que ceux-ci sont marqu\xE9s comme "),Ne=e("code",null,"executable",-1),we=t(" et assign\xE9 au BPF Loader. L'adresse de ce compte est appel\xE9e "),Ie=e("code",null,"program_id",-1),Ve=t(" et est utilis\xE9e pour r\xE9f\xE9rencer le programme dans toutes les transactions futures."),Me=t("Solana supporte plusieurs BPF Loaders, dont le dernier en date est le "),Ue={href:"https://explorer.solana.com/address/BPFLoaderUpgradeab1e11111111111111111111111",target:"_blank",rel:"noopener noreferrer"},Je=t("Upgradable BPF Loader"),Oe=t(". Le BPF Loader est charg\xE9 de g\xE9rer les comptes du programme et de les rendre accessibles aux clients via le "),ze=e("code",null,"program_id",-1),He=t(". Tous les programmes ont un point d'entr\xE9e unique o\xF9 le traitement des instructions a lieu (i.e. "),Ge=e("code",null,"process_instruction",-1),Ke=t(") et dont les param\xE8tres incluent toujours:"),Qe=r('<ul><li><code>program_id</code>: <code>pubkey</code></li><li><code>accounts</code>: <code>array</code>,</li><li><code>instruction_data</code>: <code>byte array</code></li></ul><p>Une fois invoqu\xE9s, les programmes sont ex\xE9cut\xE9s par le Runtime de Solana.</p><h2 id="autres-ressources" tabindex="-1"><a class="header-anchor" href="#autres-ressources" aria-hidden="true">#</a> Autres Ressources</h2>',3),We={href:"https://docs.solana.com/developing/on-chain-programs/overview",target:"_blank",rel:"noopener noreferrer"},Xe=t("Documentation officielle"),Ye={href:"https://spl.solana.com/",target:"_blank",rel:"noopener noreferrer"},Ze=t("Documentation sur le SPL"),$e={href:"https://jstarry.notion.site/Program-deploys-29780c48794c47308d5f138074dd9838",target:"_blank",rel:"noopener noreferrer"},et=t("D\xE9ploiements de programmes par Justin Starry"),tt={href:"https://book.solmeet.dev/notes/solana-starter-kit",target:"_blank",rel:"noopener noreferrer"},st=t("Kit de d\xE9marrage pour Solana par Iron Addicted Dog"),ot={href:"https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/",target:"_blank",rel:"noopener noreferrer"},rt=t("Programmation sur Solana par Paulx"),nt={href:"https://2501babe.github.io/posts/solana101.html",target:"_blank",rel:"noopener noreferrer"},at=t("Une Introduction \xE0 la Blockchain Solana par Hana"),it={href:"https://github.com/coral-xyz/anchor",target:"_blank",rel:"noopener noreferrer"},dt=t("Anchor");function lt(ct,pt){const a=n("RouterLink"),o=n("ExternalLinkIcon");return d(),l(p,null,[u,_,h,e("div",g,[b,e("ul",null,[f,e("li",null,[v,k,L,s(a,{to:"/fr/core-concepts/accounts.html"},{default:c(()=>[x]),_:1}),P]),y,e("li",null,[q,e("a",S,[F,s(o)]),R,e("a",B,[C,s(o)])]),e("li",null,[j,e("a",E,[T,s(o)]),A,e("a",D,[N,s(o)])]),w])]),I,V,M,e("p",null,[U,e("a",J,[O,s(o)]),z,e("a",H,[G,s(o)]),K]),e("p",null,[Q,e("a",W,[X,s(o)]),Y]),e("p",null,[Z,e("a",$,[ee,s(o)]),te,e("a",se,[oe,s(o)]),re]),ne,e("p",null,[ae,e("a",ie,[de,s(o)]),le,e("a",ce,[pe,s(o)]),me,e("a",ue,[_e,s(o)]),he]),ge,e("p",null,[be,e("a",fe,[ve,s(o)]),ke]),Le,e("p",null,[xe,e("a",Pe,[ye,s(o)]),qe]),Se,e("p",null,[Fe,e("a",Re,[Be,s(o)]),Ce]),je,e("p",null,[Ee,e("a",Te,[Ae,s(o)]),De,Ne,we,Ie,Ve]),e("p",null,[Me,e("a",Ue,[Je,s(o)]),Oe,ze,He,Ge,Ke]),Qe,e("ul",null,[e("li",null,[e("a",We,[Xe,s(o)])]),e("li",null,[e("a",Ye,[Ze,s(o)])]),e("li",null,[e("a",$e,[et,s(o)])]),e("li",null,[e("a",tt,[st,s(o)])]),e("li",null,[e("a",ot,[rt,s(o)])]),e("li",null,[e("a",nt,[at,s(o)])]),e("li",null,[e("a",it,[dt,s(o)])])])],64)}var ut=i(m,[["render",lt]]);export{ut as default};
