import{_ as t,r as o,o as e,c,a,b as l,F as u,e as s,d as n}from"./app.07ce7a66.js";const i={},r=s('<h1 id="paggamit-ng-mga-token-sa-mga-laro-sa-solana" tabindex="-1"><a class="header-anchor" href="#paggamit-ng-mga-token-sa-mga-laro-sa-solana" aria-hidden="true">#</a> Paggamit ng mga token sa mga laro sa Solana</h1><p>Ang mga token sa Solana ay maaaring maghatid ng iba&#39;t ibang layunin, gaya ng mga in-game na reward, insentibo, o iba pang application. Halimbawa, maaari kang lumikha ng mga token at ipamahagi ang mga ito sa mga manlalaro kapag nakumpleto nila ang mga partikular na in-game na aksyon.</p><h2 id="lumikha-mint-at-mag-burn-ng-mga-token-gamit-ang-anchor" tabindex="-1"><a class="header-anchor" href="#lumikha-mint-at-mag-burn-ng-mga-token-gamit-ang-anchor" aria-hidden="true">#</a> Lumikha, Mint, at Mag-burn ng mga Token gamit ang Anchor</h2><p>Sa tutorial na ito, bubuo kami ng laro gamit ang Anchor para ipakilala ang mga pangunahing kaalaman sa pakikipag-ugnayan sa Token Program sa Solana. Ang laro ay bubuoin sa paligid ng apat na pangunahing aksyon: paggawa ng bagong token mint, pagsisimula ng mga account ng manlalaro, pagbibigay ng reward sa mga manlalaro sa pagkatalo sa mga kaaway, at pagpapahintulot sa mga manlalaro na gumaling sa pamamagitan ng pagsunog ng mga token.</p><p>Ang programa ay binubuo ng 4 na mga instruction:</p><ul><li><code>create_mint</code> - Lumilikha ang instruction na ito ng bagong token mint na may Program Derived Address (PDA) bilang awtoridad ng mint at gumagawa ng metadata account para sa mint. Magdaragdag kami ng isang hadlang na nagbibigay-daan lamang sa isang &quot;admin&quot; na gamitin ang instruction na ito</li><li><code>init_player</code> - Ang instruction na ito ay nagpapasimula ng bagong player account na may panimulang kalusugan na 100</li><li><code>kill_enemy</code> - Ibinabawas ng instruction na ito ang 10 health point mula sa player account kapag &quot;natalo ang isang kaaway&quot; at nagbibigay ng 1 token bilang reward para sa player</li><li><code>heal</code> - Ang pagtuturo na ito ay nagbibigay-daan sa isang manlalaro na magsunog ng 1 token upang maibalik ang kanilang kalusugan sa 100</li></ul><p>Para sa isang mataas na antas na pangkalahatang-ideya ng ugnayan ng mga wallet ng user, token mints, token account, at token metadata account, isaalang-alang ang pag-explore sa bahaging ito ng [dokumentasyon ng Metaplex](https://docs.metaplex.com/programs/token-metadata /pangkalahatang-ideya).</p><h3 id="pagsisimula" tabindex="-1"><a class="header-anchor" href="#pagsisimula" aria-hidden="true">#</a> Pagsisimula</h3><p>Upang simulan ang pagbuo ng programa, sundin ang mga hakbang na ito:</p>',9),k=n("Bisitahin ang "),m={href:"https://beta.solpg.io/",target:"_blank",rel:"noopener noreferrer"},b=n("Solana Playground"),g=n(" at gumawa ng bagong Anchor project. Kung bago ka sa Solana Playground, kakailanganin mo ring gumawa ng Playground Wallet."),d=s(`<p>Pagkatapos gumawa ng bagong proyekto, palitan ang default na starter code ng code sa ibaba:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anchor_spl<span class="token punctuation">::</span></span><span class="token punctuation">{</span>
    <span class="token namespace">associated_token<span class="token punctuation">::</span></span><span class="token class-name">AssociatedToken</span><span class="token punctuation">,</span>
    <span class="token namespace">metadata<span class="token punctuation">::</span></span><span class="token punctuation">{</span>create_metadata_accounts_v3<span class="token punctuation">,</span> <span class="token class-name">CreateMetadataAccountsV3</span><span class="token punctuation">,</span> <span class="token class-name">Metadata</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token namespace">token<span class="token punctuation">::</span></span><span class="token punctuation">{</span>burn<span class="token punctuation">,</span> mint_to<span class="token punctuation">,</span> <span class="token class-name">Burn</span><span class="token punctuation">,</span> <span class="token class-name">Mint</span><span class="token punctuation">,</span> <span class="token class-name">MintTo</span><span class="token punctuation">,</span> <span class="token class-name">Token</span><span class="token punctuation">,</span> <span class="token class-name">TokenAccount</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mpl_token_metadata<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">pda<span class="token punctuation">::</span></span>find_metadata_account<span class="token punctuation">,</span> <span class="token namespace">state<span class="token punctuation">::</span></span><span class="token class-name">DataV2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">solana_program<span class="token punctuation">::</span></span><span class="token punctuation">{</span>pubkey<span class="token punctuation">,</span> <span class="token namespace">pubkey<span class="token punctuation">::</span></span><span class="token class-name">Pubkey</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token macro property">declare_id!</span><span class="token punctuation">(</span><span class="token string">&quot;11111111111111111111111111111111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[program]</span>
<span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">anchor_token</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>Dito ay dinadala lamang namin sa saklaw ang mga crates at kaukulang mga module na aming gagamitin para sa program na ito. Gagamitin namin ang <code>anchor_spl</code> at <code>mpl_token_metadata</code> crates upang matulungan kaming makipag-ugnayan sa Token program at sa Token Metadata program.</p><h3 id="lumikha-ng-pagtuturo-ng-mint" tabindex="-1"><a class="header-anchor" href="#lumikha-ng-pagtuturo-ng-mint" aria-hidden="true">#</a> Lumikha ng pagtuturo ng Mint</h3><p>Una, ipatupad natin ang isang instruction para gumawa ng bagong token mint at ang metadata account nito. Ang on-chain token metadata, kasama ang pangalan, simbolo, at URI, ay ibibigay bilang mga parameter sa pagtuturo.</p><p>Bukod pa rito, papayagan lang namin ang isang &quot;admin&quot; na gamitin ang instruction na ito sa pamamagitan ng pagtukoy ng <code>ADMIN_PUBKEY</code> na pare-pareho at paggamit nito bilang isang hadlang. Tiyaking palitan ang <code>ADMIN_PUBKEY</code> ng iyong Solana Playground wallet na pampublikong key.</p><p>Ang instruction na <code>create_mint</code> ay nangangailangan ng mga sumusunod na account:</p><ul><li><code>admin</code> - ang <code>ADMIN_PUBKEY</code> na pumipirma sa transaksyon at nagbabayad para sa pagsisimula ng mga account</li><li><code>reward_token_mint</code> - ang bagong token mint na sinisimulan namin, gamit ang isang PDA bilang parehong address ng mint account at awtoridad nito sa mint</li><li><code>metadata_account</code> - ang metadata account na sinisimulan namin para sa token mint</li><li><code>token_program</code> - kinakailangan para sa pakikipag-ugnayan sa mga instruction sa Token program</li><li><code>token_metadata_program</code> - kinakailangang account para sa pakikipag-ugnayan sa mga instruction sa Token Metadata program</li><li><code>system_program</code>- isang kinakailangang account kapag gumagawa ng bagong account</li><li><code>rent</code> - Sysvar Rent, isang kinakailangang account kapag gumagawa ng metadata account</li></ul><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">// Only this public key can call this instruction</span>
<span class="token keyword">const</span> <span class="token constant">ADMIN_PUBKEY</span><span class="token punctuation">:</span> <span class="token class-name">Pubkey</span> <span class="token operator">=</span> <span class="token macro property">pubkey!</span><span class="token punctuation">(</span><span class="token string">&quot;REPLACE_WITH_YOUR_WALLET_PUBKEY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[program]</span>
<span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">anchor_token</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>

    <span class="token comment">// Create new token mint with PDA as mint authority</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">create_mint</span><span class="token punctuation">(</span>
        ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">CreateMint</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        uri<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
        symbol<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// PDA seeds and bump to &quot;sign&quot; for CPI</span>
        <span class="token keyword">let</span> seeds <span class="token operator">=</span> <span class="token string">b&quot;reward&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> bump <span class="token operator">=</span> <span class="token operator">*</span>ctx<span class="token punctuation">.</span>bumps<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;reward_token_mint&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> signer<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span>seeds<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span>bump<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">// On-chain token metadata for the mint</span>
        <span class="token keyword">let</span> data_v2 <span class="token operator">=</span> <span class="token class-name">DataV2</span> <span class="token punctuation">{</span>
            name<span class="token punctuation">:</span> name<span class="token punctuation">,</span>
            symbol<span class="token punctuation">:</span> symbol<span class="token punctuation">,</span>
            uri<span class="token punctuation">:</span> uri<span class="token punctuation">,</span>
            seller_fee_basis_points<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            creators<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
            collection<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
            uses<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment">// CPI Context</span>
        <span class="token keyword">let</span> cpi_ctx <span class="token operator">=</span> <span class="token class-name">CpiContext</span><span class="token punctuation">::</span><span class="token function">new_with_signer</span><span class="token punctuation">(</span>
            ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>token_metadata_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">CreateMetadataAccountsV3</span> <span class="token punctuation">{</span>
                metadata<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>metadata_account<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the metadata account being created</span>
                mint<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the mint account of the metadata account</span>
                mint_authority<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the mint authority of the mint account</span>
                update_authority<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the update authority of the metadata account</span>
                payer<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>admin<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the payer for creating the metadata account</span>
                system_program<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>system_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the system program account</span>
                rent<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>rent<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the rent sysvar account</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            signer<span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">create_metadata_accounts_v3</span><span class="token punctuation">(</span>
            cpi_ctx<span class="token punctuation">,</span> <span class="token comment">// cpi context</span>
            data_v2<span class="token punctuation">,</span> <span class="token comment">// token metadata</span>
            <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// is_mutable</span>
            <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// update_authority_is_signer</span>
            <span class="token class-name">None</span><span class="token punctuation">,</span>    <span class="token comment">// collection details</span>
        <span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">CreateMint</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[account(
        mut,
        address = ADMIN_PUBKEY
    )]</span>
    <span class="token keyword">pub</span> admin<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">// The PDA is both the address of the mint account and the mint authority</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        init<span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;reward&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
        payer <span class="token operator">=</span> admin<span class="token punctuation">,</span>
        <span class="token namespace">mint<span class="token punctuation">::</span></span>decimals <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">,</span>
        <span class="token namespace">mint<span class="token punctuation">::</span></span>authority <span class="token operator">=</span> reward_token_mint<span class="token punctuation">,</span>

    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> reward_token_mint<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Mint</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">///CHECK: Using &quot;address&quot; constraint to validate metadata account address</span>
    <span class="token attribute attr-name">#[account(
        mut,
        address=find_metadata_account(&amp;reward_token_mint.key()).0
    )]</span>
    <span class="token keyword">pub</span> metadata_account<span class="token punctuation">:</span> <span class="token class-name">UncheckedAccount</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token keyword">pub</span> token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Token</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> token_metadata_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Metadata</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> rent<span class="token punctuation">:</span> <span class="token class-name">Sysvar</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Rent</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br></div></div><p>Ang instruction na <code>create_mint</code> ay lumilikha ng bagong token mint, gamit ang Program Derived Address (PDA) bilang parehong address ng token mint at ang awtoridad ng mint nito. Ang pagtuturo ay kumukuha ng URI (off-chain metadata), pangalan, at simbolo bilang mga parameter.</p><p>Ang instruction na ito ay gagawa ng metadata account para sa token mint sa pamamagitan ng Cross-Program Invocation (CPI) na tumatawag sa <code>create_metadata_accounts_v3</code> na pagtuturo mula sa Token Metadata program.</p><p>Ginagamit ang PDA para &quot;pirmahan&quot; ang CPI dahil ito ang awtoridad ng mint, na kinakailangang lumagda kapag gumagawa ng metadata account para sa isang mint. Ang data ng pagtuturo (URI, pangalan, simbolo) ay kasama sa <code>DataV2</code> struct upang tukuyin ang metadata ng bagong token mint.</p><p>Bini-verify din namin na ang address ng <code>admin</code> account na pumipirma sa transaksyon ay tumutugma sa halaga ng <code>ADMIN_PUBKEY</code> na pare-pareho upang matiyak na ang nilalayong wallet lang ang makakapag-invoke ng instruction na ito.</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">const</span> <span class="token constant">ADMIN_PUBKEY</span><span class="token punctuation">:</span> <span class="token class-name">Pubkey</span> <span class="token operator">=</span> <span class="token macro property">pubkey!</span><span class="token punctuation">(</span><span class="token string">&quot;REPLACE_WITH_YOUR_WALLET_PUBKEY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="init-player-instruction" tabindex="-1"><a class="header-anchor" href="#init-player-instruction" aria-hidden="true">#</a> Init Player Instruction</h3><p>Susunod, ipatupad natin ang instruction na <code>init_player</code> na lumilikha ng bagong account ng manlalaro na may paunang kalusugan na 100. Ang pare-parehong <code>MAX_HEALTH</code> ay nakatakda sa 100 upang kumatawan sa panimulang kalusugan.</p><p>Ang instruction na <code>init_player</code> ay nangangailangan ng mga sumusunod na account:</p><ul><li><code>player_data</code> - ang bagong account ng manlalaro na aming sinisimulan, na mag-iimbak ng kalusugan ng manlalaro</li><li><code>player</code> - ang user na pumirma sa transaksyon at nagbabayad para sa pagsisimula ng account</li><li><code>system_program</code> - isang kinakailangang account kapag gumagawa ng bagong account</li></ul><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">// Player max health</span>
<span class="token keyword">const</span> <span class="token constant">MAX_HEALTH</span><span class="token punctuation">:</span> <span class="token keyword">u8</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[program]</span>
<span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">anchor_token</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token punctuation">...</span>

    <span class="token comment">// Create new player account</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">init_player</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">InitPlayer</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health <span class="token operator">=</span> <span class="token constant">MAX_HEALTH</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">...</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">InitPlayer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        init<span class="token punctuation">,</span>
        payer <span class="token operator">=</span> player<span class="token punctuation">,</span>
        space <span class="token operator">=</span> <span class="token number">8</span> <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;player&quot;</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> player<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> player_data<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">PlayerData</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> player<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[account]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">PlayerData</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> health<span class="token punctuation">:</span> <span class="token keyword">u8</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>Sinisimulan ang <code>player_data</code> account gamit ang Program Derived Address (PDA) na may public key na <code>player</code> bilang isa sa mga seed. Tinitiyak nito na ang bawat <code>player_data</code> account ay natatangi at nauugnay sa <code>player</code>, na nagpapahintulot sa bawat manlalaro na lumikha ng kanilang sariling <code>player_data</code> account.</p><h3 id="instruksyon-ng-patayin-ang-kaaway" tabindex="-1"><a class="header-anchor" href="#instruksyon-ng-patayin-ang-kaaway" aria-hidden="true">#</a> Instruksyon ng Patayin ang Kaaway</h3><p>Susunod, ipatupad natin ang instruction na <code>kill_enemy</code> na nagbabawas ng 10 sa kalusugan ng manlalaro at nagbibigay ng 1 token sa token account ng manlalaro bilang reward.</p><p>Ang instruction na <code>kill_enemy</code> ay nangangailangan ng mga sumusunod na account:</p><ul><li><code>player</code> - ang player na tumatanggap ng token</li><li><code>player_data</code> - ang player data account na nag-iimbak ng kasalukuyang kalusugan ng player</li><li><code>player_token_account</code> - ang nauugnay na token account ng manlalaro kung saan gagawa ng mga token</li><li><code>reward_token_mint</code> - ang token mint account, na tumutukoy sa uri ng token na ilalagay</li><li><code>token_program</code> - kinakailangan para sa pakikipag-ugnayan sa mga instruction sa token program</li><li><code>associated_token_program</code> - kinakailangan kapag nagtatrabaho sa mga nauugnay na token account</li><li><code>system_program</code> - isang kinakailangang account kapag gumagawa ng bagong account</li></ul><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[program]</span>
<span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">anchor_token</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token punctuation">...</span>

    <span class="token comment">// Mint token to player token account</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">kill_enemy</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">KillEnemy</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// Check if player has enough health</span>
        <span class="token keyword">if</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token macro property">err!</span><span class="token punctuation">(</span><span class="token class-name">ErrorCode</span><span class="token punctuation">::</span><span class="token class-name">NotEnoughHealth</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Subtract 10 health from player</span>
        ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health <span class="token operator">=</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health<span class="token punctuation">.</span><span class="token function">checked_sub</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// PDA seeds and bump to &quot;sign&quot; for CPI</span>
        <span class="token keyword">let</span> seeds <span class="token operator">=</span> <span class="token string">b&quot;reward&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> bump <span class="token operator">=</span> <span class="token operator">*</span>ctx<span class="token punctuation">.</span>bumps<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;reward_token_mint&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> signer<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span>seeds<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span>bump<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">// CPI Context</span>
        <span class="token keyword">let</span> cpi_ctx <span class="token operator">=</span> <span class="token class-name">CpiContext</span><span class="token punctuation">::</span><span class="token function">new_with_signer</span><span class="token punctuation">(</span>
            ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>token_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">MintTo</span> <span class="token punctuation">{</span>
                mint<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                to<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_token_account<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                authority<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            signer<span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Mint 1 token, accounting for decimals of mint</span>
        <span class="token keyword">let</span> amount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1u64</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">checked_mul</span><span class="token punctuation">(</span><span class="token number">10u64</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span>decimals <span class="token keyword">as</span> <span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">mint_to</span><span class="token punctuation">(</span>cpi_ctx<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">...</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">KillEnemy</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> player<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;player&quot;</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> player<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> player_data<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">PlayerData</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">// Initialize player token account if it doesn&#39;t exist</span>
    <span class="token attribute attr-name">#[account(
        init_if_needed,
        payer = player,
        associated_token::mint = reward_token_mint,
        associated_token::authority = player
    )]</span>
    <span class="token keyword">pub</span> player_token_account<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">TokenAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;reward&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> reward_token_mint<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Mint</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token keyword">pub</span> token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Token</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> associated_token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">AssociatedToken</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[error_code]</span>
<span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">ErrorCode</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[msg(<span class="token string">&quot;Not enough health&quot;</span>)]</span>
    <span class="token class-name">NotEnoughHealth</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br></div></div><p>Ang kalusugan ng manlalaro ay nabawasan ng 10 upang kumatawan sa &quot;labanan sa kalaban&quot;. Susuriin din namin ang kasalukuyang kalusugan ng player at magbabalik ng custom na Anchor error kung ang player ay may 0 health.</p><p>Ang pagtuturo pagkatapos ay gumagamit ng cross-program invocation (CPI) para tawagan ang <code>mint_to</code> na pagtuturo mula sa Token program at mag-mint ng 1 token ng <code>reward_token_mint</code> sa <code>player_token_account</code> bilang reward sa pagpatay sa kaaway.</p><p>Dahil ang awtoridad ng mint para sa token mint ay Program Derived Address (PDA), maaari kaming direktang mag-mint ng mga token sa pamamagitan ng pagtawag sa instruction na ito nang walang karagdagang pumirma. Ang programa ay maaaring &quot;mag-sign&quot; sa ngalan ng PDA, na nagpapahintulot sa token minting nang hindi tahasang nangangailangan ng mga karagdagang pumirma.</p><h3 id="heal-instruction" tabindex="-1"><a class="header-anchor" href="#heal-instruction" aria-hidden="true">#</a> Heal Instruction</h3><p>Susunod, ipatupad natin ang instruction na <code>heal</code> na nagbibigay-daan sa isang manlalaro na magsunog ng 1 token at ibalik ang kanilang kalusugan sa pinakamataas na halaga nito.</p><p>Ang pagtuturo ng <code>heal</code> ay nangangailangan ng mga sumusunod na account:</p><ul><li><code>player</code> - ang player na nagsasagawa ng healing action</li><li><code>player_data</code> - ang player data account na nag-iimbak ng kasalukuyang kalusugan ng player</li><li><code>player_token_account</code> - ang nauugnay na token account ng manlalaro kung saan susunugin ang mga token</li><li><code>reward_token_mint</code> - ang token mint account, na tumutukoy sa uri ng token na susunugin</li><li><code>token_program</code> - kinakailangan para sa pakikipag-ugnayan sa mga instruction sa token program</li><li><code>associated_token_program</code> - kinakailangan kapag nagtatrabaho sa mga nauugnay na token account</li></ul><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[program]</span>
<span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">anchor_token</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token punctuation">...</span>

    <span class="token comment">// Burn token to health player</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">heal</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">Heal</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health <span class="token operator">=</span> <span class="token constant">MAX_HEALTH</span><span class="token punctuation">;</span>

        <span class="token comment">// CPI Context</span>
        <span class="token keyword">let</span> cpi_ctx <span class="token operator">=</span> <span class="token class-name">CpiContext</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>
            ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>token_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">Burn</span> <span class="token punctuation">{</span>
                mint<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                from<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_token_account<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                authority<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Burn 1 token, accounting for decimals of mint</span>
        <span class="token keyword">let</span> amount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1u64</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">checked_mul</span><span class="token punctuation">(</span><span class="token number">10u64</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span>decimals <span class="token keyword">as</span> <span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">burn</span><span class="token punctuation">(</span>cpi_ctx<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">...</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Heal</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> player<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;player&quot;</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> player<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> player_data<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">PlayerData</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token attribute attr-name">#[account(
        mut,
        associated_token::mint = reward_token_mint,
        associated_token::authority = player
    )]</span>
    <span class="token keyword">pub</span> player_token_account<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">TokenAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;reward&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> reward_token_mint<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Mint</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token keyword">pub</span> token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Token</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> associated_token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">AssociatedToken</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><p>Ang kalusugan ng manlalaro ay ibinalik sa pinakamataas na halaga nito gamit ang <code>heal</code> na pagtuturo. Ang pagtuturo ay gumagamit ng cross-program invocation (CPI) para tawagan ang <code>burn</code> na pagtuturo mula sa Token program, na nagsusunog ng 1 token mula sa <code>player_token_account</code> upang pagalingin ang player.</p><h3 id="bumuo-at-i-deploy" tabindex="-1"><a class="header-anchor" href="#bumuo-at-i-deploy" aria-hidden="true">#</a> Bumuo at I-deploy</h3><p>Mahusay na trabaho! Nakumpleto mo na ngayon ang programa! Sige at buuin at i-deploy ito gamit ang Solana Playground. Ang iyong huling programa ay dapat magmukhang ganito:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anchor_spl<span class="token punctuation">::</span></span><span class="token punctuation">{</span>
    <span class="token namespace">associated_token<span class="token punctuation">::</span></span><span class="token class-name">AssociatedToken</span><span class="token punctuation">,</span>
    <span class="token namespace">metadata<span class="token punctuation">::</span></span><span class="token punctuation">{</span>create_metadata_accounts_v3<span class="token punctuation">,</span> <span class="token class-name">CreateMetadataAccountsV3</span><span class="token punctuation">,</span> <span class="token class-name">Metadata</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token namespace">token<span class="token punctuation">::</span></span><span class="token punctuation">{</span>burn<span class="token punctuation">,</span> mint_to<span class="token punctuation">,</span> <span class="token class-name">Burn</span><span class="token punctuation">,</span> <span class="token class-name">Mint</span><span class="token punctuation">,</span> <span class="token class-name">MintTo</span><span class="token punctuation">,</span> <span class="token class-name">Token</span><span class="token punctuation">,</span> <span class="token class-name">TokenAccount</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mpl_token_metadata<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">pda<span class="token punctuation">::</span></span>find_metadata_account<span class="token punctuation">,</span> <span class="token namespace">state<span class="token punctuation">::</span></span><span class="token class-name">DataV2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">solana_program<span class="token punctuation">::</span></span><span class="token punctuation">{</span>pubkey<span class="token punctuation">,</span> <span class="token namespace">pubkey<span class="token punctuation">::</span></span><span class="token class-name">Pubkey</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token macro property">declare_id!</span><span class="token punctuation">(</span><span class="token string">&quot;CCLnXJAJYFjCHLCugpBCEQKrpiSApiRM4UxkBUHJRrv4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token constant">ADMIN_PUBKEY</span><span class="token punctuation">:</span> <span class="token class-name">Pubkey</span> <span class="token operator">=</span> <span class="token macro property">pubkey!</span><span class="token punctuation">(</span><span class="token string">&quot;REPLACE_WITH_YOUR_WALLET_PUBKEY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">MAX_HEALTH</span><span class="token punctuation">:</span> <span class="token keyword">u8</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[program]</span>
<span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">anchor_token</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>

    <span class="token comment">// Create new token mint with PDA as mint authority</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">create_mint</span><span class="token punctuation">(</span>
        ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">CreateMint</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        uri<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
        symbol<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// PDA seeds and bump to &quot;sign&quot; for CPI</span>
        <span class="token keyword">let</span> seeds <span class="token operator">=</span> <span class="token string">b&quot;reward&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> bump <span class="token operator">=</span> <span class="token operator">*</span>ctx<span class="token punctuation">.</span>bumps<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;reward_token_mint&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> signer<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span>seeds<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span>bump<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">// On-chain token metadata for the mint</span>
        <span class="token keyword">let</span> data_v2 <span class="token operator">=</span> <span class="token class-name">DataV2</span> <span class="token punctuation">{</span>
            name<span class="token punctuation">:</span> name<span class="token punctuation">,</span>
            symbol<span class="token punctuation">:</span> symbol<span class="token punctuation">,</span>
            uri<span class="token punctuation">:</span> uri<span class="token punctuation">,</span>
            seller_fee_basis_points<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            creators<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
            collection<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
            uses<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment">// CPI Context</span>
        <span class="token keyword">let</span> cpi_ctx <span class="token operator">=</span> <span class="token class-name">CpiContext</span><span class="token punctuation">::</span><span class="token function">new_with_signer</span><span class="token punctuation">(</span>
            ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>token_metadata_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">CreateMetadataAccountsV3</span> <span class="token punctuation">{</span>
                metadata<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>metadata_account<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the metadata account being created</span>
                mint<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the mint account of the metadata account</span>
                mint_authority<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the mint authority of the mint account</span>
                update_authority<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the update authority of the metadata account</span>
                payer<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>admin<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the payer for creating the metadata account</span>
                system_program<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>system_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the system program account</span>
                rent<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>rent<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the rent sysvar account</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            signer<span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">create_metadata_accounts_v3</span><span class="token punctuation">(</span>
            cpi_ctx<span class="token punctuation">,</span> <span class="token comment">// cpi context</span>
            data_v2<span class="token punctuation">,</span> <span class="token comment">// token metadata</span>
            <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// is_mutable</span>
            <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// update_authority_is_signer</span>
            <span class="token class-name">None</span><span class="token punctuation">,</span>    <span class="token comment">// collection details</span>
        <span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Create new player account</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">init_player</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">InitPlayer</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health <span class="token operator">=</span> <span class="token constant">MAX_HEALTH</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Mint tokens to player token account</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">kill_enemy</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">KillEnemy</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// Check if player has enough health</span>
        <span class="token keyword">if</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token macro property">err!</span><span class="token punctuation">(</span><span class="token class-name">ErrorCode</span><span class="token punctuation">::</span><span class="token class-name">NotEnoughHealth</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Subtract 10 health from player</span>
        ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health <span class="token operator">=</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health<span class="token punctuation">.</span><span class="token function">checked_sub</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// PDA seeds and bump to &quot;sign&quot; for CPI</span>
        <span class="token keyword">let</span> seeds <span class="token operator">=</span> <span class="token string">b&quot;reward&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> bump <span class="token operator">=</span> <span class="token operator">*</span>ctx<span class="token punctuation">.</span>bumps<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;reward_token_mint&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> signer<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span>seeds<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span>bump<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">// CPI Context</span>
        <span class="token keyword">let</span> cpi_ctx <span class="token operator">=</span> <span class="token class-name">CpiContext</span><span class="token punctuation">::</span><span class="token function">new_with_signer</span><span class="token punctuation">(</span>
            ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>token_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">MintTo</span> <span class="token punctuation">{</span>
                mint<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                to<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_token_account<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                authority<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            signer<span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Mint 1 token, accounting for decimals of mint</span>
        <span class="token keyword">let</span> amount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1u64</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">checked_mul</span><span class="token punctuation">(</span><span class="token number">10u64</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span>decimals <span class="token keyword">as</span> <span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">mint_to</span><span class="token punctuation">(</span>cpi_ctx<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Burn Token to health player</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">heal</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">Heal</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health <span class="token operator">=</span> <span class="token constant">MAX_HEALTH</span><span class="token punctuation">;</span>

        <span class="token comment">// CPI Context</span>
        <span class="token keyword">let</span> cpi_ctx <span class="token operator">=</span> <span class="token class-name">CpiContext</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>
            ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>token_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">Burn</span> <span class="token punctuation">{</span>
                mint<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                from<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_token_account<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                authority<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Burn 1 token, accounting for decimals of mint</span>
        <span class="token keyword">let</span> amount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1u64</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">checked_mul</span><span class="token punctuation">(</span><span class="token number">10u64</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span>decimals <span class="token keyword">as</span> <span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">burn</span><span class="token punctuation">(</span>cpi_ctx<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">CreateMint</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[account(
        mut,
        address = ADMIN_PUBKEY
    )]</span>
    <span class="token keyword">pub</span> admin<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">// The PDA is both the address of the mint account and the mint authority</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        init<span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;reward&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
        payer <span class="token operator">=</span> admin<span class="token punctuation">,</span>
        <span class="token namespace">mint<span class="token punctuation">::</span></span>decimals <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">,</span>
        <span class="token namespace">mint<span class="token punctuation">::</span></span>authority <span class="token operator">=</span> reward_token_mint<span class="token punctuation">,</span>

    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> reward_token_mint<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Mint</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">///CHECK: Using &quot;address&quot; constraint to validate metadata account address</span>
    <span class="token attribute attr-name">#[account(
        mut,
        address=find_metadata_account(&amp;reward_token_mint.key()).0
    )]</span>
    <span class="token keyword">pub</span> metadata_account<span class="token punctuation">:</span> <span class="token class-name">UncheckedAccount</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token keyword">pub</span> token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Token</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> token_metadata_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Metadata</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> rent<span class="token punctuation">:</span> <span class="token class-name">Sysvar</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Rent</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">InitPlayer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        init<span class="token punctuation">,</span>
        payer <span class="token operator">=</span> player<span class="token punctuation">,</span>
        space <span class="token operator">=</span> <span class="token number">8</span> <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;player&quot;</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> player<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> player_data<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">PlayerData</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> player<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">KillEnemy</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> player<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;player&quot;</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> player<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> player_data<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">PlayerData</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">// Initialize player token account if it doesn&#39;t exist</span>
    <span class="token attribute attr-name">#[account(
        init_if_needed,
        payer = player,
        associated_token::mint = reward_token_mint,
        associated_token::authority = player
    )]</span>
    <span class="token keyword">pub</span> player_token_account<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">TokenAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;reward&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> reward_token_mint<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Mint</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token keyword">pub</span> token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Token</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> associated_token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">AssociatedToken</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Heal</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> player<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;player&quot;</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> player<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> player_data<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">PlayerData</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token attribute attr-name">#[account(
        mut,
        associated_token::mint = reward_token_mint,
        associated_token::authority = player
    )]</span>
    <span class="token keyword">pub</span> player_token_account<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">TokenAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;reward&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> reward_token_mint<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Mint</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token keyword">pub</span> token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Token</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> associated_token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">AssociatedToken</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[account]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">PlayerData</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> health<span class="token punctuation">:</span> <span class="token keyword">u8</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[error_code]</span>
<span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">ErrorCode</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[msg(<span class="token string">&quot;Not enough health&quot;</span>)]</span>
    <span class="token class-name">NotEnoughHealth</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br></div></div><h3 id="magsimula-sa-kliyente" tabindex="-1"><a class="header-anchor" href="#magsimula-sa-kliyente" aria-hidden="true">#</a> Magsimula sa Kliyente</h3><p>Sa seksyong ito, gagabayan ka namin sa isang simpleng pagpapatupad sa panig ng kliyente para sa pakikipag-ugnayan sa programa. Upang makapagsimula, mag-navigate sa <code>client.ts</code> na file sa Solana Playground, alisin ang placeholder code, at idagdag ang mga snippet ng code mula sa mga sumusunod na seksyon.</p><p>Magsimula sa pamamagitan ng pagdaragdag ng sumusunod na code para sa setup.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Metaplex <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@metaplex-foundation/js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getMint<span class="token punctuation">,</span> getAssociatedTokenAddressSync <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@solana/spl-token&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// metaplex token metadata program ID</span>
<span class="token keyword">const</span> <span class="token constant">TOKEN_METADATA_PROGRAM_ID</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">web3<span class="token punctuation">.</span>PublicKey</span><span class="token punctuation">(</span>
  <span class="token string">&quot;metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s&quot;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// metaplex setup</span>
<span class="token keyword">const</span> metaplex <span class="token operator">=</span> Metaplex<span class="token punctuation">.</span><span class="token function">make</span><span class="token punctuation">(</span>pg<span class="token punctuation">.</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// token metadata</span>
<span class="token keyword">const</span> metadata <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">uri</span><span class="token operator">:</span> <span class="token string">&quot;https://raw.githubusercontent.com/solana-developers/program-examples/new-examples/tokens/tokens/.assets/spl-token.json&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Solana Gold&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">symbol</span><span class="token operator">:</span> <span class="token string">&quot;GOLDSOL&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// reward token mint PDA</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>rewardTokenMintPda<span class="token punctuation">]</span> <span class="token operator">=</span> anchor<span class="token punctuation">.</span>web3<span class="token punctuation">.</span>PublicKey<span class="token punctuation">.</span><span class="token function">findProgramAddressSync</span><span class="token punctuation">(</span>
  <span class="token punctuation">[</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;reward&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  pg<span class="token punctuation">.</span><span class="token constant">PROGRAM_ID</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// player data account PDA</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>playerPDA<span class="token punctuation">]</span> <span class="token operator">=</span> anchor<span class="token punctuation">.</span>web3<span class="token punctuation">.</span>PublicKey<span class="token punctuation">.</span><span class="token function">findProgramAddressSync</span><span class="token punctuation">(</span>
  <span class="token punctuation">[</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;player&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pg<span class="token punctuation">.</span>wallet<span class="token punctuation">.</span>publicKey<span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  pg<span class="token punctuation">.</span><span class="token constant">PROGRAM_ID</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// reward token mint metadata account address</span>
<span class="token keyword">const</span> rewardTokenMintMetadataPDA <span class="token operator">=</span> <span class="token keyword">await</span> metaplex
  <span class="token punctuation">.</span><span class="token function">nfts</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">pdas</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">metadata</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">mint</span><span class="token operator">:</span> rewardTokenMintPda <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// player token account address</span>
<span class="token keyword">const</span> playerTokenAccount <span class="token operator">=</span> <span class="token function">getAssociatedTokenAddressSync</span><span class="token punctuation">(</span>
  rewardTokenMintPda<span class="token punctuation">,</span>
  pg<span class="token punctuation">.</span>wallet<span class="token punctuation">.</span>publicKey
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>Susunod, idagdag ang sumusunod na dalawang function ng helper. Gagamitin ang mga function na ito upang kumpirmahin ang mga transaksyon at kunin ang data ng account.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">logTransaction</span><span class="token punctuation">(</span><span class="token parameter">txHash</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> blockhash<span class="token punctuation">,</span> lastValidBlockHeight <span class="token punctuation">}</span> <span class="token operator">=</span>
    <span class="token keyword">await</span> pg<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">getLatestBlockhash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> pg<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">confirmTransaction</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    blockhash<span class="token punctuation">,</span>
    lastValidBlockHeight<span class="token punctuation">,</span>
    <span class="token literal-property property">signature</span><span class="token operator">:</span> txHash<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Use &#39;solana confirm -v </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>txHash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; to see the logs</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchAccountData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>playerBalance<span class="token punctuation">,</span> playerData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    pg<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">getTokenAccountBalance</span><span class="token punctuation">(</span>playerTokenAccount<span class="token punctuation">)</span><span class="token punctuation">,</span>
    pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>account<span class="token punctuation">.</span>playerData<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>playerPDA<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Player Token Balance: &quot;</span><span class="token punctuation">,</span> playerBalance<span class="token punctuation">.</span>value<span class="token punctuation">.</span>uiAmount<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Player Health: &quot;</span><span class="token punctuation">,</span> playerData<span class="token punctuation">.</span>health<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>Susunod, gamitin ang instruction na <code>createMint</code> para gumawa ng bagong token mint kung wala pa ito.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> txHash<span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> mintData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getMint</span><span class="token punctuation">(</span>pg<span class="token punctuation">.</span>connection<span class="token punctuation">,</span> rewardTokenMintPda<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Mint Already Exists&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
  txHash <span class="token operator">=</span> <span class="token keyword">await</span> pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>methods
    <span class="token punctuation">.</span><span class="token function">createMint</span><span class="token punctuation">(</span>metadata<span class="token punctuation">.</span>uri<span class="token punctuation">,</span> metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span> metadata<span class="token punctuation">.</span>symbol<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">accounts</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">rewardTokenMint</span><span class="token operator">:</span> rewardTokenMintPda<span class="token punctuation">,</span>
      <span class="token literal-property property">metadataAccount</span><span class="token operator">:</span> rewardTokenMintMetadataPDA<span class="token punctuation">,</span>
      <span class="token literal-property property">tokenMetadataProgram</span><span class="token operator">:</span> <span class="token constant">TOKEN_METADATA_PROGRAM_ID</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">rpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">logTransaction</span><span class="token punctuation">(</span>txHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Token Mint: &quot;</span><span class="token punctuation">,</span> rewardTokenMintPda<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>Susunod, tawagan ang instruction na <code>initPlayer</code> para gumawa ng bagong player account kung wala pa.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> playerData <span class="token operator">=</span> <span class="token keyword">await</span> pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>account<span class="token punctuation">.</span>playerData<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>playerPDA<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Player Already Exists&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Player Health: &quot;</span><span class="token punctuation">,</span> playerData<span class="token punctuation">.</span>health<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
  txHash <span class="token operator">=</span> <span class="token keyword">await</span> pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>methods
    <span class="token punctuation">.</span><span class="token function">initPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">accounts</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">playerData</span><span class="token operator">:</span> playerPDA<span class="token punctuation">,</span>
      <span class="token literal-property property">player</span><span class="token operator">:</span> pg<span class="token punctuation">.</span>wallet<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">rpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">logTransaction</span><span class="token punctuation">(</span>txHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Player Account Created&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>Next, invoke the <code>killEnemy</code> instruction.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>txHash <span class="token operator">=</span> <span class="token keyword">await</span> pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>methods
  <span class="token punctuation">.</span><span class="token function">killEnemy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">accounts</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">playerData</span><span class="token operator">:</span> playerPDA<span class="token punctuation">,</span>
    <span class="token literal-property property">playerTokenAccount</span><span class="token operator">:</span> playerTokenAccount<span class="token punctuation">,</span>
    <span class="token literal-property property">rewardTokenMint</span><span class="token operator">:</span> rewardTokenMintPda<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">rpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">logTransaction</span><span class="token punctuation">(</span>txHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Enemy Defeated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">fetchAccountData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Next, invoke the <code>heal</code> instruction.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>txHash <span class="token operator">=</span> <span class="token keyword">await</span> pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>methods
  <span class="token punctuation">.</span><span class="token function">heal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">accounts</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">playerData</span><span class="token operator">:</span> playerPDA<span class="token punctuation">,</span>
    <span class="token literal-property property">playerTokenAccount</span><span class="token operator">:</span> playerTokenAccount<span class="token punctuation">,</span>
    <span class="token literal-property property">rewardTokenMint</span><span class="token operator">:</span> rewardTokenMintPda<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">rpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">logTransaction</span><span class="token punctuation">(</span>txHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Player Healed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">fetchAccountData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Panghuli, patakbuhin ang kliyente sa pamamagitan ng pag-click sa pindutang &quot;Run&quot; sa Solana Playground. Maaari mong kopyahin ang address ng Token Mint na naka-print sa console at i-verify sa Solana Explorer na ang token ay mayroon na ngayong metadata. Ang output ay dapat na katulad ng sumusunod:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Running client...
  client.ts:
    Use &#39;solana confirm -v 3AWnpt2Wy6jQckue4QeKsgDNKhKkhpewPmRtxvJpzxGgvK9XK9KEpTiUzAQ5vSC6CUoUjc6xWZCtrihVrFy8sACC&#39; to see the logs
    Token Mint:  3eS7hdyeVX5g8JGhn3Z7qFXJaewoJ8hzgvubovQsPm4S
    Use &#39;solana confirm -v 63jbBr5U4LG75TiiHfz65q7yKJfHDhGP2ocCiDat5M2k4cWtUMAx9sHvxhnEguLDKXMbDUQKUt1nhvyQkXoDhxst&#39; to see the logs
    Player Account Created
    Use &#39;solana confirm -v 2ziK41WLoxfEHvtUgc5c1SyKCAr5FvAS54ARBJrjqh9GDwzYqu7qWCwHJCgMZyFEVovYK5nUZhDRHPTMrTjq1Mm6&#39; to see the logs
    Enemy Defeated
    Player Token Balance:  1
    Player Health:  90
    Use &#39;solana confirm -v 2QoAH22Q3xXz9t2TYRycQMqpEmauaRvmUfZ7ZNKUEoUyHWqpjW972VD3eZyeJrXsviaiCC3g6TE54oKmKbFQf2Q7&#39; to see the logs
    Player Healed
    Player Token Balance:  0
    Player Health:  100
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,53);function y(f,_){const p=o("ExternalLinkIcon");return e(),c(u,null,[r,a("p",null,[k,a("a",m,[b,l(p)]),g]),d],64)}var h=t(i,[["render",y]]);export{h as default};
