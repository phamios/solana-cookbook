import{_ as r,r as e,o as i,c as k,b as a,w as t,a as n,F as m,e as d,d as s}from"./app.07ce7a66.js";var b="/assets/scfsd.cc67ec33.png";const f={},g=d(`<h1 id="prueba-de-paridad-de-caracteristicas" tabindex="-1"><a class="header-anchor" href="#prueba-de-paridad-de-caracteristicas" aria-hidden="true">#</a> Prueba de paridad de caracter\xEDsticas</h1><p>Al probar su programa, la garant\xEDa de que se ejecutar\xE1 de la misma manera en varios clusters es esencial tanto para la calidad como para producir los resultados esperados.</p><h2 id="hechos" tabindex="-1"><a class="header-anchor" href="#hechos" aria-hidden="true">#</a> Hechos</h2><div class="custom-container tip"><p class="custom-container-title">Hoja de hechos</p><ul><li>Las caracter\xEDsticas son capacidades que se introducen en los validadores de Solana y requieren activaci\xF3n para ser utilizadas.</li><li>Las caracter\xEDsticas pueden activarse en un cl\xFAster (p. ej., testnet) pero no en otro (p. ej., mainnet-beta).</li><li>Sin embargo; al ejecutar <code>solana-test-validator</code> localmente, todas las caracter\xEDsticas disponibles se activan autom\xE1ticamente. El resultado es que cuando se prueba localmente, las capacidades y los resultados puede que no sean las mismas que al ejecutar en un cl\xFAster diferente!</li></ul></div><h2 id="escenario" tabindex="-1"><a class="header-anchor" href="#escenario" aria-hidden="true">#</a> Escenario</h2><p>Suponga que tiene una Transacci\xF3n que conten\xEDa tres (3) instrucciones y cada instrucci\xF3n consume aproximadamente 100_000 Unidades de c\xF3mputo (CU). Cuando se ejecuta en una versi\xF3n de Solana 1.8.x, observar\xEDa un consumo de CU de instrucci\xF3n similar a:</p><table><thead><tr><th>Instruction</th><th>Inicio de CU</th><th>Ejecuci\xF3n</th><th>CU Restante</th></tr></thead><tbody><tr><td>1</td><td>200_000</td><td>-100_000</td><td>100_000</td></tr><tr><td>2</td><td>200_000</td><td>-100_000</td><td>100_000</td></tr><tr><td>3</td><td>200_000</td><td>-100_000</td><td>100_000</td></tr></tbody></table><p>En Solana 1.9.2, se introdujo una funci\xF3n llamada &#39;l\xEDmite de c\xF3mputo amplio de transacci\xF3n&#39; donde una transacci\xF3n, de forma predeterminada, tiene un presupuesto de 200_000 CU y las instrucciones encapsuladas <strong><em>draw down</em></strong> de ese presupuesto de transacci\xF3n. Corriendo la misma transacci\xF3n como se se\xF1al\xF3 anteriormente tendr\xEDa un comportamiento muy diferente:</p><table><thead><tr><th>Instruction</th><th>Inicio de CU</th><th>Ejecuci\xF3n</th><th>CU Restante</th></tr></thead><tbody><tr><td>1</td><td>200_000</td><td>-100_000</td><td>100_000</td></tr><tr><td>2</td><td>100_000</td><td>-100_000</td><td>0</td></tr><tr><td>3</td><td>0</td><td>FALLA!!!</td><td>FALLA!!!</td></tr></tbody></table><p>\xA1Ay! Si no estuviera al tanto de esto, probablemente se sentir\xEDa frustrado ya que no hubo cambios en su comportamiento de instrucci\xF3n que causar\xEDa esto. En devnet funcion\xF3 bien, pero localmente estaba fallando?!?</p><p>Existe la posibilidad de aumentar el presupuesto general de transacciones, digamos 300_000 CU, y que no falle pero esto demuestra por qu\xE9 probar con <strong><em>Feature Parity</em></strong> proporciona una forma proactiva de evitar confusiones.</p><h2 id="estado-de-la-funcion" tabindex="-1"><a class="header-anchor" href="#estado-de-la-funcion" aria-hidden="true">#</a> Estado de la funci\xF3n</h2><p>Es bastante f\xE1cil verificar qu\xE9 funciones est\xE1n habilitadas para un cl\xFAster en particular con el comando <code>solana feature status</code>.</p><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana feature status -ud   // Displays by feature status for devnet
solana feature status -ut   // Displays for testnet
solana feature status -um   // Displays for mainnet-beta
solana feature status -ul   // Displays for local, requires running solana-test-validator
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Alternativamente, puede usar una herramienta como <a href="#resources">scfsd</a> para observar el estado de todas las funciones en los cl\xFAsteres, que mostrar\xEDa la pantalla parcial que se muestra aqu\xED, y no requiere que <code>solana-test-validator</code> se est\xE9 ejecutando:</p><img src="`+b+`" alt="Feature Status Heatmap"><h2 id="pruebas-de-paridad" tabindex="-1"><a class="header-anchor" href="#pruebas-de-paridad" aria-hidden="true">#</a> Pruebas de paridad</h2><p>Como se se\xF1al\xF3 anteriormente, <code>solana-test-validator</code> activa <strong>todas</strong> las caracter\xEDsticas autom\xE1ticamente. Entonces, para responder a la pregunta &quot;\xBFC\xF3mo puedo probar localmente en un entorno que tiene paridad con devnet, testnet o incluso mainnet-beta?&quot;.</p><p>Soluci\xF3n: PRs fueron agregados a Solana 1.9.6 para permitir la desactivaci\xF3n de funciones:</p><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana-test-validator --deactivate-feature &lt;FEATURE_PUBKEY&gt; ...
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="demostracion-sencilla" tabindex="-1"><a class="header-anchor" href="#demostracion-sencilla" aria-hidden="true">#</a> Demostraci\xF3n sencilla</h2><p>Suponga que tiene un programa simple que registra los datos. Y usted esta probando una transacci\xF3n que agrega dos (2) instrucciones para su programa.</p><h3 id="todas-las-funciones-activadas" tabindex="-1"><a class="header-anchor" href="#todas-las-funciones-activadas" aria-hidden="true">#</a> Todas las funciones activadas</h3><ol><li>Inicie el validador de prueba en una terminal:</li></ol><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana config set -ul
solana-test-validator -l ./ledger --bpf-program target/deploy/PROGNAME.so --reset\`
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="2"><li>En otra terminal, inicia el transmisor de registros:</li></ol><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana logs
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="3"><li>Luego ejecuta su transacci\xF3n. Ver\xEDa algo similar en el terminal de registro (editado para mayor claridad):</li></ol><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc invoke [1]
Program log: process_instruction: PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc: 0 accounts, data=[0]
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc consumed 12843 of 200000 compute units
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc success
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc invoke [1]
Program log: process_instruction: PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc: 0 accounts, data=[1]
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc consumed 12843 of 187157 compute units
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc success[
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>Debido a que nuestra caracter\xEDstica &#39;l\xEDmite de c\xF3mputo de toda la transacci\xF3n&#39; se activa autom\xE1ticamente de forma predeterminada, observamos cada instrucci\xF3n que reduce CU del presupuesto de transacci\xF3n inicial de 200_000 CU.</p><h3 id="funciones-selectivas-desactivadas" tabindex="-1"><a class="header-anchor" href="#funciones-selectivas-desactivadas" aria-hidden="true">#</a> Funciones selectivas desactivadas</h3><ol><li>Para esta ejecuci\xF3n, queremos que el comportamiento del presupuesto de CU est\xE9 a la par con lo que se ejecuta en devnet. Usando la(s) herramienta(s) descrita(s) en <a href="#feature-status">Estado de la caracter\xEDsticas</a> aislamos la clave p\xFAblica <code>transaction wide computing cap</code> y usamos <code>--deactivate-feature</code> en el inicio del validador de prueba</li></ol><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana-test-validator -l ./ledger --deactivate-feature 5ekBxc8itEnPv4NzGJtr8BVVQLNMQuLMNQQj7pHoLNZ9 --bpf-program target/deploy/PROGNAME.so --reset\`
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>Ahora vemos en nuestros registros que nuestras instrucciones ahora tienen su propio presupuesto de 200_000 CU (editado para mayor claridad) que es actualmente el estado en todos los clusters:</li></ol><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc invoke [1]
Program log: process_instruction: PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc: 0 accounts, data=[0]
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc consumed 12843 of 200000 compute units
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc success
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc invoke [1]
Program log: process_instruction: PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc: 0 accounts, data=[0]
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc consumed 12843 of 200000 compute units
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc success
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="pruebas-de-paridad-completa" tabindex="-1"><a class="header-anchor" href="#pruebas-de-paridad-completa" aria-hidden="true">#</a> Pruebas de paridad completa</h2><p>Puede estar en paridad total con un cl\xFAster espec\xEDfico identificando cada funci\xF3n que no est\xE1 a\xFAn activada y agregue <code>--deactivate-feature &lt;FEATURE_PUBKEY&gt;</code> para cada uno al invocar <code>solana-test-validator</code>:</p><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana-test-validator --deactivate-feature PUBKEY_1 --deactivate-feature PUBKEY_2 ...
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Alternativamente, <a href="#resources">scfsd</a> proporciona un interruptor que genera una salida para la funci\xF3n desactivada para un cl\xFAster para que se use directamente al inicio de <code>solana-test-validator</code>:</p><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana-test-validator -l ./.ledger $(scfsd -c devnet -k -t)
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Si abre otra terminal, mientras el validador se est\xE1 ejecutando, y ejecuta <code>solana feature status</code> ver\xE1 caracter\xEDsticas desactivadas que se encontraron desactivadas en devnet</p><h2 id="pruebas-de-paridad-completa-programaticamente" tabindex="-1"><a class="header-anchor" href="#pruebas-de-paridad-completa-programaticamente" aria-hidden="true">#</a> Pruebas de paridad completa program\xE1ticamente</h2><p>Para aquellos que controlan la ejecuci\xF3n del validador de prueba dentro de su c\xF3digo de prueba, modificando las caracter\xEDsticas activadas/desactivadas del validador de prueba es posible usando TestValidatorGenesis. Con Solana 1.9.6 se ha agregado una funci\xF3n al generador de validadores para admitir esto.</p><p>En la ra\xEDz de la carpeta de su programa, cree una nueva carpeta llamada <code>tests</code> y agregue un archivo llamado <code>parity_test.rs</code>. Aqu\xED estar\xE1n las funciones utilizadas por cada prueba.</p>`,44),_=n("div",{class:"language-rust ext-rs line-numbers-mode"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token attribute attr-name"},"#[cfg(test)]"),s(`
`),n("span",{class:"token keyword"},"mod"),s(),n("span",{class:"token module-declaration namespace"},"tests"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token namespace"},[s("std"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),s("error"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token namespace"},[s("path"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"PathBuf"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"str"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"FromStr"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"// Use gadget-scfs to get interegate feature lists from clusters"),s(`
    `),n("span",{class:"token comment"},'// must have `gadgets-scfs = "0.2.0" in Cargo.toml [dev-dependencies] to use'),s(`
    `),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token namespace"},[s("gadgets_scfs"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"ScfsCriteria"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"ScfsMatrix"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token constant"},"SCFS_DEVNET"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token namespace"},[s("solana_client"),n("span",{class:"token punctuation"},"::"),s("rpc_client"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"RpcClient"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token namespace"},[s("solana_program"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),n("span",{class:"token namespace"},[s("instruction"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token namespace"},[s("message"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Message"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token namespace"},[s("pubkey"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Pubkey"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token namespace"},[s("solana_sdk"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// Added in Solana 1.9.2"),s(`
        `),n("span",{class:"token namespace"},[s("compute_budget"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"ComputeBudgetInstruction"),n("span",{class:"token punctuation"},","),s(`
        pubkey`),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token namespace"},[s("signature"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"Keypair"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Signature"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token namespace"},[s("signer"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Signer"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token namespace"},[s("transaction"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Transaction"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// Extended in Solana 1.9.6"),s(`
    `),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token namespace"},[s("solana_test_validator"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"TestValidator"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"TestValidatorGenesis"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"/// Location/Name of ProgramTestGenesis ledger"),s(`
    `),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"str"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"./.ledger"'),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"/// Path to BPF program (*.so) change if needed"),s(`
    `),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token constant"},"PROG_PATH"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"str"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"target/deploy/"'),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"/// Program name from program Cargo.toml"),s(`
    `),n("span",{class:"token comment"},"/// FILL IN WITH YOUR PROGRAM_NAME"),s(`
    `),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token constant"},"PROG_NAME"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"str"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"PROGRAM_NAME"'),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"/// Program public key"),s(`
    `),n("span",{class:"token comment"},"/// FILL IN WITH YOUR PROGRAM'S PUBLIC KEY str"),s(`
    `),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Pubkey"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token macro property"},"pubkey!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"PROGRAMS_PUBLIC_KEY_BASE58_STRING"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"/// 'transaction wide compute cap' public key"),s(`
    `),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token constant"},"TXWIDE_LIMITS"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Pubkey"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token macro property"},"pubkey!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"5ekBxc8itEnPv4NzGJtr8BVVQLNMQuLMNQQj7pHoLNZ9"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"/// Setup the test validator passing features"),s(`
    `),n("span",{class:"token comment"},"/// you want to deactivate before running transactions"),s(`
    `),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"setup_validator"),n("span",{class:"token punctuation"},"("),s(`
        invalidate_features`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Pubkey"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TestValidator"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Keypair"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),s(),n("span",{class:"token namespace"},[s("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// Extend environment variable to include our program location"),s(`
        `),n("span",{class:"token namespace"},[s("std"),n("span",{class:"token punctuation"},"::"),s("env"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"set_var"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"BPF_OUT_DIR"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token constant"},"PROG_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// Instantiate the test validator"),s(`
        `),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" test_validator "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"TestValidatorGenesis"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// Once instantiated, TestValidatorGenesis configuration functions follow"),s(`
        `),n("span",{class:"token comment"},"// a builder pattern enabling chaining of settings function calls"),s(`
        `),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token punctuation"},"("),s("test_validator"),n("span",{class:"token punctuation"},","),s(" kp"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(` test_validator
            `),n("span",{class:"token comment"},"// Set the ledger path and name"),s(`
            `),n("span",{class:"token comment"},"// maps to `solana-test-validator --ledger <DIR>`"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ledger_path"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"// Load our program. Ignored if reusing ledger"),s(`
            `),n("span",{class:"token comment"},"// maps to `solana-test-validator --bpf-program <ADDRESS_OR_PATH BPF_PROGRAM.SO>`"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add_program"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_NAME"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"// Identify features to deactivate. Ignored if reusing ledger"),s(`
            `),n("span",{class:"token comment"},"// maps to `solana-test-validator --deactivate-feature <FEATURE_PUBKEY>`"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"deactivate_features"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("invalidate_features"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"// Start the test validator"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"start"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"Ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("test_validator"),n("span",{class:"token punctuation"},","),s(" kp"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token comment"},"/// Convenience function to remove existing ledger before TestValidatorGenesis setup"),s(`
    `),n("span",{class:"token comment"},"/// maps to `solana-test-validator ... --reset`"),s(`
    `),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"clean_ledger_setup_validator"),n("span",{class:"token punctuation"},"("),s(`
        invalidate_features`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Pubkey"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TestValidator"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Keypair"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),s(),n("span",{class:"token namespace"},[s("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token class-name"},"PathBuf"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"from_str"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"exists"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token namespace"},[s("std"),n("span",{class:"token punctuation"},"::"),s("fs"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"remove_dir_all"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token function"},"setup_validator"),n("span",{class:"token punctuation"},"("),s("invalidate_features"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token comment"},"/// Submits a transaction with programs instruction"),s(`
    `),n("span",{class:"token comment"},"/// Boiler plate"),s(`
    `),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"submit_transaction"),n("span",{class:"token punctuation"},"("),s(`
        rpc_client`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"RpcClient"),n("span",{class:"token punctuation"},","),s(`
        wallet_signer`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"dyn"),s(),n("span",{class:"token class-name"},"Signer"),n("span",{class:"token punctuation"},","),s(`
        instructions`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Signature"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),s(),n("span",{class:"token namespace"},[s("std"),n("span",{class:"token punctuation"},"::"),s("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" transaction "),n("span",{class:"token operator"},"="),s(`
            `),n("span",{class:"token class-name"},"Transaction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_unsigned"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Message"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("instructions"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("wallet_signer"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"pubkey"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"let"),s(" recent_blockhash "),n("span",{class:"token operator"},"="),s(` rpc_client
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_latest_blockhash"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),s("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),s(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: unable to get recent blockhash: {}"'),n("span",{class:"token punctuation"},","),s(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),s(`
        transaction
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"try_sign"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),s("wallet_signer"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" recent_blockhash"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),s("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),s(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: failed to sign transaction: {}"'),n("span",{class:"token punctuation"},","),s(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"let"),s(" signature "),n("span",{class:"token operator"},"="),s(` rpc_client
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"send_and_confirm_transaction"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("transaction"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),s("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),s(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: send transaction: {}"'),n("span",{class:"token punctuation"},","),s(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"Ok"),n("span",{class:"token punctuation"},"("),s("signature"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token comment"},"// UNIT TEST FOLLOWS"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br"),n("span",{class:"line-number"},"31"),n("br"),n("span",{class:"line-number"},"32"),n("br"),n("span",{class:"line-number"},"33"),n("br"),n("span",{class:"line-number"},"34"),n("br"),n("span",{class:"line-number"},"35"),n("br"),n("span",{class:"line-number"},"36"),n("br"),n("span",{class:"line-number"},"37"),n("br"),n("span",{class:"line-number"},"38"),n("br"),n("span",{class:"line-number"},"39"),n("br"),n("span",{class:"line-number"},"40"),n("br"),n("span",{class:"line-number"},"41"),n("br"),n("span",{class:"line-number"},"42"),n("br"),n("span",{class:"line-number"},"43"),n("br"),n("span",{class:"line-number"},"44"),n("br"),n("span",{class:"line-number"},"45"),n("br"),n("span",{class:"line-number"},"46"),n("br"),n("span",{class:"line-number"},"47"),n("br"),n("span",{class:"line-number"},"48"),n("br"),n("span",{class:"line-number"},"49"),n("br"),n("span",{class:"line-number"},"50"),n("br"),n("span",{class:"line-number"},"51"),n("br"),n("span",{class:"line-number"},"52"),n("br"),n("span",{class:"line-number"},"53"),n("br"),n("span",{class:"line-number"},"54"),n("br"),n("span",{class:"line-number"},"55"),n("br"),n("span",{class:"line-number"},"56"),n("br"),n("span",{class:"line-number"},"57"),n("br"),n("span",{class:"line-number"},"58"),n("br"),n("span",{class:"line-number"},"59"),n("br"),n("span",{class:"line-number"},"60"),n("br"),n("span",{class:"line-number"},"61"),n("br"),n("span",{class:"line-number"},"62"),n("br"),n("span",{class:"line-number"},"63"),n("br"),n("span",{class:"line-number"},"64"),n("br"),n("span",{class:"line-number"},"65"),n("br"),n("span",{class:"line-number"},"66"),n("br"),n("span",{class:"line-number"},"67"),n("br"),n("span",{class:"line-number"},"68"),n("br"),n("span",{class:"line-number"},"69"),n("br"),n("span",{class:"line-number"},"70"),n("br"),n("span",{class:"line-number"},"71"),n("br"),n("span",{class:"line-number"},"72"),n("br"),n("span",{class:"line-number"},"73"),n("br"),n("span",{class:"line-number"},"74"),n("br"),n("span",{class:"line-number"},"75"),n("br"),n("span",{class:"line-number"},"76"),n("br"),n("span",{class:"line-number"},"77"),n("br"),n("span",{class:"line-number"},"78"),n("br"),n("span",{class:"line-number"},"79"),n("br"),n("span",{class:"line-number"},"80"),n("br"),n("span",{class:"line-number"},"81"),n("br"),n("span",{class:"line-number"},"82"),n("br"),n("span",{class:"line-number"},"83"),n("br"),n("span",{class:"line-number"},"84"),n("br"),n("span",{class:"line-number"},"85"),n("br"),n("span",{class:"line-number"},"86"),n("br"),n("span",{class:"line-number"},"87"),n("br"),n("span",{class:"line-number"},"88"),n("br"),n("span",{class:"line-number"},"89"),n("br"),n("span",{class:"line-number"},"90"),n("br"),n("span",{class:"line-number"},"91"),n("br"),n("span",{class:"line-number"},"92"),n("br")])],-1),v=n("div",{class:"language-rust ext-rs line-numbers-mode"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token comment"},"/// Setup the test validator passing features"),s(`
`),n("span",{class:"token comment"},"/// you want to deactivate before running transactions"),s(`
`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"setup_validator"),n("span",{class:"token punctuation"},"("),s(`
    invalidate_features`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Pubkey"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TestValidator"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Keypair"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),s(),n("span",{class:"token namespace"},[s("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// Extend environment variable to include our program location"),s(`
    `),n("span",{class:"token namespace"},[s("std"),n("span",{class:"token punctuation"},"::"),s("env"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"set_var"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"BPF_OUT_DIR"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token constant"},"PROG_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// Instantiate the test validator"),s(`
    `),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" test_validator "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"TestValidatorGenesis"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// Once instantiated, TestValidatorGenesis configuration functions follow"),s(`
    `),n("span",{class:"token comment"},"// a builder pattern enabling chaining of settings function calls"),s(`
    `),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token punctuation"},"("),s("test_validator"),n("span",{class:"token punctuation"},","),s(" kp"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(` test_validator
        `),n("span",{class:"token comment"},"// Set the ledger path and name"),s(`
        `),n("span",{class:"token comment"},"// maps to `solana-test-validator --ledger <DIR>`"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ledger_path"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"// Load our program. Ignored if reusing ledger"),s(`
        `),n("span",{class:"token comment"},"// maps to `solana-test-validator --bpf-program <ADDRESS_OR_PATH BPF_PROGRAM.SO>`"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add_program"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_NAME"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"// Identify features to deactivate. Ignored if reusing ledger"),s(`
        `),n("span",{class:"token comment"},"// maps to `solana-test-validator --deactivate-feature <FEATURE_PUBKEY>`"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"deactivate_features"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("invalidate_features"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"// Start the test validator"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"start"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"Ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("test_validator"),n("span",{class:"token punctuation"},","),s(" kp"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"/// Convenience function to remove existing ledger before TestValidatorGenesis setup"),s(`
`),n("span",{class:"token comment"},"/// maps to `solana-test-validator ... --reset`"),s(`
`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"clean_ledger_setup_validator"),n("span",{class:"token punctuation"},"("),s(`
    invalidate_features`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Pubkey"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TestValidator"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Keypair"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),s(),n("span",{class:"token namespace"},[s("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token class-name"},"PathBuf"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"from_str"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"exists"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token namespace"},[s("std"),n("span",{class:"token punctuation"},"::"),s("fs"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"remove_dir_all"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token function"},"setup_validator"),n("span",{class:"token punctuation"},"("),s("invalidate_features"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"/// Submits a transaction with programs instruction"),s(`
`),n("span",{class:"token comment"},"/// Boiler plate"),s(`
`),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"submit_transaction"),n("span",{class:"token punctuation"},"("),s(`
    rpc_client`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"RpcClient"),n("span",{class:"token punctuation"},","),s(`
    wallet_signer`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"dyn"),s(),n("span",{class:"token class-name"},"Signer"),n("span",{class:"token punctuation"},","),s(`
    instructions`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Signature"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),s(),n("span",{class:"token namespace"},[s("std"),n("span",{class:"token punctuation"},"::"),s("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" transaction "),n("span",{class:"token operator"},"="),s(`
        `),n("span",{class:"token class-name"},"Transaction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_unsigned"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Message"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("instructions"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("wallet_signer"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"pubkey"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" recent_blockhash "),n("span",{class:"token operator"},"="),s(` rpc_client
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_latest_blockhash"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),s("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),s(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: unable to get recent blockhash: {}"'),n("span",{class:"token punctuation"},","),s(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),s(`
    transaction
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"try_sign"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),s("wallet_signer"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" recent_blockhash"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),s("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),s(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: failed to sign transaction: {}"'),n("span",{class:"token punctuation"},","),s(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" signature "),n("span",{class:"token operator"},"="),s(` rpc_client
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"send_and_confirm_transaction"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("transaction"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),s("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),s(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: send transaction: {}"'),n("span",{class:"token punctuation"},","),s(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"Ok"),n("span",{class:"token punctuation"},"("),s("signature"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br"),n("span",{class:"line-number"},"31"),n("br"),n("span",{class:"line-number"},"32"),n("br"),n("span",{class:"line-number"},"33"),n("br"),n("span",{class:"line-number"},"34"),n("br"),n("span",{class:"line-number"},"35"),n("br"),n("span",{class:"line-number"},"36"),n("br"),n("span",{class:"line-number"},"37"),n("br"),n("span",{class:"line-number"},"38"),n("br"),n("span",{class:"line-number"},"39"),n("br"),n("span",{class:"line-number"},"40"),n("br"),n("span",{class:"line-number"},"41"),n("br"),n("span",{class:"line-number"},"42"),n("br"),n("span",{class:"line-number"},"43"),n("br"),n("span",{class:"line-number"},"44"),n("br"),n("span",{class:"line-number"},"45"),n("br"),n("span",{class:"line-number"},"46"),n("br"),n("span",{class:"line-number"},"47"),n("br"),n("span",{class:"line-number"},"48"),n("br"),n("span",{class:"line-number"},"49"),n("br"),n("span",{class:"line-number"},"50"),n("br"),n("span",{class:"line-number"},"51"),n("br"),n("span",{class:"line-number"},"52"),n("br"),n("span",{class:"line-number"},"53"),n("br"),n("span",{class:"line-number"},"54"),n("br"),n("span",{class:"line-number"},"55"),n("br"),n("span",{class:"line-number"},"56"),n("br"),n("span",{class:"line-number"},"57"),n("br")])],-1),h=n("p",null,[s("Ahora podemos agregar funciones de prueba en el cuerpo de "),n("code",null,"mod test {...}"),s(' para demostrar el valor predeterminado de configuraci\xF3n del validador (todas las funciones habilitadas) y luego deshabilitando el "l\xEDmite de c\xF3mputo de toda la transacci\xF3n" como los ejemplos anteriores ejecutando '),n("code",null,"solana-test-validator"),s(" desde la l\xEDnea de comando.")],-1),y=n("div",{class:"language-rust ext-rs line-numbers-mode"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token attribute attr-name"},"#[test]"),s(`
`),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"test_base_pass"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// Run with all features activated (default for TestValidatorGenesis)"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" inv_feat "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// Start validator with clean (new) ledger"),s(`
    `),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token punctuation"},"("),s("test_validator"),n("span",{class:"token punctuation"},","),s(" main_payer"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"clean_ledger_setup_validator"),n("span",{class:"token punctuation"},"("),s("inv_feat"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// Get the RpcClient"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" connection "),n("span",{class:"token operator"},"="),s(" test_validator"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_rpc_client"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// Capture our programs log statements"),s(`
    `),n("span",{class:"token namespace"},[s("solana_logger"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"setup_with_default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"solana_runtime::message=debug"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"// This example doesn't require sending any accounts to program"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" accounts "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// Build instruction array and submit transaction"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" txn "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"submit_transaction"),n("span",{class:"token punctuation"},"("),s(`
        `),n("span",{class:"token operator"},"&"),s("connection"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token operator"},"&"),s("main_payer"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token comment"},"// Add two (2) instructions to transaction to demonstrate"),s(`
        `),n("span",{class:"token comment"},"// that each instruction CU draws down from default Transaction CU (200_000)"),s(`
        `),n("span",{class:"token comment"},"// Replace with instructions that make sense for your program"),s(`
        `),n("span",{class:"token punctuation"},"["),s(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"0u8"),n("span",{class:"token punctuation"},","),s(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"1u8"),n("span",{class:"token punctuation"},","),s(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token punctuation"},"]"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token macro property"},"assert!"),n("span",{class:"token punctuation"},"("),s("txn"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is_ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br")])],-1),w=n("div",{class:"language-rust ext-rs line-numbers-mode"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token attribute attr-name"},"#[test]"),s(`
`),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"test_deactivate_tx_cu_pass"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// Run with all features activated except 'transaction wide compute cap'"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" inv_feat "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),n("span",{class:"token constant"},"TXWIDE_LIMITS"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// Start validator with clean (new) ledger"),s(`
    `),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token punctuation"},"("),s("test_validator"),n("span",{class:"token punctuation"},","),s(" main_payer"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"clean_ledger_setup_validator"),n("span",{class:"token punctuation"},"("),s("inv_feat"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// Get the RpcClient"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" connection "),n("span",{class:"token operator"},"="),s(" test_validator"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_rpc_client"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// Capture our programs log statements"),s(`
    `),n("span",{class:"token namespace"},[s("solana_logger"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"setup_with_default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"solana_runtime::message=debug"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"// This example doesn't require sending any accounts to program"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" accounts "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// Build instruction array and submit transaction"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" txn "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"submit_transaction"),n("span",{class:"token punctuation"},"("),s(`
        `),n("span",{class:"token operator"},"&"),s("connection"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token operator"},"&"),s("main_payer"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token punctuation"},"["),s(`
            `),n("span",{class:"token comment"},"// This instruction adds CU to transaction budget (1.9.2) but does nothing"),s(`
            `),n("span",{class:"token comment"},"// when we deactivate the 'transaction wide compute cap' feature"),s(`
            `),n("span",{class:"token class-name"},"ComputeBudgetInstruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"request_units"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"400_000u32"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
            `),n("span",{class:"token comment"},"// Add two (2) instructions to transaction"),s(`
            `),n("span",{class:"token comment"},"// Replace with instructions that make sense for your program"),s(`
            `),n("span",{class:"token comment"},"// You will see that each instruction has the 1.8.x 200_000 CU per budget"),s(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"0u8"),n("span",{class:"token punctuation"},","),s(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"1u8"),n("span",{class:"token punctuation"},","),s(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token punctuation"},"]"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token macro property"},"assert!"),n("span",{class:"token punctuation"},"("),s("txn"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is_ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br"),n("span",{class:"line-number"},"31"),n("br")])],-1),P=n("p",null,[s("Alternativamente, el "),n("a",{href:"#resources"},"gadget del motor scfs"),s(" puede producir un vector completo de desactivado de caracter\xEDsticas de un cl\xFAster. Lo siguiente demuestra el uso de ese motor para obtener una lista de todas las funciones desactivadas para devnet.")],-1),x=n("div",{class:"language-rust ext-rs line-numbers-mode"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token attribute attr-name"},"#[test]"),s(`
`),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"test_devnet_parity_pass"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// Use gadget-scfs to get all deactivated features from devnet"),s(`
    `),n("span",{class:"token comment"},'// must have `gadgets-scfs = "0.2.0" in Cargo.toml to use'),s(`
    `),n("span",{class:"token comment"},"// Here we setup for a run that samples features only"),s(`
    `),n("span",{class:"token comment"},"// from devnet"),s(`
    `),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" my_matrix "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"ScfsMatrix"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ScfsCriteria"),s(),n("span",{class:"token punctuation"},"{"),s(`
        clusters`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),n("span",{class:"token constant"},"SCFS_DEVNET"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_string"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token punctuation"},".."),n("span",{class:"token class-name"},"Default"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// Run the sampler matrix"),s(`
    `),n("span",{class:"token macro property"},"assert!"),n("span",{class:"token punctuation"},"("),s("my_matrix"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is_ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// Get all deactivated features"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" deactivated "),n("span",{class:"token operator"},"="),s(` my_matrix
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_features"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"ScfsMatrix"),n("span",{class:"token punctuation"},"::"),s("any_inactive"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// Confirm we have them"),s(`
    `),n("span",{class:"token macro property"},"assert_ne!"),n("span",{class:"token punctuation"},"("),s("deactivated"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"len"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// Setup test validator and logging while deactivating all"),s(`
    `),n("span",{class:"token comment"},"// features that are deactivated in devnet"),s(`
    `),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token punctuation"},"("),s("test_validator"),n("span",{class:"token punctuation"},","),s(" main_payer"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"clean_ledger_setup_validator"),n("span",{class:"token punctuation"},"("),s("deactivated"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" connection "),n("span",{class:"token operator"},"="),s(" test_validator"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_rpc_client"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token namespace"},[s("solana_logger"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"setup_with_default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"solana_runtime::message=debug"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"let"),s(" accounts "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" txn "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"submit_transaction"),n("span",{class:"token punctuation"},"("),s(`
        `),n("span",{class:"token operator"},"&"),s("connection"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token operator"},"&"),s("main_payer"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token punctuation"},"["),s(`
            `),n("span",{class:"token comment"},"// Add two (2) instructions to transaction"),s(`
            `),n("span",{class:"token comment"},"// Replace with instructions that make sense for your program"),s(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"0u8"),n("span",{class:"token punctuation"},","),s(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"1u8"),n("span",{class:"token punctuation"},","),s(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token punctuation"},"]"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token macro property"},"assert!"),n("span",{class:"token punctuation"},"("),s("txn"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is_ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br"),n("span",{class:"line-number"},"31"),n("br"),n("span",{class:"line-number"},"32"),n("br"),n("span",{class:"line-number"},"33"),n("br"),n("span",{class:"line-number"},"34"),n("br"),n("span",{class:"line-number"},"35"),n("br"),n("span",{class:"line-number"},"36"),n("br"),n("span",{class:"line-number"},"37"),n("br"),n("span",{class:"line-number"},"38"),n("br"),n("span",{class:"line-number"},"39"),n("br")])],-1),G=n("p",null,"Happy Testing!",-1),B=n("h2",{id:"recursos",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#recursos","aria-hidden":"true"},"#"),s(" Recursos")],-1),E={href:"https://github.com/FrankC01/solana-gadgets/tree/main/rust/scfsd",target:"_blank",rel:"noopener noreferrer"},R=s("scfsd"),L={href:"https://github.com/FrankC01/solana-gadgets/tree/main/rust/gadgets-scfs",target:"_blank",rel:"noopener noreferrer"},A=s("gadget-scfs");function S(T,D){const l=e("SolanaCodeGroupItem"),u=e("SolanaCodeGroup"),o=e("CodeGroupItem"),c=e("CodeGroup"),p=e("ExternalLinkIcon");return i(),k(m,null,[g,a(u,null,{default:t(()=>[a(l,{title:"Test Boiler Plate",active:""},{default:t(()=>[_]),preview:t(()=>[v]),_:1})]),_:1}),h,a(c,null,{default:t(()=>[a(o,{title:"All Features Test"},{default:t(()=>[y]),_:1}),a(o,{title:"Disable Tx CU Test",active:""},{default:t(()=>[w]),_:1})]),_:1}),P,a(c,null,{default:t(()=>[a(o,{title:"Devnet Parity"},{default:t(()=>[x]),_:1})]),_:1}),G,B,n("p",null,[n("a",E,[R,a(p)])]),n("p",null,[n("a",L,[A,a(p)])])],64)}var U=r(f,[["render",S]]);export{U as default};
