import{_ as e,r as o,o as c,c as l,a as n,b as p,F as u,e as t,d as s}from"./app.07ce7a66.js";const i={},r=t('<h1 id="utilisation-de-jetons-dans-des-jeux-sur-solana" tabindex="-1"><a class="header-anchor" href="#utilisation-de-jetons-dans-des-jeux-sur-solana" aria-hidden="true">#</a> Utilisation de jetons dans des jeux sur Solana</h1><p>Les tokens sur Solana peuvent servir \xE0 diverses fins, comme des r\xE9compenses dans les jeux, des incitations ou d&#39;autres applications. Par exemple, vous pouvez cr\xE9er des jetons et les distribuer aux joueurs lorsqu&#39;ils accomplissent des actions sp\xE9cifiques dans le jeu.</p><h2 id="creer-mint-et-bruler-des-jetons-avec-anchor" tabindex="-1"><a class="header-anchor" href="#creer-mint-et-bruler-des-jetons-avec-anchor" aria-hidden="true">#</a> Cr\xE9er, Mint et Br\xFBler des jetons avec Anchor</h2><p>Dans ce tutoriel, nous allons cr\xE9er un jeu en utilisant Anchor pour introduire les bases de l&#39;interaction avec le Programme de Jeton (Token Program) de Solana. Le jeu s&#39;articulera autour de quatre actions principales : cr\xE9er une nouvelle adresse de mint pour le jeton, initialiser les comptes des joueurs, r\xE9compenser les joueurs pour avoir vaincu des ennemis et permettre aux joueurs de se soigner en br\xFBlant des jetons.</p><p>Le programme est compos\xE9 de 4 instructions :</p><ul><li><code>create_mint</code> - Cette instruction cr\xE9e une nouvelle adresse de mint pour le jeton avec une Adresse D\xE9riv\xE9e de Programme (PDA) en tant qu&#39;autorit\xE9 de mint (mint authority) et cr\xE9e le compte de m\xE9tadonn\xE9es de jeton. Nous ajouterons une contrainte pour que seul un &quot;admin&quot; puisse invoquer cette instruction</li><li><code>init_player</code> - Cette instruction initialise un nouveau compte de joueur avec une sant\xE9 de d\xE9part de 100</li><li><code>kill_enemy</code> - Cette instruction d\xE9duit 10 points de vie du compte du joueur lorsqu&#39;il &quot;vainc un ennemi&quot; et mint 1 jeton en guise de r\xE9compense pour le joueur</li><li><code>heal</code> - Cette instruction permet \xE0 un joueur de br\xFBler un jeton pour r\xE9tablir sa sant\xE9 \xE0 100 %.</li></ul>',6),k=s("Pour une vue d'ensemble de la relation entre les portefeuilles utilisateurs, les adresses de mint de jeton, les comptes de jetons et les comptes de m\xE9tadonn\xE9es de jetons, il est possible d'explorer cette partie de la "),m={href:"https://docs.metaplex.com/programs/token-metadata/overview",target:"_blank",rel:"noopener noreferrer"},b=s("documentation de Metaplex"),d=s("."),y=n("h3",{id:"pour-commencer",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pour-commencer","aria-hidden":"true"},"#"),s(" Pour commencer")],-1),f=n("p",null,"Pour commencer \xE0 cr\xE9er le programme, suivez les \xE9tapes suivantes :",-1),_=s("Visitez le "),g={href:"https://beta.solpg.io/",target:"_blank",rel:"noopener noreferrer"},w=s("Solana Playground"),h=s(" et cr\xE9ez un nouveau projet Anchor. Si vous \xEAtes nouveau sur Solana Playground, vous devrez \xE9galement cr\xE9er un portefeuille Playground."),v=t(`<p>Apr\xE8s avoir cr\xE9\xE9 un nouveau projet, remplacez le code par d\xE9faut par le code ci-dessous :</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anchor_spl<span class="token punctuation">::</span></span><span class="token punctuation">{</span>
    <span class="token namespace">associated_token<span class="token punctuation">::</span></span><span class="token class-name">AssociatedToken</span><span class="token punctuation">,</span>
    <span class="token namespace">metadata<span class="token punctuation">::</span></span><span class="token punctuation">{</span>create_metadata_accounts_v3<span class="token punctuation">,</span> <span class="token class-name">CreateMetadataAccountsV3</span><span class="token punctuation">,</span> <span class="token class-name">Metadata</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token namespace">token<span class="token punctuation">::</span></span><span class="token punctuation">{</span>burn<span class="token punctuation">,</span> mint_to<span class="token punctuation">,</span> <span class="token class-name">Burn</span><span class="token punctuation">,</span> <span class="token class-name">Mint</span><span class="token punctuation">,</span> <span class="token class-name">MintTo</span><span class="token punctuation">,</span> <span class="token class-name">Token</span><span class="token punctuation">,</span> <span class="token class-name">TokenAccount</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mpl_token_metadata<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">pda<span class="token punctuation">::</span></span>find_metadata_account<span class="token punctuation">,</span> <span class="token namespace">state<span class="token punctuation">::</span></span><span class="token class-name">DataV2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">solana_program<span class="token punctuation">::</span></span><span class="token punctuation">{</span>pubkey<span class="token punctuation">,</span> <span class="token namespace">pubkey<span class="token punctuation">::</span></span><span class="token class-name">Pubkey</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token macro property">declare_id!</span><span class="token punctuation">(</span><span class="token string">&quot;11111111111111111111111111111111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[program]</span>
<span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">anchor_token</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>Ici, nous mettons simplement en place les crates et les modules correspondants que nous utiliserons dans le cadre de ce programme. Nous allons utiliser les crates <code>anchor_spl</code> et <code>mpl_token_metadata</code> pour nous aider \xE0 interagir avec le Programme de Jeton et le Programme de M\xE9tadonn\xE9es des Jetons (Token Metadata program).</p><h3 id="instruction-de-creation-d-un-jeton" tabindex="-1"><a class="header-anchor" href="#instruction-de-creation-d-un-jeton" aria-hidden="true">#</a> Instruction de cr\xE9ation d&#39;un jeton</h3><p>Tout d&#39;abord, impl\xE9mentons une instruction pour cr\xE9er un nouveau jeton et son compte de m\xE9tadonn\xE9es. Les m\xE9tadonn\xE9es du jeton qui seront stock\xE9es sur la cha\xEEne, notamment le nom, le symbole et l&#39;URI, seront fournies en tant que param\xE8tres de l&#39;instruction.</p><p>De plus, nous n&#39;autoriserons qu&#39;un &quot;admin&quot; \xE0 invoquer cette instruction en d\xE9finissant une constante <code>ADMIN_PUBKEY</code> et en l&#39;utilisant comme contrainte. Veillez \xE0 remplacer <code>ADMIN_PUBKEY</code> par la cl\xE9 publique de votre portefeuille Solana Playground.</p><p>L&#39;instruction <code>create_mint</code> n\xE9cessite les comptes suivants :</p><ul><li><code>admin</code> - le <code>ADMIN_PUBKEY</code> qui signe la transaction et paie pour l&#39;initialisation des comptes</li><li><code>reward_token_mint</code> - la nouvelle adresse de mint de jeton que nous initialisons, avec un PDA comme adresse de mint et comme autorit\xE9 de mint</li><li><code>metadata_account</code> - le compte de m\xE9tadonn\xE9es que nous initialisons pour le jeton</li><li><code>token_program</code> - n\xE9cessaire pour interagir avec les instructions du Programme de Jeton</li><li><code>token_metadata_program</code> - compte n\xE9cessaire pour interagir avec les instructions du Programme de M\xE9tadonn\xE9es des Jetons</li><li><code>system_program</code>- compte obligatoire lors de la cr\xE9ation d&#39;un nouveau compte</li><li><code>rent</code> - Sysvar Rent, un compte n\xE9cessaire lors de la cr\xE9ation du compte de m\xE9tadonn\xE9es</li></ul><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">// Only this public key can call this instruction</span>
<span class="token keyword">const</span> <span class="token constant">ADMIN_PUBKEY</span><span class="token punctuation">:</span> <span class="token class-name">Pubkey</span> <span class="token operator">=</span> <span class="token macro property">pubkey!</span><span class="token punctuation">(</span><span class="token string">&quot;REPLACE_WITH_YOUR_WALLET_PUBKEY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[program]</span>
<span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">anchor_token</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>

    <span class="token comment">// Create new token mint with PDA as mint authority</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">create_mint</span><span class="token punctuation">(</span>
        ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">CreateMint</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        uri<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
        symbol<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// PDA seeds and bump to &quot;sign&quot; for CPI</span>
        <span class="token keyword">let</span> seeds <span class="token operator">=</span> <span class="token string">b&quot;reward&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> bump <span class="token operator">=</span> <span class="token operator">*</span>ctx<span class="token punctuation">.</span>bumps<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;reward_token_mint&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> signer<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span>seeds<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span>bump<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">// On-chain token metadata for the mint</span>
        <span class="token keyword">let</span> data_v2 <span class="token operator">=</span> <span class="token class-name">DataV2</span> <span class="token punctuation">{</span>
            name<span class="token punctuation">:</span> name<span class="token punctuation">,</span>
            symbol<span class="token punctuation">:</span> symbol<span class="token punctuation">,</span>
            uri<span class="token punctuation">:</span> uri<span class="token punctuation">,</span>
            seller_fee_basis_points<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            creators<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
            collection<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
            uses<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment">// CPI Context</span>
        <span class="token keyword">let</span> cpi_ctx <span class="token operator">=</span> <span class="token class-name">CpiContext</span><span class="token punctuation">::</span><span class="token function">new_with_signer</span><span class="token punctuation">(</span>
            ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>token_metadata_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">CreateMetadataAccountsV3</span> <span class="token punctuation">{</span>
                metadata<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>metadata_account<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the metadata account being created</span>
                mint<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the mint account of the metadata account</span>
                mint_authority<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the mint authority of the mint account</span>
                update_authority<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the update authority of the metadata account</span>
                payer<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>admin<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the payer for creating the metadata account</span>
                system_program<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>system_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the system program account</span>
                rent<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>rent<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the rent sysvar account</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            signer<span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">create_metadata_accounts_v3</span><span class="token punctuation">(</span>
            cpi_ctx<span class="token punctuation">,</span> <span class="token comment">// cpi context</span>
            data_v2<span class="token punctuation">,</span> <span class="token comment">// token metadata</span>
            <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// is_mutable</span>
            <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// update_authority_is_signer</span>
            <span class="token class-name">None</span><span class="token punctuation">,</span>    <span class="token comment">// collection details</span>
        <span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">CreateMint</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[account(
        mut,
        address = ADMIN_PUBKEY
    )]</span>
    <span class="token keyword">pub</span> admin<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">// The PDA is both the address of the mint account and the mint authority</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        init<span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;reward&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
        payer <span class="token operator">=</span> admin<span class="token punctuation">,</span>
        <span class="token namespace">mint<span class="token punctuation">::</span></span>decimals <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">,</span>
        <span class="token namespace">mint<span class="token punctuation">::</span></span>authority <span class="token operator">=</span> reward_token_mint<span class="token punctuation">,</span>

    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> reward_token_mint<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Mint</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">///CHECK: Using &quot;address&quot; constraint to validate metadata account address</span>
    <span class="token attribute attr-name">#[account(
        mut,
        address=find_metadata_account(&amp;reward_token_mint.key()).0
    )]</span>
    <span class="token keyword">pub</span> metadata_account<span class="token punctuation">:</span> <span class="token class-name">UncheckedAccount</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token keyword">pub</span> token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Token</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> token_metadata_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Metadata</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> rent<span class="token punctuation">:</span> <span class="token class-name">Sysvar</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Rent</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br></div></div><p>L&#39;instruction <code>create_mint</code> cr\xE9e une nouvelle adresse de mint de jeton avec une Adresse D\xE9riv\xE9e de Programme (PDA) comme adresse de mint et comme autorit\xE9 de mint. L&#39;instruction prend en param\xE8tre un URI (m\xE9tadonn\xE9es hors cha\xEEne), un nom et un symbole.</p><p>Cette instruction cr\xE9e ensuite un compte de m\xE9tadonn\xE9es de jeton par le biais d&#39;une Invocation de Programme Crois\xE9 (CPI) appelant l&#39;instruction <code>create_metadata_accounts_v3</code> du Programme de M\xE9tadonn\xE9es des Jetons.</p><p>Le PDA est utilis\xE9 pour &quot;signer&quot; le CPI puiqu&#39;il est l&#39;autorit\xE9 de mint, qui est un signataire obligatoire lors de la cr\xE9ation du compte de m\xE9tadonn\xE9es de jeton. Les donn\xE9es d&#39;instruction (URI, nom, symbole) sont incluses dans la structure <code>DataV2</code> pour sp\xE9cifier les m\xE9tadonn\xE9es du nouveau jeton.</p><p>Nous v\xE9rifions \xE9galement que l&#39;adresse du compte <code>admin</code> signant la transaction correspond \xE0 la valeur de la constante <code>ADMIN_PUBKEY</code> afin de s&#39;assurer que seul le portefeuille souhait\xE9 peut invoquer cette instruction.</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">const</span> <span class="token constant">ADMIN_PUBKEY</span><span class="token punctuation">:</span> <span class="token class-name">Pubkey</span> <span class="token operator">=</span> <span class="token macro property">pubkey!</span><span class="token punctuation">(</span><span class="token string">&quot;REPLACE_WITH_YOUR_WALLET_PUBKEY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="instruction-d-initialisation-du-joueur" tabindex="-1"><a class="header-anchor" href="#instruction-d-initialisation-du-joueur" aria-hidden="true">#</a> Instruction d&#39;initialisation du joueur</h3><p>Ensuite, impl\xE9mentons l&#39;instruction <code>init_player</code> qui cr\xE9e un nouveau compte de joueur avec une sant\xE9 initiale de 100. La constante <code>MAX_HEALTH</code> est fix\xE9e \xE0 100 pour repr\xE9senter la sant\xE9 de d\xE9part.</p><p>L&#39;instruction <code>init_player</code> n\xE9cessite les comptes suivants :</p><ul><li><code>player_data</code> - le nouveau compte de joueur que nous initialisons, qui stockera la sant\xE9 du joueur</li><li><code>player</code> - l&#39;utilisateur qui signe la transaction et paie pour l&#39;initialisation du compte</li><li><code>system_program</code> - compte obligatoire lors de la cr\xE9ation d&#39;un nouveau compte</li></ul><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">// Player max health</span>
<span class="token keyword">const</span> <span class="token constant">MAX_HEALTH</span><span class="token punctuation">:</span> <span class="token keyword">u8</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[program]</span>
<span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">anchor_token</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token punctuation">...</span>

    <span class="token comment">// Create new player account</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">init_player</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">InitPlayer</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health <span class="token operator">=</span> <span class="token constant">MAX_HEALTH</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">...</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">InitPlayer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        init<span class="token punctuation">,</span>
        payer <span class="token operator">=</span> player<span class="token punctuation">,</span>
        space <span class="token operator">=</span> <span class="token number">8</span> <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;player&quot;</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> player<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> player_data<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">PlayerData</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> player<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[account]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">PlayerData</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> health<span class="token punctuation">:</span> <span class="token keyword">u8</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>Le compte <code>player_data</code> est initialis\xE9 \xE0 l&#39;aide d&#39;une Adresse D\xE9riv\xE9e de Programme (PDA) dont la cl\xE9 publique <code>player</code> est l&#39;une des seeds. Cela garantit que chaque compte <code>player_data</code> est unique et associ\xE9 \xE0 un <code>player</code>, ce qui permet \xE0 chaque joueur de cr\xE9er son propre compte <code>player_data</code>.</p><h3 id="instruction-pour-tuer-un-ennemi" tabindex="-1"><a class="header-anchor" href="#instruction-pour-tuer-un-ennemi" aria-hidden="true">#</a> Instruction pour tuer un ennemi</h3><p>Impl\xE9mentons ensuite l&#39;instruction <code>kill_enemy</code> qui r\xE9duit la sant\xE9 du joueur de 10 et lui rapporte 1 jeton sur son compte de jetons en guise de r\xE9compense.</p><p>L&#39;instruction <code>kill_enemy</code> n\xE9cessite les comptes suivants :</p><ul><li><code>player</code> - le joueur qui re\xE7oit le jeton</li><li><code>player_data</code> - le compte de donn\xE9es du joueur stockant l&#39;\xE9tat de sant\xE9 actuel du joueur</li><li><code>player_token_account</code> - le compte de jetons associ\xE9 du joueur o\xF9 les jetons seront mint</li><li><code>reward_token_mint</code> - l&#39;adresse de mint du jeton, sp\xE9cifiant le type de jeton qui sera mint</li><li><code>token_program</code> - n\xE9cessaire pour interagir avec les instructions du Programme de Jeton</li><li><code>associated_token_program</code> - n\xE9cessaire lorsque l&#39;on travaille avec des comptes de jetons associ\xE9s</li><li><code>system_program</code> - compte obligatoire lors de la cr\xE9ation d&#39;un nouveau compte</li></ul><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[program]</span>
<span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">anchor_token</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token punctuation">...</span>

    <span class="token comment">// Mint token to player token account</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">kill_enemy</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">KillEnemy</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// Check if player has enough health</span>
        <span class="token keyword">if</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token macro property">err!</span><span class="token punctuation">(</span><span class="token class-name">ErrorCode</span><span class="token punctuation">::</span><span class="token class-name">NotEnoughHealth</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Subtract 10 health from player</span>
        ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health <span class="token operator">=</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health<span class="token punctuation">.</span><span class="token function">checked_sub</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// PDA seeds and bump to &quot;sign&quot; for CPI</span>
        <span class="token keyword">let</span> seeds <span class="token operator">=</span> <span class="token string">b&quot;reward&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> bump <span class="token operator">=</span> <span class="token operator">*</span>ctx<span class="token punctuation">.</span>bumps<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;reward_token_mint&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> signer<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span>seeds<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span>bump<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">// CPI Context</span>
        <span class="token keyword">let</span> cpi_ctx <span class="token operator">=</span> <span class="token class-name">CpiContext</span><span class="token punctuation">::</span><span class="token function">new_with_signer</span><span class="token punctuation">(</span>
            ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>token_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">MintTo</span> <span class="token punctuation">{</span>
                mint<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                to<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_token_account<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                authority<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            signer<span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Mint 1 token, accounting for decimals of mint</span>
        <span class="token keyword">let</span> amount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1u64</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">checked_mul</span><span class="token punctuation">(</span><span class="token number">10u64</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span>decimals <span class="token keyword">as</span> <span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">mint_to</span><span class="token punctuation">(</span>cpi_ctx<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">...</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">KillEnemy</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> player<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;player&quot;</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> player<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> player_data<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">PlayerData</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">// Initialize player token account if it doesn&#39;t exist</span>
    <span class="token attribute attr-name">#[account(
        init_if_needed,
        payer = player,
        associated_token::mint = reward_token_mint,
        associated_token::authority = player
    )]</span>
    <span class="token keyword">pub</span> player_token_account<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">TokenAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;reward&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> reward_token_mint<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Mint</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token keyword">pub</span> token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Token</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> associated_token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">AssociatedToken</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[error_code]</span>
<span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">ErrorCode</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[msg(<span class="token string">&quot;Not enough health&quot;</span>)]</span>
    <span class="token class-name">NotEnoughHealth</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br></div></div><p>La sant\xE9 du joueur est r\xE9duite de 10 pour repr\xE9senter le &quot;combat avec l&#39;ennemi&quot;. Nous allons \xE9galement v\xE9rifier la sant\xE9 actuelle du joueur et renvoyer une erreur Anchor personnalis\xE9e si la sant\xE9 du joueur est \xE0 0.</p><p>L&#39;instruction utilise ensuite une Invocation de Programme Crois\xE9 (CPI) pour appeler l&#39;instruction <code>mint_to</code> du Programme de Jeton et mint 1 jeton <code>reward_token_mint</code> dans <code>player_token_account</code> en guise de r\xE9compense pour avoir tu\xE9 l&#39;ennemi.</p><p>\xC9tant donn\xE9 que l&#39;autorit\xE9 de mint du jeton est une Adresse D\xE9riv\xE9e de Programme (PDA), nous pouvons mint des jetons directement en appelant cette instruction sans signataire suppl\xE9mentaire. En effet, le programme peut &quot;signer&quot; au nom du PDA, ce qui permet de mint des jetons sans exiger explicitement des signataires suppl\xE9mentaires.</p><h3 id="instruction-de-guerison" tabindex="-1"><a class="header-anchor" href="#instruction-de-guerison" aria-hidden="true">#</a> Instruction de gu\xE9rison</h3><p>Impl\xE9mentons ensuite l&#39;instruction <code>heal</code> qui permet \xE0 un joueur de br\xFBler 1 jeton et de restaurer sa sant\xE9 \xE0 sa valeur maximale.</p><p>L&#39;instruction <code>heal</code> n\xE9cessite les comptes suivants :</p><ul><li><code>player</code> - le joueur qui ex\xE9cute l&#39;action de gu\xE9rison</li><li><code>player_data</code> - le compte de donn\xE9es du joueur stockant l&#39;\xE9tat de sant\xE9 actuel du joueur</li><li><code>player_token_account</code> - le compte de jetons associ\xE9 du joueur o\xF9 les jetons seront br\xFBl\xE9s</li><li><code>reward_token_mint</code> - l&#39;adresse de mint du jeton, sp\xE9cifiant le type de jeton qui sera br\xFBl\xE9</li><li><code>token_program</code> - n\xE9cessaire pour interagir avec les instructions du Programme de Jeton</li><li><code>associated_token_program</code> - n\xE9cessaire lorsque l&#39;on travaille avec des comptes de jetons associ\xE9s</li></ul><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[program]</span>
<span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">anchor_token</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token punctuation">...</span>

    <span class="token comment">// Burn token to health player</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">heal</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">Heal</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health <span class="token operator">=</span> <span class="token constant">MAX_HEALTH</span><span class="token punctuation">;</span>

        <span class="token comment">// CPI Context</span>
        <span class="token keyword">let</span> cpi_ctx <span class="token operator">=</span> <span class="token class-name">CpiContext</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>
            ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>token_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">Burn</span> <span class="token punctuation">{</span>
                mint<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                from<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_token_account<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                authority<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Burn 1 token, accounting for decimals of mint</span>
        <span class="token keyword">let</span> amount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1u64</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">checked_mul</span><span class="token punctuation">(</span><span class="token number">10u64</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span>decimals <span class="token keyword">as</span> <span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">burn</span><span class="token punctuation">(</span>cpi_ctx<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">...</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Heal</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> player<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;player&quot;</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> player<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> player_data<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">PlayerData</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token attribute attr-name">#[account(
        mut,
        associated_token::mint = reward_token_mint,
        associated_token::authority = player
    )]</span>
    <span class="token keyword">pub</span> player_token_account<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">TokenAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;reward&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> reward_token_mint<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Mint</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token keyword">pub</span> token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Token</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> associated_token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">AssociatedToken</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><p>La sant\xE9 du joueur est r\xE9tablie \xE0 sa valeur maximale \xE0 l&#39;aide de l&#39;instruction <code>heal</code>. L&#39;instruction utilise ensuite une Invocation de Programme Crois\xE9 (CPI) pour appeler l&#39;instruction <code>burn</code> du Programme de Jeton, qui br\xFBle 1 token du <code>player_token_account</code> pour gu\xE9rir le joueur.</p><h3 id="compilation-et-deploiement" tabindex="-1"><a class="header-anchor" href="#compilation-et-deploiement" aria-hidden="true">#</a> Compilation et D\xE9ploiement</h3><p>Bravo ! Vous avez termin\xE9 le programme ! Vous pouvez le compiler et le d\xE9ployer \xE0 l&#39;aide du Solana Playground. Votre programme final devrait ressembler \xE0 ceci :</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anchor_spl<span class="token punctuation">::</span></span><span class="token punctuation">{</span>
    <span class="token namespace">associated_token<span class="token punctuation">::</span></span><span class="token class-name">AssociatedToken</span><span class="token punctuation">,</span>
    <span class="token namespace">metadata<span class="token punctuation">::</span></span><span class="token punctuation">{</span>create_metadata_accounts_v3<span class="token punctuation">,</span> <span class="token class-name">CreateMetadataAccountsV3</span><span class="token punctuation">,</span> <span class="token class-name">Metadata</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token namespace">token<span class="token punctuation">::</span></span><span class="token punctuation">{</span>burn<span class="token punctuation">,</span> mint_to<span class="token punctuation">,</span> <span class="token class-name">Burn</span><span class="token punctuation">,</span> <span class="token class-name">Mint</span><span class="token punctuation">,</span> <span class="token class-name">MintTo</span><span class="token punctuation">,</span> <span class="token class-name">Token</span><span class="token punctuation">,</span> <span class="token class-name">TokenAccount</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">mpl_token_metadata<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">pda<span class="token punctuation">::</span></span>find_metadata_account<span class="token punctuation">,</span> <span class="token namespace">state<span class="token punctuation">::</span></span><span class="token class-name">DataV2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">solana_program<span class="token punctuation">::</span></span><span class="token punctuation">{</span>pubkey<span class="token punctuation">,</span> <span class="token namespace">pubkey<span class="token punctuation">::</span></span><span class="token class-name">Pubkey</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token macro property">declare_id!</span><span class="token punctuation">(</span><span class="token string">&quot;CCLnXJAJYFjCHLCugpBCEQKrpiSApiRM4UxkBUHJRrv4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token constant">ADMIN_PUBKEY</span><span class="token punctuation">:</span> <span class="token class-name">Pubkey</span> <span class="token operator">=</span> <span class="token macro property">pubkey!</span><span class="token punctuation">(</span><span class="token string">&quot;REPLACE_WITH_YOUR_WALLET_PUBKEY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">MAX_HEALTH</span><span class="token punctuation">:</span> <span class="token keyword">u8</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[program]</span>
<span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">anchor_token</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>

    <span class="token comment">// Create new token mint with PDA as mint authority</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">create_mint</span><span class="token punctuation">(</span>
        ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">CreateMint</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        uri<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
        symbol<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// PDA seeds and bump to &quot;sign&quot; for CPI</span>
        <span class="token keyword">let</span> seeds <span class="token operator">=</span> <span class="token string">b&quot;reward&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> bump <span class="token operator">=</span> <span class="token operator">*</span>ctx<span class="token punctuation">.</span>bumps<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;reward_token_mint&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> signer<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span>seeds<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span>bump<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">// On-chain token metadata for the mint</span>
        <span class="token keyword">let</span> data_v2 <span class="token operator">=</span> <span class="token class-name">DataV2</span> <span class="token punctuation">{</span>
            name<span class="token punctuation">:</span> name<span class="token punctuation">,</span>
            symbol<span class="token punctuation">:</span> symbol<span class="token punctuation">,</span>
            uri<span class="token punctuation">:</span> uri<span class="token punctuation">,</span>
            seller_fee_basis_points<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            creators<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
            collection<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
            uses<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment">// CPI Context</span>
        <span class="token keyword">let</span> cpi_ctx <span class="token operator">=</span> <span class="token class-name">CpiContext</span><span class="token punctuation">::</span><span class="token function">new_with_signer</span><span class="token punctuation">(</span>
            ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>token_metadata_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">CreateMetadataAccountsV3</span> <span class="token punctuation">{</span>
                metadata<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>metadata_account<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the metadata account being created</span>
                mint<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the mint account of the metadata account</span>
                mint_authority<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the mint authority of the mint account</span>
                update_authority<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the update authority of the metadata account</span>
                payer<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>admin<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the payer for creating the metadata account</span>
                system_program<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>system_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the system program account</span>
                rent<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>rent<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// the rent sysvar account</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            signer<span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">create_metadata_accounts_v3</span><span class="token punctuation">(</span>
            cpi_ctx<span class="token punctuation">,</span> <span class="token comment">// cpi context</span>
            data_v2<span class="token punctuation">,</span> <span class="token comment">// token metadata</span>
            <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// is_mutable</span>
            <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// update_authority_is_signer</span>
            <span class="token class-name">None</span><span class="token punctuation">,</span>    <span class="token comment">// collection details</span>
        <span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Create new player account</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">init_player</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">InitPlayer</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health <span class="token operator">=</span> <span class="token constant">MAX_HEALTH</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Mint tokens to player token account</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">kill_enemy</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">KillEnemy</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// Check if player has enough health</span>
        <span class="token keyword">if</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token macro property">err!</span><span class="token punctuation">(</span><span class="token class-name">ErrorCode</span><span class="token punctuation">::</span><span class="token class-name">NotEnoughHealth</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Subtract 10 health from player</span>
        ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health <span class="token operator">=</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health<span class="token punctuation">.</span><span class="token function">checked_sub</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// PDA seeds and bump to &quot;sign&quot; for CPI</span>
        <span class="token keyword">let</span> seeds <span class="token operator">=</span> <span class="token string">b&quot;reward&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> bump <span class="token operator">=</span> <span class="token operator">*</span>ctx<span class="token punctuation">.</span>bumps<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;reward_token_mint&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> signer<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">[</span>seeds<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span>bump<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">// CPI Context</span>
        <span class="token keyword">let</span> cpi_ctx <span class="token operator">=</span> <span class="token class-name">CpiContext</span><span class="token punctuation">::</span><span class="token function">new_with_signer</span><span class="token punctuation">(</span>
            ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>token_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">MintTo</span> <span class="token punctuation">{</span>
                mint<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                to<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_token_account<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                authority<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            signer<span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Mint 1 token, accounting for decimals of mint</span>
        <span class="token keyword">let</span> amount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1u64</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">checked_mul</span><span class="token punctuation">(</span><span class="token number">10u64</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span>decimals <span class="token keyword">as</span> <span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">mint_to</span><span class="token punctuation">(</span>cpi_ctx<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Burn Token to health player</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">heal</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">Heal</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_data<span class="token punctuation">.</span>health <span class="token operator">=</span> <span class="token constant">MAX_HEALTH</span><span class="token punctuation">;</span>

        <span class="token comment">// CPI Context</span>
        <span class="token keyword">let</span> cpi_ctx <span class="token operator">=</span> <span class="token class-name">CpiContext</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>
            ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>token_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">Burn</span> <span class="token punctuation">{</span>
                mint<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                from<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player_token_account<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                authority<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Burn 1 token, accounting for decimals of mint</span>
        <span class="token keyword">let</span> amount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1u64</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">checked_mul</span><span class="token punctuation">(</span><span class="token number">10u64</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>reward_token_mint<span class="token punctuation">.</span>decimals <span class="token keyword">as</span> <span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">burn</span><span class="token punctuation">(</span>cpi_ctx<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">CreateMint</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[account(
        mut,
        address = ADMIN_PUBKEY
    )]</span>
    <span class="token keyword">pub</span> admin<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">// The PDA is both the address of the mint account and the mint authority</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        init<span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;reward&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
        payer <span class="token operator">=</span> admin<span class="token punctuation">,</span>
        <span class="token namespace">mint<span class="token punctuation">::</span></span>decimals <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">,</span>
        <span class="token namespace">mint<span class="token punctuation">::</span></span>authority <span class="token operator">=</span> reward_token_mint<span class="token punctuation">,</span>

    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> reward_token_mint<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Mint</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">///CHECK: Using &quot;address&quot; constraint to validate metadata account address</span>
    <span class="token attribute attr-name">#[account(
        mut,
        address=find_metadata_account(&amp;reward_token_mint.key()).0
    )]</span>
    <span class="token keyword">pub</span> metadata_account<span class="token punctuation">:</span> <span class="token class-name">UncheckedAccount</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token keyword">pub</span> token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Token</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> token_metadata_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Metadata</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> rent<span class="token punctuation">:</span> <span class="token class-name">Sysvar</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Rent</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">InitPlayer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        init<span class="token punctuation">,</span>
        payer <span class="token operator">=</span> player<span class="token punctuation">,</span>
        space <span class="token operator">=</span> <span class="token number">8</span> <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;player&quot;</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> player<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> player_data<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">PlayerData</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> player<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">KillEnemy</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> player<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;player&quot;</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> player<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> player_data<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">PlayerData</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">// Initialize player token account if it doesn&#39;t exist</span>
    <span class="token attribute attr-name">#[account(
        init_if_needed,
        payer = player,
        associated_token::mint = reward_token_mint,
        associated_token::authority = player
    )]</span>
    <span class="token keyword">pub</span> player_token_account<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">TokenAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;reward&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> reward_token_mint<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Mint</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token keyword">pub</span> token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Token</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> associated_token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">AssociatedToken</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Heal</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> player<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;player&quot;</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> player<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> player_data<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">PlayerData</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token attribute attr-name">#[account(
        mut,
        associated_token::mint = reward_token_mint,
        associated_token::authority = player
    )]</span>
    <span class="token keyword">pub</span> player_token_account<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">TokenAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;reward&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> reward_token_mint<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Mint</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token keyword">pub</span> token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">Token</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> associated_token_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">AssociatedToken</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[account]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">PlayerData</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> health<span class="token punctuation">:</span> <span class="token keyword">u8</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[error_code]</span>
<span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">ErrorCode</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[msg(<span class="token string">&quot;Not enough health&quot;</span>)]</span>
    <span class="token class-name">NotEnoughHealth</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br></div></div><h3 id="debuter-avec-le-client" tabindex="-1"><a class="header-anchor" href="#debuter-avec-le-client" aria-hidden="true">#</a> D\xE9buter avec le Client</h3><p>Dans cette section, nous allons vous pr\xE9senter une impl\xE9mentation simple c\xF4t\xE9 client pour interagir avec le programme. Pour commencer, naviguez jusqu&#39;au fichier <code>client.ts</code> dans Solana Playground, supprimez le code par d\xE9faut et ajoutez les extraits de code des sections suivantes.</p><p>Commencez par ajouter le code suivant pour la configuration.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Metaplex <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@metaplex-foundation/js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getMint<span class="token punctuation">,</span> getAssociatedTokenAddressSync <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@solana/spl-token&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// metaplex token metadata program ID</span>
<span class="token keyword">const</span> <span class="token constant">TOKEN_METADATA_PROGRAM_ID</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">web3<span class="token punctuation">.</span>PublicKey</span><span class="token punctuation">(</span>
  <span class="token string">&quot;metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s&quot;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// metaplex setup</span>
<span class="token keyword">const</span> metaplex <span class="token operator">=</span> Metaplex<span class="token punctuation">.</span><span class="token function">make</span><span class="token punctuation">(</span>pg<span class="token punctuation">.</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// token metadata</span>
<span class="token keyword">const</span> metadata <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">uri</span><span class="token operator">:</span> <span class="token string">&quot;https://raw.githubusercontent.com/solana-developers/program-examples/new-examples/tokens/tokens/.assets/spl-token.json&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Solana Gold&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">symbol</span><span class="token operator">:</span> <span class="token string">&quot;GOLDSOL&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// reward token mint PDA</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>rewardTokenMintPda<span class="token punctuation">]</span> <span class="token operator">=</span> anchor<span class="token punctuation">.</span>web3<span class="token punctuation">.</span>PublicKey<span class="token punctuation">.</span><span class="token function">findProgramAddressSync</span><span class="token punctuation">(</span>
  <span class="token punctuation">[</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;reward&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  pg<span class="token punctuation">.</span><span class="token constant">PROGRAM_ID</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// player data account PDA</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>playerPDA<span class="token punctuation">]</span> <span class="token operator">=</span> anchor<span class="token punctuation">.</span>web3<span class="token punctuation">.</span>PublicKey<span class="token punctuation">.</span><span class="token function">findProgramAddressSync</span><span class="token punctuation">(</span>
  <span class="token punctuation">[</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;player&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pg<span class="token punctuation">.</span>wallet<span class="token punctuation">.</span>publicKey<span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  pg<span class="token punctuation">.</span><span class="token constant">PROGRAM_ID</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// reward token mint metadata account address</span>
<span class="token keyword">const</span> rewardTokenMintMetadataPDA <span class="token operator">=</span> <span class="token keyword">await</span> metaplex
  <span class="token punctuation">.</span><span class="token function">nfts</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">pdas</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">metadata</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">mint</span><span class="token operator">:</span> rewardTokenMintPda <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// player token account address</span>
<span class="token keyword">const</span> playerTokenAccount <span class="token operator">=</span> <span class="token function">getAssociatedTokenAddressSync</span><span class="token punctuation">(</span>
  rewardTokenMintPda<span class="token punctuation">,</span>
  pg<span class="token punctuation">.</span>wallet<span class="token punctuation">.</span>publicKey
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>Ensuite, ajoutez les deux fonctions d&#39;aide suivantes. Ces fonctions seront utilis\xE9es pour confirmer les transactions et r\xE9cup\xE9rer les donn\xE9es du compte.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">logTransaction</span><span class="token punctuation">(</span><span class="token parameter">txHash</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> blockhash<span class="token punctuation">,</span> lastValidBlockHeight <span class="token punctuation">}</span> <span class="token operator">=</span>
    <span class="token keyword">await</span> pg<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">getLatestBlockhash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> pg<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">confirmTransaction</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    blockhash<span class="token punctuation">,</span>
    lastValidBlockHeight<span class="token punctuation">,</span>
    <span class="token literal-property property">signature</span><span class="token operator">:</span> txHash<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Use &#39;solana confirm -v </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>txHash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; to see the logs</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchAccountData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>playerBalance<span class="token punctuation">,</span> playerData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    pg<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">getTokenAccountBalance</span><span class="token punctuation">(</span>playerTokenAccount<span class="token punctuation">)</span><span class="token punctuation">,</span>
    pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>account<span class="token punctuation">.</span>playerData<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>playerPDA<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Player Token Balance: &quot;</span><span class="token punctuation">,</span> playerBalance<span class="token punctuation">.</span>value<span class="token punctuation">.</span>uiAmount<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Player Health: &quot;</span><span class="token punctuation">,</span> playerData<span class="token punctuation">.</span>health<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>Ensuite, invoquez l&#39;instruction <code>createMint</code> pour cr\xE9er une nouvelle adresse de mint de jeton s&#39;il n&#39;existe pas d\xE9j\xE0.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> txHash<span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> mintData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getMint</span><span class="token punctuation">(</span>pg<span class="token punctuation">.</span>connection<span class="token punctuation">,</span> rewardTokenMintPda<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Mint Already Exists&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
  txHash <span class="token operator">=</span> <span class="token keyword">await</span> pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>methods
    <span class="token punctuation">.</span><span class="token function">createMint</span><span class="token punctuation">(</span>metadata<span class="token punctuation">.</span>uri<span class="token punctuation">,</span> metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span> metadata<span class="token punctuation">.</span>symbol<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">accounts</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">rewardTokenMint</span><span class="token operator">:</span> rewardTokenMintPda<span class="token punctuation">,</span>
      <span class="token literal-property property">metadataAccount</span><span class="token operator">:</span> rewardTokenMintMetadataPDA<span class="token punctuation">,</span>
      <span class="token literal-property property">tokenMetadataProgram</span><span class="token operator">:</span> <span class="token constant">TOKEN_METADATA_PROGRAM_ID</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">rpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">logTransaction</span><span class="token punctuation">(</span>txHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Token Mint: &quot;</span><span class="token punctuation">,</span> rewardTokenMintPda<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>Appelez ensuite l&#39;instruction <code>initPlayer</code> pour cr\xE9er un nouveau compte de joueur s&#39;il n&#39;en existe pas d\xE9j\xE0 un.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> playerData <span class="token operator">=</span> <span class="token keyword">await</span> pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>account<span class="token punctuation">.</span>playerData<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>playerPDA<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Player Already Exists&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Player Health: &quot;</span><span class="token punctuation">,</span> playerData<span class="token punctuation">.</span>health<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
  txHash <span class="token operator">=</span> <span class="token keyword">await</span> pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>methods
    <span class="token punctuation">.</span><span class="token function">initPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">accounts</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">playerData</span><span class="token operator">:</span> playerPDA<span class="token punctuation">,</span>
      <span class="token literal-property property">player</span><span class="token operator">:</span> pg<span class="token punctuation">.</span>wallet<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">rpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">logTransaction</span><span class="token punctuation">(</span>txHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Player Account Created&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>Ensuite, invoquez l&#39;instruction <code>killEnemy</code>.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>txHash <span class="token operator">=</span> <span class="token keyword">await</span> pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>methods
  <span class="token punctuation">.</span><span class="token function">killEnemy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">accounts</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">playerData</span><span class="token operator">:</span> playerPDA<span class="token punctuation">,</span>
    <span class="token literal-property property">playerTokenAccount</span><span class="token operator">:</span> playerTokenAccount<span class="token punctuation">,</span>
    <span class="token literal-property property">rewardTokenMint</span><span class="token operator">:</span> rewardTokenMintPda<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">rpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">logTransaction</span><span class="token punctuation">(</span>txHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Enemy Defeated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">fetchAccountData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Puis, invoquez l&#39;instruction <code>heal</code>.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>txHash <span class="token operator">=</span> <span class="token keyword">await</span> pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>methods
  <span class="token punctuation">.</span><span class="token function">heal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">accounts</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">playerData</span><span class="token operator">:</span> playerPDA<span class="token punctuation">,</span>
    <span class="token literal-property property">playerTokenAccount</span><span class="token operator">:</span> playerTokenAccount<span class="token punctuation">,</span>
    <span class="token literal-property property">rewardTokenMint</span><span class="token operator">:</span> rewardTokenMintPda<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">rpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">logTransaction</span><span class="token punctuation">(</span>txHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Player Healed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">fetchAccountData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Enfin, ex\xE9cutez le client en cliquant sur le bouton &quot;Run&quot; dans Solana Playground. Vous pouvez copier l&#39;adresse de mint de jeton affich\xE9e dans la console et v\xE9rifier sur Solana Explorer que le jeton a maintenant des m\xE9tadonn\xE9es. Le r\xE9sultat devrait \xEAtre similaire \xE0 ce qui suit :</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Running client...
  client.ts:
    Use &#39;solana confirm -v 3AWnpt2Wy6jQckue4QeKsgDNKhKkhpewPmRtxvJpzxGgvK9XK9KEpTiUzAQ5vSC6CUoUjc6xWZCtrihVrFy8sACC&#39; to see the logs
    Token Mint:  3eS7hdyeVX5g8JGhn3Z7qFXJaewoJ8hzgvubovQsPm4S
    Use &#39;solana confirm -v 63jbBr5U4LG75TiiHfz65q7yKJfHDhGP2ocCiDat5M2k4cWtUMAx9sHvxhnEguLDKXMbDUQKUt1nhvyQkXoDhxst&#39; to see the logs
    Player Account Created
    Use &#39;solana confirm -v 2ziK41WLoxfEHvtUgc5c1SyKCAr5FvAS54ARBJrjqh9GDwzYqu7qWCwHJCgMZyFEVovYK5nUZhDRHPTMrTjq1Mm6&#39; to see the logs
    Enemy Defeated
    Player Token Balance:  1
    Player Health:  90
    Use &#39;solana confirm -v 2QoAH22Q3xXz9t2TYRycQMqpEmauaRvmUfZ7ZNKUEoUyHWqpjW972VD3eZyeJrXsviaiCC3g6TE54oKmKbFQf2Q7&#39; to see the logs
    Player Healed
    Player Token Balance:  0
    Player Health:  100
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,53);function x(q,P){const a=o("ExternalLinkIcon");return c(),l(u,null,[r,n("p",null,[k,n("a",m,[b,p(a)]),d]),y,f,n("p",null,[_,n("a",g,[w,p(a)]),h]),v],64)}var j=e(i,[["render",x]]);export{j as default};
