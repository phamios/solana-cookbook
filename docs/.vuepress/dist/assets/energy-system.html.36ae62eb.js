import{_ as e,r as o,o as c,c as u,a as n,b as p,F as l,d as s,e as t}from"./app.07ce7a66.js";const r={},i=n("h1",{id:"systeme-d-energie",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#systeme-d-energie","aria-hidden":"true"},"#"),s(" Syst\xE8me d'Energie")],-1),k=n("p",null,[s("Les Casual Games utilisent g\xE9n\xE9ralement des syst\xE8mes d'\xE9nergie, ce qui signifie que les actions effectu\xE9es dans le jeu co\xFBtent de l'\xE9nergie qui se recharge au fil du temps. Dans ce guide, nous allons voir comment en construire un sur Solana. Il est recommand\xE9 de commencer par "),n("a",{href:"../gaming/hello-world"},"Exemple Hello World"),s(" si vous n'avez pas de connaissances pr\xE9alables de Solana.")],-1),m=n("p",null,[s("Voici un exemple de code source complet bas\xE9 sur le "),n("em",null,"Solana dapp scaffold"),s(" avec un client react :")],-1),d={href:"https://github.com/solana-developers/solana-game-starter-kits/tree/main/lumberjack",target:"_blank",rel:"noopener noreferrer"},b=s("Source"),g=t(`<h2 id="program-anchor" tabindex="-1"><a class="header-anchor" href="#program-anchor" aria-hidden="true">#</a> Program Anchor</h2><p>Dans ce tutoriel, nous vous guiderons \xE0 travers le processus de cr\xE9ation d&#39;un programme qui recharge progressivement les r\xE9serves d&#39;\xE9nergie du joueur au fil du temps. Cela leur permettra ensuite d&#39;ex\xE9cuter diverses actions dans le jeu. Dans notre exemple, un b\xFBcheron coupera des arbres, chaque arbre rapportant un bois et co\xFBtant une \xE9nergie.</p><h3 id="creation-du-compte-du-joueur" tabindex="-1"><a class="header-anchor" href="#creation-du-compte-du-joueur" aria-hidden="true">#</a> Cr\xE9ation du compte du joueur</h3><p>Tout d&#39;abord, le joueur doit cr\xE9er un compte qui enregistre l&#39;\xE9tat de notre joueur. Remarquez que last_login enregistre l&#39;horodatage Unix du joueur qui interagit avec le programme. Gr\xE2ce \xE0 cet \xE9tat, nous pourrons calculer la quantit\xE9 d&#39;\xE9nergie dont dispose le joueur \xE0 un moment donn\xE9. Nous disposons \xE9galement d&#39;une valeur pour la quantit\xE9 de bois que le b\xFBcheron peut transporter dans le jeu.</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">init_player</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">InitPlayer</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player<span class="token punctuation">.</span>energy <span class="token operator">=</span> <span class="token constant">MAX_ENERGY</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player<span class="token punctuation">.</span>last_login <span class="token operator">=</span> <span class="token class-name">Clock</span><span class="token punctuation">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span>unix_timestamp<span class="token punctuation">;</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token punctuation">...</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">InitPlayer</span> <span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        init<span class="token punctuation">,</span>
        payer <span class="token operator">=</span> signer<span class="token punctuation">,</span>
        space <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;player&quot;</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> signer<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> player<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">PlayerData</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> signer<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[account]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">PlayerData</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> level<span class="token punctuation">:</span> <span class="token keyword">u8</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> xp<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> wood<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> energy<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> last_login<span class="token punctuation">:</span> <span class="token keyword">i64</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h3 id="coupe-des-arbres" tabindex="-1"><a class="header-anchor" href="#coupe-des-arbres" aria-hidden="true">#</a> Coupe des arbres</h3><p>Ensuite, \xE0 chaque fois que le joueur appelle l&#39;instruction <code>chop_tree</code>, nous v\xE9rifions si le joueur a assez d&#39;\xE9nergie et le r\xE9compensons avec un bois.</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code>    <span class="token attribute attr-name">#[error_code]</span>
    <span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">ErrorCode</span> <span class="token punctuation">{</span>
        <span class="token attribute attr-name">#[msg(<span class="token string">&quot;Not enough energy&quot;</span>)]</span>
        <span class="token class-name">NotEnoughEnergy</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">chop_tree</span><span class="token punctuation">(</span><span class="token keyword">mut</span> ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">ChopTree</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> account <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">;</span>
        <span class="token function">update_energy</span><span class="token punctuation">(</span>account<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player<span class="token punctuation">.</span>energy <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token macro property">err!</span><span class="token punctuation">(</span><span class="token class-name">ErrorCode</span><span class="token punctuation">::</span><span class="token class-name">NotEnoughEnergy</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player<span class="token punctuation">.</span>wood <span class="token operator">=</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player<span class="token punctuation">.</span>wood <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player<span class="token punctuation">.</span>energy <span class="token operator">=</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player<span class="token punctuation">.</span>energy <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;You chopped a tree and got 1 wood. You have {} wood and {} energy left.&quot;</span><span class="token punctuation">,</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player<span class="token punctuation">.</span>wood<span class="token punctuation">,</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player<span class="token punctuation">.</span>energy<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="calcul-de-l-energie" tabindex="-1"><a class="header-anchor" href="#calcul-de-l-energie" aria-hidden="true">#</a> Calcul de l&#39;\xE9nergie</h3><p>La partie int\xE9ressante se situe dans la fonction <code>update_energy</code>. Nous v\xE9rifions le temps \xE9coul\xE9 et calculons l&#39;\xE9nergie dont disposera le joueur \xE0 l&#39;instant donn\xE9. Nous ferons de m\xEAme c\xF4t\xE9 client. Nous mettons \xE0 jour l&#39;\xE9nergie au lieu de l&#39;interroger en permanence. Il s&#39;agit d&#39;une technique courante dans le d\xE9veloppement de jeux.</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code>
<span class="token keyword">const</span> <span class="token constant">TIME_TO_REFILL_ENERGY</span><span class="token punctuation">:</span> <span class="token keyword">i64</span> <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">MAX_ENERGY</span><span class="token punctuation">:</span> <span class="token keyword">u64</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">update_energy</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token class-name">ChopTree</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> time_passed<span class="token punctuation">:</span> <span class="token keyword">i64</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token class-name">Clock</span><span class="token punctuation">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span>unix_timestamp <span class="token operator">-</span> <span class="token operator">&amp;</span>ctx<span class="token punctuation">.</span>player<span class="token punctuation">.</span>last_login<span class="token punctuation">;</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> time_spent<span class="token punctuation">:</span> <span class="token keyword">i64</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> time_passed <span class="token operator">&gt;</span> <span class="token constant">TIME_TO_REFILL_ENERGY</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>player<span class="token punctuation">.</span>energy <span class="token operator">=</span> ctx<span class="token punctuation">.</span>player<span class="token punctuation">.</span>energy <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        time_passed <span class="token operator">-=</span> <span class="token constant">TIME_TO_REFILL_ENERGY</span><span class="token punctuation">;</span>
        time_spent <span class="token operator">+=</span> <span class="token constant">TIME_TO_REFILL_ENERGY</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> ctx<span class="token punctuation">.</span>player<span class="token punctuation">.</span>energy <span class="token operator">==</span> <span class="token constant">MAX_ENERGY</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> ctx<span class="token punctuation">.</span>player<span class="token punctuation">.</span>energy <span class="token operator">&gt;=</span> <span class="token constant">MAX_ENERGY</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>player<span class="token punctuation">.</span>last_login <span class="token operator">=</span> <span class="token class-name">Clock</span><span class="token punctuation">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span>unix_timestamp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>player<span class="token punctuation">.</span>last_login <span class="token operator">+=</span> time_spent<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="client-js" tabindex="-1"><a class="header-anchor" href="#client-js" aria-hidden="true">#</a> Client Js</h2>`,12),y=s("Voici un exemple de code source complet bas\xE9 sur le "),f=n("em",null,"Solana dapp scaffold",-1),h=s(" avec un client react : "),_={href:"https://github.com/solana-developers/solana-game-starter-kits/tree/main/lumberjack",target:"_blank",rel:"noopener noreferrer"},w=s("Source"),x=t(`<h3 id="creer-une-connexion" tabindex="-1"><a class="header-anchor" href="#creer-une-connexion" aria-hidden="true">#</a> Cr\xE9er une connexion</h3><p>Dans le fichier Anchor.ts, nous cr\xE9ons une connexion :</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> connection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Connection</span><span class="token punctuation">(</span>
    <span class="token string">&quot;https://api.devnet.solana.com&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;confirmed&quot;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Notez que le param\xE8tre de confirmation est fix\xE9 \xE0 &#39;confirmed&#39;. Cela signifie que nous attendons que les transactions soient confirm\xE9es au lieu d&#39;\xEAtre finalis\xE9es. Cela signifie que nous attendons que la super majorit\xE9 du r\xE9seau d\xE9clare que la transaction est valide. Cela prend environ 400 ms et il n&#39;y a jamais eu de transaction confirm\xE9e qui n&#39;ait pas \xE9t\xE9 finalis\xE9e. Ainsi, pour les jeux, il s&#39;agit du param\xE8tre de confirmation parfait.</p><h3 id="initialisation-des-donnees-du-joueur" tabindex="-1"><a class="header-anchor" href="#initialisation-des-donnees-du-joueur" aria-hidden="true">#</a> Initialisation des donn\xE9es du joueur</h3><p>La premi\xE8re chose \xE0 faire est de trouver l&#39;adresse du compte du joueur en utilisant la cha\xEEne de caract\xE8res <code>player</code> et la cl\xE9 publique du joueur comme seeds. Ensuite, nous appelons <code>initPlayer</code> pour cr\xE9er le compte.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>pda<span class="token punctuation">]</span> <span class="token operator">=</span> PublicKey<span class="token punctuation">.</span><span class="token function">findProgramAddressSync</span><span class="token punctuation">(</span>
  <span class="token punctuation">[</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;player&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> publicKey<span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">PublicKey</span><span class="token punctuation">(</span><span class="token constant">LUMBERJACK_PROGRAM_ID</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> transaction <span class="token operator">=</span> program<span class="token punctuation">.</span>methods
  <span class="token punctuation">.</span><span class="token function">initPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">accounts</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">player</span><span class="token operator">:</span> pda<span class="token punctuation">,</span>
    <span class="token literal-property property">signer</span><span class="token operator">:</span> publicKey<span class="token punctuation">,</span>
    <span class="token literal-property property">systemProgram</span><span class="token operator">:</span> SystemProgram<span class="token punctuation">.</span>programId<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> tx <span class="token operator">=</span> <span class="token keyword">await</span> transaction<span class="token punctuation">;</span>
<span class="token keyword">const</span> txSig <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">sendTransaction</span><span class="token punctuation">(</span>tx<span class="token punctuation">,</span> connection<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">skipPreflight</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">confirmTransaction</span><span class="token punctuation">(</span>txSig<span class="token punctuation">,</span> <span class="token string">&quot;confirmed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="s-abonner-aux-mises-a-jour-du-compte" tabindex="-1"><a class="header-anchor" href="#s-abonner-aux-mises-a-jour-du-compte" aria-hidden="true">#</a> S&#39;abonner aux mises \xE0 jour du compte</h3><p>Vous pouvez voir ici comment obtenir les donn\xE9es d&#39;un compte dans le client JS et comment s&#39;abonner \xE0 un compte. <code>connection.onAccountChange</code> cr\xE9e une connexion au n\u0153ud RPC qui transmettra au client toutes les modifications apport\xE9es au compte. Cette m\xE9thode est plus rapide que de r\xE9cup\xE9rer les nouvelles donn\xE9es du compte apr\xE8s chaque modification. Nous pouvons alors utiliser <code>program.coder</code> pour d\xE9coder les donn\xE9es du compte et les utiliser directement dans le jeu.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>publicKey<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>pda<span class="token punctuation">]</span> <span class="token operator">=</span> PublicKey<span class="token punctuation">.</span><span class="token function">findProgramAddressSync</span><span class="token punctuation">(</span>
        <span class="token punctuation">[</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;player&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> publicKey<span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">PublicKey</span><span class="token punctuation">(</span><span class="token constant">LUMBERJACK_PROGRAM_ID</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      program<span class="token punctuation">.</span>account<span class="token punctuation">.</span>playerData<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>pda<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setGameState</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      window<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;No player data found, please init!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    connection<span class="token punctuation">.</span><span class="token function">onAccountChange</span><span class="token punctuation">(</span>pda<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">account</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setGameState</span><span class="token punctuation">(</span>program<span class="token punctuation">.</span>coder<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token string">&quot;playerData&quot;</span><span class="token punctuation">,</span> account<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>publicKey<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="calculer-l-energie-et-afficher-le-decompte" tabindex="-1"><a class="header-anchor" href="#calculer-l-energie-et-afficher-le-decompte" aria-hidden="true">#</a> Calculer l&#39;\xE9nergie et afficher le d\xE9compte</h3><p>Dans le client javascript, nous pouvons alors ex\xE9cuter la m\xEAme logique que dans le programme pour pr\xE9calculer la quantit\xE9 d&#39;\xE9nergie dont dispose le joueur \xE0 ce moment-l\xE0 et afficher un d\xE9compte pour le joueur afin qu&#39;il sache quand la prochaine \xE9nergie sera disponible :</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> interval <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>gameState <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> gameState<span class="token punctuation">.</span>lastLogin <span class="token operator">==</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> gameState<span class="token punctuation">.</span>energy <span class="token operator">&gt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
        <span class="token keyword">const</span> lastLoginTime <span class="token operator">=</span> gameState<span class="token punctuation">.</span>lastLogin <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> timePassed <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> lastLoginTime<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>timePassed <span class="token operator">&gt;</span> <span class="token constant">TIME_TO_REFILL_ENERGY</span> <span class="token operator">&amp;&amp;</span> gameState<span class="token punctuation">.</span>energy <span class="token operator">&lt;</span> <span class="token constant">MAX_ENERGY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            gameState<span class="token punctuation">.</span>energy <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>gameState<span class="token punctuation">.</span>energy<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            gameState<span class="token punctuation">.</span>lastLogin <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>gameState<span class="token punctuation">.</span>lastLogin<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token constant">TIME_TO_REFILL_ENERGY</span><span class="token punctuation">;</span>
            timePassed <span class="token operator">-=</span> <span class="token constant">TIME_TO_REFILL_ENERGY</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">setTimePassed</span><span class="token punctuation">(</span>timePassed<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> nextEnergyIn <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token constant">TIME_TO_REFILL_ENERGY</span> <span class="token operator">-</span> timePassed<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nextEnergyIn <span class="token operator">&lt;</span> <span class="token constant">TIME_TO_REFILL_ENERGY</span> <span class="token operator">&amp;&amp;</span> nextEnergyIn <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">setEnergyNextIn</span><span class="token punctuation">(</span>nextEnergyIn<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">setEnergyNextIn</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>interval<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>gameState<span class="token punctuation">,</span> timePassed<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">...</span>

<span class="token punctuation">{</span><span class="token punctuation">(</span>gameState <span class="token operator">&amp;&amp;</span> <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;flex flex-col items-center&quot;</span><span class="token operator">&gt;</span>
    <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token string">&quot;Wood: &quot;</span> <span class="token operator">+</span> gameState<span class="token punctuation">.</span>wood <span class="token operator">+</span> <span class="token string">&quot; Energy: &quot;</span> <span class="token operator">+</span> gameState<span class="token punctuation">.</span>energy <span class="token operator">+</span> <span class="token string">&quot; Next energy in: &quot;</span> <span class="token operator">+</span> nextEnergyIn <span class="token punctuation">)</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>Avec cela, vous pouvez maintenant construire n&#39;importe quel jeu bas\xE9 sur un syst\xE8me d&#39;\xE9nergie. M\xEAme si quelqu&#39;un construit un bot pour le jeu, le mieux qu&#39;il puisse faire est de jouer de mani\xE8re optimale. Selon la logique de votre jeu, cela peut m\xEAme \xEAtre plus simple \xE0 atteindre en jouant normalement.</p><p>Ce jeu devient encore meilleur lorsqu&#39;il est combin\xE9 avec le chapitre <a href="../gaming/interact-with-tokens">Interagir avec des jetons</a> et que vous distribuez des jetons aux joueurs.</p>`,15);function v(E,q){const a=o("ExternalLinkIcon");return c(),u(l,null,[i,k,m,n("p",null,[n("a",d,[b,p(a)])]),g,n("p",null,[y,f,h,n("a",_,[w,p(a)])]),x],64)}var I=e(r,[["render",v]]);export{I as default};
