import{_ as e,r as o,o as c,c as l,a as n,b as t,F as u,d as s,e as p}from"./app.07ce7a66.js";const r={},i=n("h1",{id:"storing-sol-in-pdas-for-game-rewards",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#storing-sol-in-pdas-for-game-rewards","aria-hidden":"true"},"#"),s(" Storing SOL in PDAs for Game Rewards")],-1),k=n("p",null,"Video Walkthrough:",-1),m=n("div",{class:"video-block"},[n("iframe",{width:"320",height:"200",src:"https://www.youtube.com/embed/gILXyWvXu7M",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:""})],-1),b=n("p",null,"Live Version. (use devnet)",-1),d=n("iframe",{height:"400",scrolling:"no",title:"OZXQWp",src:"https://solplay.de/TinyAdventureTwo/index.html",frameborder:"no",allowtransparency:"true",allowfullscreen:"true",style:{width:"80%"}},`
`,-1),h=p('<h2 id="tiny-adventure-anchor-program-part-two" tabindex="-1"><a class="header-anchor" href="#tiny-adventure-anchor-program-part-two" aria-hidden="true">#</a> Tiny Adventure Anchor Program - Part Two</h2><p>In this tutorial, we will rebuild the Tiny Adventure game and introduce a chest with a reward of 0.1 SOL. The chest will &quot;spawn&quot; at a specific position, and when the player reaches that position, they will receive the reward. The goal of this program is to demonstrate how to store SOL within a program account and distribute it to players.</p><p>The Tiny Adventure Two Program consists of 3 instructions:</p><ul><li><code>initialize_level_one</code> - This instruction initializes two on-chain accounts: one for recording the player&#39;s position and another for holding the SOL reward that represents the \u201Creward chest\u201D.</li><li><code>reset_level_and_spawn_chest</code> - This instruction resets the player&#39;s position to zero and &quot;respawns&quot; a reward chest by transferring SOL from the user invoking the instruction to the reward chest account.</li><li><code>move_right</code> - This instruction allows the player to move their position to the right and collect the SOL in the reward chest once they reach a specific position.</li></ul>',4),g=s("In the following sections, we will guide you through building the program step by step. You can find the complete source code, which can be deployed directly from your browser using the Solana Playground, at this link: "),y={href:"https://beta.solpg.io/tutorials/tiny-adventure-two",target:"_blank",rel:"noopener noreferrer"},w=s("Open In Playground"),f=s("."),_=n("h3",{id:"getting-started",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getting-started","aria-hidden":"true"},"#"),s(" Getting Started")],-1),v=n("p",null,"To start building the Tiny Adventure game, follow these steps:",-1),A=s("Visit the "),q={href:"https://beta.solpg.io/",target:"_blank",rel:"noopener noreferrer"},S=s("Solana Playground"),x=s(" and create a new Anchor project. If you're new to Solana Playground, you'll also need to create a Playground Wallet."),L=p(`<p>After creating a new project, replace the default starter code with the code below:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span>solana_program<span class="token punctuation">::</span>native_token<span class="token punctuation">::</span></span><span class="token constant">LAMPORTS_PER_SOL</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span></span>system_program<span class="token punctuation">;</span>

<span class="token macro property">declare_id!</span><span class="token punctuation">(</span><span class="token string">&quot;11111111111111111111111111111111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[program]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">tiny_adventure_two</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">print_player</span><span class="token punctuation">(</span>player_position<span class="token punctuation">:</span> <span class="token keyword">u8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> player_position <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;A Journey Begins!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;o.........\u{1F48E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> player_position <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;..o.......\u{1F48E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> player_position <span class="token operator">==</span> <span class="token number">2</span> <span class="token punctuation">{</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;....o.....\u{1F48E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> player_position <span class="token operator">==</span> <span class="token number">3</span> <span class="token punctuation">{</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;........\\\\o/\u{1F48E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;..........\\\\o/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;You have reached the end! Super!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>In this game, the player starts at position 0 and can only move right. To visualize the player&#39;s progress throughout the game, we&#39;ll use message logs to represent their journey towards the reward chest!</p><h3 id="defining-the-chest-vault-account" tabindex="-1"><a class="header-anchor" href="#defining-the-chest-vault-account" aria-hidden="true">#</a> Defining the Chest Vault Account</h3><p>Add the <code>CHEST_REWARD</code> constant at the beginning of the program. The <code>CHEST_REWARD</code> represents the amount of lamports that will be put into the chest and given out as rewards. Lamports are the smallest fractions of a SOL, with 1 billion lamports being equal to 1 SOL.</p><p>To store the SOL reward, we will define a new <code>ChestVaultAccount</code> struct. This is an empty struct because we will be directly updating the lamports in the account. The account will hold the SOL reward and does not need to store any additional data.</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span>solana_program<span class="token punctuation">::</span>native_token<span class="token punctuation">::</span></span><span class="token constant">LAMPORTS_PER_SOL</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span></span>system_program<span class="token punctuation">;</span>

<span class="token macro property">declare_id!</span><span class="token punctuation">(</span><span class="token string">&quot;11111111111111111111111111111111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[program]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">tiny_adventure_two</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>

    <span class="token comment">// The amount of lamports that will be put into chests and given out as rewards.</span>
    <span class="token keyword">const</span> <span class="token constant">CHEST_REWARD</span><span class="token punctuation">:</span> <span class="token keyword">u64</span> <span class="token operator">=</span> <span class="token constant">LAMPORTS_PER_SOL</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// 0.1 SOL</span>
<span class="token punctuation">}</span>

<span class="token punctuation">...</span>

<span class="token comment">// Define the Chest Vault Account structure</span>
<span class="token attribute attr-name">#[account]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">ChestVaultAccount</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="defining-the-game-data-account" tabindex="-1"><a class="header-anchor" href="#defining-the-game-data-account" aria-hidden="true">#</a> Defining the Game Data Account</h3><p>To keep track of the player&#39;s position within the game, we need to define a structure for the on-chain account that will store the player&#39;s position.</p><p>The <code>GameDataAccount</code> struct contains a single field, <code>player_position</code>, which stores the player&#39;s current position as an unsigned 8-bit integer.</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code>
<span class="token keyword">use</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span>solana_program<span class="token punctuation">::</span>native_token<span class="token punctuation">::</span></span><span class="token constant">LAMPORTS_PER_SOL</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span></span>system_program<span class="token punctuation">;</span>

<span class="token macro property">declare_id!</span><span class="token punctuation">(</span><span class="token string">&quot;11111111111111111111111111111111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[program]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">tiny_adventure_two</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token punctuation">...</span>

<span class="token punctuation">}</span>

<span class="token punctuation">...</span>

<span class="token comment">// Define the Game Data Account structure</span>
<span class="token attribute attr-name">#[account]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">GameDataAccount</span> <span class="token punctuation">{</span>
    player_position<span class="token punctuation">:</span> <span class="token keyword">u8</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>With the <code>GameDataAccount</code> struct defined, you can now use it to store and update the player&#39;s position as they interact with the game. As the player moves right and progresses through the game, their position will be updated within the <code>GameDataAccount</code>, allowing you to track their progress towards the chest containing the SOL reward.</p><h3 id="initialize-level-one-instruction" tabindex="-1"><a class="header-anchor" href="#initialize-level-one-instruction" aria-hidden="true">#</a> Initialize Level One Instruction</h3><p>With the <code>GameDataAccount</code> and <code>ChestVaultAccount</code> defined, let&#39;s implement the <code>initialize_level_one</code> instruction. This instruction initializes both the <code>GameDataAccount</code> and <code>ChestVaultAccount</code>, sets the player&#39;s position to 0, and displays the starting message.</p><p>The <code>initialize_level_one</code> instruction requires 4 accounts:</p><ul><li><code>new_game_data_account</code> - the <code>GameDataAccount</code> we are initializing to store the player\u2019s position</li><li><code>chest_vault</code> - the <code>ChestVaultAccount</code> we are initializing to store the SOL reward</li><li><code>signer</code> - the player paying for the initialization of the accounts</li><li><code>system_program</code> - a required account when creating a new account</li></ul><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[program]</span>
<span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">tiny_adventure_two</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>

    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">initialize_level_one</span><span class="token punctuation">(</span>_ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">InitializeLevelOne</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;A Journey Begins!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;o.......\u{1F48E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">...</span>
<span class="token punctuation">}</span>

<span class="token comment">// Specify the accounts required by the initialize_level_one instruction</span>
<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">InitializeLevelOne</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        init_if_needed<span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;level1&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
        payer <span class="token operator">=</span> signer<span class="token punctuation">,</span>
        space <span class="token operator">=</span> <span class="token number">8</span> <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> new_game_data_account<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">GameDataAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        init_if_needed<span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;chestVault&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
        payer <span class="token operator">=</span> signer<span class="token punctuation">,</span>
        space <span class="token operator">=</span> <span class="token number">8</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> chest_vault<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">ChestVaultAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> signer<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token punctuation">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>Both the <code>GameDataAccount</code> and <code>ChestVaultAccount</code> are created using a Program Derived Address (PDA) as the address of the account, allowing us to deterministically locate the address later. The <code>init_if_needed</code> constraint ensures that the accounts are only initialized if they don&#39;t already exist. Since the PDAs for both accounts in this instruction use a single fixed seed, our program can only create one of each type of account. In effect, the instruction would only ever need to be invoked one time.</p><p>It&#39;s worth noting that the current implementation does not have any restrictions on who can modify the <code>GameDataAccount</code>, effectively turning the game into a multiplayer experience where everyone can control the player&#39;s movement.</p><p>Alternatively, you can use the signer&#39;s address as an extra seed in the <code>initialize</code> instruction, allowing each player to create their own <code>GameDataAccount</code>.</p><h3 id="reset-level-and-spawn-chest-instruction" tabindex="-1"><a class="header-anchor" href="#reset-level-and-spawn-chest-instruction" aria-hidden="true">#</a> Reset Level and Spawn Chest Instruction</h3><p>Next, let&#39;s implement the <code>reset_level_and_spawn_chest</code> instruction, which resets the player&#39;s position to the start and fills up the chest with a reward of 0.1 SOL.</p><p>The <code>reset_level_and_spawn_chest</code> instruction requires 4 accounts:</p><ul><li><code>new_game_data_account</code> - the <code>GameDataAccount</code> storing the player&#39;s position</li><li><code>chest_vault</code> - the <code>ChestVaultAccount</code> storing the SOL reward</li><li><code>signer</code> - the player providing the SOL reward for the chest</li><li><code>system_program</code> - the program we&#39;ll be invoking to transfer SOL using a cross-program invocation (CPI), more on this shortly</li></ul><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[program]</span>
<span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">tiny_adventure_two</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token punctuation">...</span>

    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">reset_level_and_spawn_chest</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">SpawnChest</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>game_data_account<span class="token punctuation">.</span>player_position <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">let</span> cpi_context <span class="token operator">=</span> <span class="token class-name">CpiContext</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>
            ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>system_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token namespace">system_program<span class="token punctuation">::</span></span><span class="token class-name">Transfer</span> <span class="token punctuation">{</span>
                from<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>payer<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                to<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>chest_vault<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token namespace">system_program<span class="token punctuation">::</span></span><span class="token function">transfer</span><span class="token punctuation">(</span>cpi_context<span class="token punctuation">,</span> <span class="token constant">CHEST_REWARD</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;Level Reset and Chest Spawned at position 3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">...</span>
<span class="token punctuation">}</span>

<span class="token comment">// Specify the accounts required by the reset_level_and_spawn_chest instruction</span>
<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">SpawnChest</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> payer<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span><span class="token keyword">mut</span><span class="token punctuation">,</span> seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;chestVault&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bump<span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> chest_vault<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">ChestVaultAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> game_data_account<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">GameDataAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token punctuation">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>This instruction includes a cross-program invocation (CPI) to transfer SOL from the payer to the <code>ChestVaultAccount</code>. A cross-program invocation is when one program invokes an instruction on another program. In this case, we use a CPI to invoke the <code>Transfer</code> instruction from the <code>system_program</code> to transfer SOL from the payer to the <code>ChestVaultAccount</code>.</p>`,26),P=s("Cross-program invocations are a key concept in the Solana programming model, enabling programs to directly interact with instructions from other programs. For a deeper dive into of CPIs, feel free to explore the CPI lessons available in the "),T={href:"https://www.soldev.app/course",target:"_blank",rel:"noopener noreferrer"},C=s("Solana Course"),D=s("."),O=p(`<h3 id="move-right-instruction" tabindex="-1"><a class="header-anchor" href="#move-right-instruction" aria-hidden="true">#</a> Move Right Instruction</h3><p>Finally, let&#39;s implement the <code>move_right</code> instruction which includes the logic for collecting the chest reward. When a player reaches position 3 and inputs the correct \u201Cpassword\u201D, the reward is transferred from the <strong><code>ChestVaultAccount</code></strong> to the player&#39;s account. If an incorrect password is entered, a custom Anchor Error is returned. If the player is already at position 3, a message will be logged. Otherwise, the position will be incremented by 1 to represent moving to the right.</p><p>The main purpose of this &quot;password&quot; functionality is to demonstrate how to incorporate parameters into an instruction and the implementation of custom Anchor Errors for improved error handling. In this example, the correct password will be &quot;gib&quot;.</p><p>The <code>move_right</code> instruction requires 3 accounts:</p><ul><li><code>new_game_data_account</code> - the <code>GameDataAccount</code> storing the player&#39;s position</li><li><code>chest_vault</code> - the <code>ChestVaultAccount</code> storing the SOL reward</li><li><code>player_wallet</code> - the wallet of the player invoking the instruction and the potential recipient of SOL reward</li></ul><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[program]</span>
<span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">tiny_adventure_two</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token punctuation">...</span>

    <span class="token comment">// Instruction to move right</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">move_right</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">MoveRight</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> game_data_account <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>game_data_account<span class="token punctuation">;</span>
        <span class="token keyword">if</span> game_data_account<span class="token punctuation">.</span>player_position <span class="token operator">==</span> <span class="token number">3</span> <span class="token punctuation">{</span>
            <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;You have reached the end! Super!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> game_data_account<span class="token punctuation">.</span>player_position <span class="token operator">==</span> <span class="token number">2</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> password <span class="token operator">!=</span> <span class="token string">&quot;gib&quot;</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token macro property">err!</span><span class="token punctuation">(</span><span class="token class-name">MyError</span><span class="token punctuation">::</span><span class="token class-name">WrongPassword</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            game_data_account<span class="token punctuation">.</span>player_position <span class="token operator">=</span> game_data_account<span class="token punctuation">.</span>player_position <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>

            <span class="token macro property">msg!</span><span class="token punctuation">(</span>
                <span class="token string">&quot;You made it! Here is your reward {0} lamports&quot;</span><span class="token punctuation">,</span>
                <span class="token constant">CHEST_REWARD</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token operator">*</span><span class="token operator">*</span>ctx
                <span class="token punctuation">.</span>accounts
                <span class="token punctuation">.</span>chest_vault
                <span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">try_borrow_mut_lamports</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token operator">-=</span> <span class="token constant">CHEST_REWARD</span><span class="token punctuation">;</span>
            <span class="token operator">*</span><span class="token operator">*</span>ctx
                <span class="token punctuation">.</span>accounts
                <span class="token punctuation">.</span>player
                <span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">try_borrow_mut_lamports</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token operator">+=</span> <span class="token constant">CHEST_REWARD</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            game_data_account<span class="token punctuation">.</span>player_position <span class="token operator">=</span> game_data_account<span class="token punctuation">.</span>player_position <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token function">print_player</span><span class="token punctuation">(</span>game_data_account<span class="token punctuation">.</span>player_position<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">...</span>
<span class="token punctuation">}</span>

<span class="token comment">// Specify the accounts required by the move_right instruction</span>
<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">MoveRight</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span><span class="token keyword">mut</span><span class="token punctuation">,</span> seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;chestVault&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bump<span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> chest_vault<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">ChestVaultAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> game_data_account<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">GameDataAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> player<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// Custom Anchor Error</span>
<span class="token attribute attr-name">#[error_code]</span>
<span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">MyError</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[msg(<span class="token string">&quot;Password was wrong&quot;</span>)]</span>
    <span class="token class-name">WrongPassword</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token punctuation">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><p>To transfer lamports from the reward chest to the player account, we can&#39;t use a Cross-Program Invocation (CPI) as we did previously, since the <code>ChestVaultAccount</code> isn&#39;t owned by the system program. Instead, we directly modify the lamports within the accounts by using <code>try_borrow_mut_lamports</code>. Keep in mind that the account you deduct lamports from must be a signer, and the runtime always makes sure that the total account balances stay equal after a transaction.</p><p>Note that Program Derived Accounts (PDAs) offer two main features:</p><ol><li>Provide a deterministic way to find an account&#39;s address</li><li>Allow the program from which a PDA is derived to &quot;sign&quot; for them</li></ol><p>This is the reason we are able to deduct lamports from the <code>ChestVaultAccount</code> without explicitly requiring an extra signer for the instruction.</p><h3 id="build-and-deploy" tabindex="-1"><a class="header-anchor" href="#build-and-deploy" aria-hidden="true">#</a> Build and Deploy</h3><p>Great job! You&#39;ve now completed part two of the Tiny Adventure program! Your final program should look like this:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span>solana_program<span class="token punctuation">::</span>native_token<span class="token punctuation">::</span></span><span class="token constant">LAMPORTS_PER_SOL</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span></span>system_program<span class="token punctuation">;</span>

<span class="token comment">// This is your program&#39;s public key and it will update</span>
<span class="token comment">// automatically when you build the project.</span>
<span class="token macro property">declare_id!</span><span class="token punctuation">(</span><span class="token string">&quot;7gZTdZg86YsYbs92Rhv63kZUAkoww1kLexJg8sNpgVQ3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[program]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">tiny_adventure_two</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>

    <span class="token comment">// The amount of lamports that will be put into chests and given out as rewards.</span>
    <span class="token keyword">const</span> <span class="token constant">CHEST_REWARD</span><span class="token punctuation">:</span> <span class="token keyword">u64</span> <span class="token operator">=</span> <span class="token constant">LAMPORTS_PER_SOL</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// 0.1 SOL</span>

    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">initialize_level_one</span><span class="token punctuation">(</span>_ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">InitializeLevelOne</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// Usually in your production code you would not print lots of text because it cost compute units.</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;A Journey Begins!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;o.......\u{1F48E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">reset_level_and_spawn_chest</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">SpawnChest</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>game_data_account<span class="token punctuation">.</span>player_position <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">let</span> cpi_context <span class="token operator">=</span> <span class="token class-name">CpiContext</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>
            ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>system_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token namespace">system_program<span class="token punctuation">::</span></span><span class="token class-name">Transfer</span> <span class="token punctuation">{</span>
                from<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>payer<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                to<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>chest_vault<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token namespace">system_program<span class="token punctuation">::</span></span><span class="token function">transfer</span><span class="token punctuation">(</span>cpi_context<span class="token punctuation">,</span> <span class="token constant">CHEST_REWARD</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;Level Reset and Chest Spawned at position 3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">move_right</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token class-name">MoveRight</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> game_data_account <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>game_data_account<span class="token punctuation">;</span>
        <span class="token keyword">if</span> game_data_account<span class="token punctuation">.</span>player_position <span class="token operator">==</span> <span class="token number">3</span> <span class="token punctuation">{</span>
            <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;You have reached the end! Super!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> game_data_account<span class="token punctuation">.</span>player_position <span class="token operator">==</span> <span class="token number">2</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> password <span class="token operator">!=</span> <span class="token string">&quot;gib&quot;</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token macro property">err!</span><span class="token punctuation">(</span><span class="token class-name">MyError</span><span class="token punctuation">::</span><span class="token class-name">WrongPassword</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            game_data_account<span class="token punctuation">.</span>player_position <span class="token operator">=</span> game_data_account<span class="token punctuation">.</span>player_position <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>

            <span class="token macro property">msg!</span><span class="token punctuation">(</span>
                <span class="token string">&quot;You made it! Here is your reward {0} lamports&quot;</span><span class="token punctuation">,</span>
                <span class="token constant">CHEST_REWARD</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token operator">*</span><span class="token operator">*</span>ctx
                <span class="token punctuation">.</span>accounts
                <span class="token punctuation">.</span>chest_vault
                <span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">try_borrow_mut_lamports</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token operator">-=</span> <span class="token constant">CHEST_REWARD</span><span class="token punctuation">;</span>
            <span class="token operator">*</span><span class="token operator">*</span>ctx
                <span class="token punctuation">.</span>accounts
                <span class="token punctuation">.</span>player
                <span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">try_borrow_mut_lamports</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token operator">+=</span> <span class="token constant">CHEST_REWARD</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            game_data_account<span class="token punctuation">.</span>player_position <span class="token operator">=</span> game_data_account<span class="token punctuation">.</span>player_position <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token function">print_player</span><span class="token punctuation">(</span>game_data_account<span class="token punctuation">.</span>player_position<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">print_player</span><span class="token punctuation">(</span>player_position<span class="token punctuation">:</span> <span class="token keyword">u8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> player_position <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;A Journey Begins!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;o.........\u{1F48E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> player_position <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;..o.......\u{1F48E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> player_position <span class="token operator">==</span> <span class="token number">2</span> <span class="token punctuation">{</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;....o.....\u{1F48E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> player_position <span class="token operator">==</span> <span class="token number">3</span> <span class="token punctuation">{</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;........\\\\o/\u{1F48E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;..........\\\\o/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">msg!</span><span class="token punctuation">(</span><span class="token string">&quot;You have reached the end! Super!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">InitializeLevelOne</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// We must specify the space in order to initialize an account.</span>
    <span class="token comment">// First 8 bytes are default account discriminator,</span>
    <span class="token comment">// next 1 byte come from NewAccount.data being type u8.</span>
    <span class="token comment">// (u8 = 8 bits unsigned integer = 8 bytes)</span>
    <span class="token comment">// You can also use the signer as seed [signer.key().as_ref()],</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        init_if_needed<span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;level1&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
        payer <span class="token operator">=</span> signer<span class="token punctuation">,</span>
        space <span class="token operator">=</span> <span class="token number">8</span> <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> new_game_data_account<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">GameDataAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token comment">// This is the PDA in which we will deposit the reward SOL and</span>
    <span class="token comment">// from where we send it back to the first player reaching the chest.</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        init_if_needed<span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;chestVault&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
        payer <span class="token operator">=</span> signer<span class="token punctuation">,</span>
        space <span class="token operator">=</span> <span class="token number">8</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> chest_vault<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">ChestVaultAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> signer<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">SpawnChest</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> payer<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span><span class="token keyword">mut</span><span class="token punctuation">,</span> seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;chestVault&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bump<span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> chest_vault<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">ChestVaultAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> game_data_account<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">GameDataAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Accounts)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">MoveRight</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span><span class="token keyword">mut</span><span class="token punctuation">,</span> seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">b&quot;chestVault&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bump<span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">pub</span> chest_vault<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">ChestVaultAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> game_data_account<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">GameDataAccount</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    <span class="token keyword">pub</span> player<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[account]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">GameDataAccount</span> <span class="token punctuation">{</span>
    player_position<span class="token punctuation">:</span> <span class="token keyword">u8</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[account]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">ChestVaultAccount</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token attribute attr-name">#[error_code]</span>
<span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">MyError</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[msg(<span class="token string">&quot;Password was wrong&quot;</span>)]</span>
    <span class="token class-name">WrongPassword</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br></div></div><p>Now that the program is complete, let&#39;s build and deploy it using the Solana Playground!</p><p>If you&#39;re new to the Solana Playground, start by creating a Playground Wallet and make sure you&#39;re connected to a Devnet endpoint. Next, run\xA0<code>solana airdrop 2</code> until you have 6 SOL. Once you have enough SOL, build and deploy the program.</p><h3 id="get-started-with-the-client" tabindex="-1"><a class="header-anchor" href="#get-started-with-the-client" aria-hidden="true">#</a> Get Started with the Client</h3><p>In this section, we&#39;ll walk through a simple client-side implementation for interacting with the game. We will break down the code and provide detailed explanations for each step. To get started, navigate to the <code>client.ts</code> file in Solana Playground, remove the placeholder code, and add the code snippets from the following sections.</p><p>First, let&#39;s derive the PDAs (Program Derived Addresses) for the <code>GameDataAccount</code> and <code>ChestVaultAccount</code>. A PDA is a unique address in the format of a public key, derived using the program&#39;s ID and additional seeds.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// The PDA adress everyone will be able to control the character if the interact with your program</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>globalLevel1GameDataAccount<span class="token punctuation">,</span> bump<span class="token punctuation">]</span> <span class="token operator">=</span>
  <span class="token keyword">await</span> anchor<span class="token punctuation">.</span>web3<span class="token punctuation">.</span>PublicKey<span class="token punctuation">.</span><span class="token function">findProgramAddress</span><span class="token punctuation">(</span>
    <span class="token punctuation">[</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;level1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">//[pg.wallet.publicKey.toBuffer()], &lt;- You could also add the player wallet as a seed, then you would have one instance per player. Need to also change the seed in the rust part</span>
    pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>programId
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// This is where the program will save the sol reward for the chests and from which the reward will be payed out again</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>chestVaultAccount<span class="token punctuation">,</span> chestBump<span class="token punctuation">]</span> <span class="token operator">=</span>
  <span class="token keyword">await</span> anchor<span class="token punctuation">.</span>web3<span class="token punctuation">.</span>PublicKey<span class="token punctuation">.</span><span class="token function">findProgramAddress</span><span class="token punctuation">(</span>
    <span class="token punctuation">[</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;chestVault&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>programId
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>Next, we&#39;ll call the <code>initializeLevelOne</code> instruction to set up the <code>GameDataAccount</code> and <code>ChestVaultAccount</code>.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Initialize level</span>
<span class="token keyword">let</span> txHash <span class="token operator">=</span> <span class="token keyword">await</span> pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>methods
  <span class="token punctuation">.</span><span class="token function">initializeLevelOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">accounts</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">chestVault</span><span class="token operator">:</span> chestVaultAccount<span class="token punctuation">,</span>
    <span class="token literal-property property">newGameDataAccount</span><span class="token operator">:</span> globalLevel1GameDataAccount<span class="token punctuation">,</span>
    <span class="token literal-property property">signer</span><span class="token operator">:</span> pg<span class="token punctuation">.</span>wallet<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>
    <span class="token literal-property property">systemProgram</span><span class="token operator">:</span> web3<span class="token punctuation">.</span>SystemProgram<span class="token punctuation">.</span>programId<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">signers</span><span class="token punctuation">(</span><span class="token punctuation">[</span>pg<span class="token punctuation">.</span>wallet<span class="token punctuation">.</span>keypair<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">rpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Use &#39;solana confirm -v </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>txHash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; to see the logs</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> pg<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">confirmTransaction</span><span class="token punctuation">(</span>txHash<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> balance <span class="token operator">=</span> <span class="token keyword">await</span> pg<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span>pg<span class="token punctuation">.</span>wallet<span class="token punctuation">.</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">My balance before spawning a chest: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>balance <span class="token operator">/</span> web3<span class="token punctuation">.</span><span class="token constant">LAMPORTS_PER_SOL</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> SOL</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>After that, we&#39;ll use the <code>resetLevelAndSpawnChest</code> instruction to set the player&#39;s position to 0 and fill the <code>ChestVaultAccount</code> with 0.1 SOL.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Set the player position back to 0 and pay to fill up the chest with sol</span>
txHash <span class="token operator">=</span> <span class="token keyword">await</span> pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>methods
  <span class="token punctuation">.</span><span class="token function">resetLevelAndSpawnChest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">accounts</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">chestVault</span><span class="token operator">:</span> chestVaultAccount<span class="token punctuation">,</span>
    <span class="token literal-property property">gameDataAccount</span><span class="token operator">:</span> globalLevel1GameDataAccount<span class="token punctuation">,</span>
    <span class="token literal-property property">payer</span><span class="token operator">:</span> pg<span class="token punctuation">.</span>wallet<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>
    <span class="token literal-property property">systemProgram</span><span class="token operator">:</span> web3<span class="token punctuation">.</span>SystemProgram<span class="token punctuation">.</span>programId<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">signers</span><span class="token punctuation">(</span><span class="token punctuation">[</span>pg<span class="token punctuation">.</span>wallet<span class="token punctuation">.</span>keypair<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">rpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Use &#39;solana confirm -v </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>txHash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; to see the logs</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> pg<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">confirmTransaction</span><span class="token punctuation">(</span>txHash<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Level reset and chest spawned \u{1F48E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;o........\u{1F48E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>Now we can interact with the game by calling the <code>moveRight</code> instruction. In this example, we&#39;ll loop through this instruction until the player reaches the position to collect the reward from the <code>ChestVaultAccount</code>.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token comment">// Here we move to the right three times and collect the chest at the end of the level</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  txHash <span class="token operator">=</span> <span class="token keyword">await</span> pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>methods
    <span class="token punctuation">.</span><span class="token function">moveRight</span><span class="token punctuation">(</span><span class="token string">&quot;gib&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">accounts</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">chestVault</span><span class="token operator">:</span> chestVaultAccount<span class="token punctuation">,</span>
      <span class="token literal-property property">gameDataAccount</span><span class="token operator">:</span> globalLevel1GameDataAccount<span class="token punctuation">,</span>
      <span class="token literal-property property">player</span><span class="token operator">:</span> pg<span class="token punctuation">.</span>wallet<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">signers</span><span class="token punctuation">(</span><span class="token punctuation">[</span>pg<span class="token punctuation">.</span>wallet<span class="token punctuation">.</span>keypair<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">rpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Use &#39;solana confirm -v </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>txHash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; to see the logs</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> pg<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">confirmTransaction</span><span class="token punctuation">(</span>txHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> balance <span class="token operator">=</span> <span class="token keyword">await</span> pg<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span>pg<span class="token punctuation">.</span>wallet<span class="token punctuation">.</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">My balance: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>balance <span class="token operator">/</span> web3<span class="token punctuation">.</span><span class="token constant">LAMPORTS_PER_SOL</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> SOL</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> gameDateAccount <span class="token operator">=</span> <span class="token keyword">await</span> pg<span class="token punctuation">.</span>program<span class="token punctuation">.</span>account<span class="token punctuation">.</span>gameDataAccount<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>
    globalLevel1GameDataAccount
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Player position is:&quot;</span><span class="token punctuation">,</span> gameDateAccount<span class="token punctuation">.</span>playerPosition<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">switch</span> <span class="token punctuation">(</span>gameDateAccount<span class="token punctuation">.</span>playerPosition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;A journey begins...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;o........\u{1F48E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;....o....\u{1F48E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;......o..\u{1F48E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;.........\\\\o/\u{1F48E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;...........\\\\o/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>Finally, press the &quot;Run&quot; button in the Solana Playground to execute the client. When you input anything other than &quot;gib&quot; as the password for the <strong><code>moveRight</code></strong> instruction, you should encounter the following error message upon reaching the position to claim the chest reward:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Error Code: WrongPassword. Error Number: 6000. Error Message: Password was wrong.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>However, if you enter the correct password, the output should resemble the following:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Running client...
  client.ts:
    Use &#39;solana confirm -v CX8VWV5Jp1kXDkZrTdeeyibgZg3B3cXAzchzCfNHvJoqARSGHeEU5injypxFwiKFcHPcWFG9BeNSrqZAdENtL2t&#39; to see the logs
    My balance before spawning a chest: 6.396630254 SOL
    Use &#39;solana confirm -v 3HwAS1RK7beL3mGoNdFYWteJXF3NdJXiEskJrHtuJ6Tu9ow67Zo3yScQBEPQyish33hP8WyuVanmq93wEFJ2LQcx&#39; to see the logs
    Level reset and chest spawned \u{1F48E}
    o........\u{1F48E}
    Use &#39;solana confirm -v 43KnGrx5VQYd8LctsNaNqN1hg69vE6wiiTbdxTC1uM3Hasnq7ZdM9zWx4JS39AKNz2FpQr9a3ZnEA7XscEzmXQ5U&#39; to see the logs
    My balance: 6.296620254 SOL
    Player position is: 1
    ....o....\u{1F48E}
    Use &#39;solana confirm -v AGxYWDw49d4y5dLon5M42eu1qG8g2Yf7FeTr3Dpbf1uFXnMeUzp4XWmHyQP1YRNpT8acz4aTJU9f2FQpL6BSAkY&#39; to see the logs
    My balance: 6.296615254 SOL
    Player position is: 2
    ......o..\u{1F48E}
    Use &#39;solana confirm -v 5pjAU5NrS4u91QLWZTvo9aXBtR3c6g981UGSxrWDoDW5MehXnx5LnAxu4jKLp1p75RKpVSgMBgg2zHX3WDyci7AK&#39; to see the logs
    My balance: 6.396610254 SOL
    Player position is: 3
    .........\\o/\u{1F48E}
    ...........\\o/
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>Well done! You have successfully created, deployed, and interacted with Tiny Adventure Two from the client side. You&#39;ve incorporated a new feature that allows players to collect rewards by reaching the chest at the end of the level. Moreover, you&#39;ve learned how to transfer SOL within an Anchor program using cross-program invocations and by directly modifying lamports in accounts.</p><p>Feel free to continue building independently and enhance the game with additional features like new levels or alternative rewards!</p>`,31);function R(E,V){const a=o("ExternalLinkIcon");return c(),l(u,null,[i,k,m,b,d,h,n("p",null,[g,n("a",y,[w,t(a)]),f]),_,v,n("p",null,[A,n("a",q,[S,t(a)]),x]),L,n("p",null,[P,n("a",T,[C,t(a)]),D]),O],64)}var G=e(r,[["render",R]]);export{G as default};
