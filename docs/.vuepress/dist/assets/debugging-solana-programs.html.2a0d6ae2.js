import{_ as t,r as l,o as r,c as i,a,b as e,F as o,e as p,d as s}from"./app.07ce7a66.js";const c={},d=p(`<h1 id="debugging-solana-programs-solana-programlar\u0131nda-hata-ay\u0131klama" tabindex="-1"><a class="header-anchor" href="#debugging-solana-programs-solana-programlar\u0131nda-hata-ay\u0131klama" aria-hidden="true">#</a> Debugging Solana Programs (Solana Programlar\u0131nda Hata Ay\u0131klama)</h1><p>Bir Solana program\u0131n\u0131 test etmek ve hata ay\u0131klamak i\xE7in bir dizi se\xE7enek ve destekleyici ara\xE7 vard\u0131r.</p><h2 id="facts-ozet-bilgiler" tabindex="-1"><a class="header-anchor" href="#facts-ozet-bilgiler" aria-hidden="true">#</a> Facts (\xD6zet Bilgiler)</h2><p>:::Bilgi Tablosu</p><ul><li>Crate <code>solana-program-test</code>, program\u0131n\u0131z\u0131 etkile\u015Fimli olarak test edebilece\u011Finiz ve hatalar\u0131n\u0131 ay\u0131klayabilece\u011Finiz (\xF6rn. vscode\u2019da) temel yerel \xE7al\u0131\u015Fma zaman\u0131n\u0131n kullan\u0131lmas\u0131n\u0131 sa\u011Flar.</li><li>Crate <code>solana-validator</code>, <strong>yerel bir validator node</strong>\u2019da ger\xE7ekle\u015Fen daha sa\u011Flam testler i\xE7in <code>solana-test-validator</code> uygulamas\u0131n\u0131n kullan\u0131lmas\u0131n\u0131 sa\u011Flar. D\xFCzenleyiciden \xE7al\u0131\u015Ft\u0131rabilirsiniz <strong>ancak programdaki kesme noktalar\u0131 yok say\u0131l\u0131r</strong>.</li><li>CLI arac\u0131 <code>solana-test-validator</code> program\u0131n\u0131z\u0131 \xE7al\u0131\u015Ft\u0131r\u0131r &amp; y\xFCkler ve komut sat\u0131r\u0131 Rust uygulamalar\u0131ndan veya web3 kullanan Javascript/Typescript uygulamalar\u0131ndan i\u015Flem y\xFCr\xFCtmeyi sa\u011Flar.</li><li>Yukar\u0131daki t\xFCm durumlar i\xE7in, program\u0131n\u0131zda <code>msg!</code> makrosunun liberal bir \u015Fekilde kullan\u0131m\u0131 \xF6nerilir ve daha sonra test etme ve solid davran\u0131\u015F\u0131 sa\u011Flama gerekti\u011Finde bunlar\u0131 kald\u0131r\u0131n. Unutmay\u0131n ki <code>msg!</code> Compute Units t\xFCketir, bu nedenle Compute Unit b\xFCt\xE7esi s\u0131n\u0131rlar\u0131n\u0131 zorlayarak program\u0131n\u0131z\u0131 ba\u015Far\u0131s\u0131zl\u0131\u011Fa u\u011Fratabilir. :::</li></ul><p>A\u015Fa\u011F\u0131daki b\xF6l\xFCmlerdeki ad\u0131mlar <a href="#resources">solana-program-bpf-template</a> kullan\u0131r. Bunu makinenize klonlay\u0131n:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone git@github.com:mvines/solana-bpf-program-template.git
<span class="token builtin class-name">cd</span> solana-bpf-program-template
code <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="runtime-testing-and-debugging-in-editor-editorde-runtime-test-ve-hata-ay\u0131klama" tabindex="-1"><a class="header-anchor" href="#runtime-testing-and-debugging-in-editor-editorde-runtime-test-ve-hata-ay\u0131klama" aria-hidden="true">#</a> Runtime Testing and Debugging in editor (Edit\xF6rde Runtime Test ve Hata Ay\u0131klama)</h2><p><code>src/lib.rs</code> dosyas\u0131n\u0131 a\xE7\u0131n</p><ol><li><code>#[cfg(test)]</code> b\xF6l\xFCm\xFCne gidin ve <code>Run Tests</code>&#39;e t\u0131klay\u0131n. Bu, program\u0131 olu\u015Fturacak ve ard\u0131ndan <code>async fn test_transaction()</code> testini y\xFCr\xFCtecektir. Kayna\u011F\u0131n alt\u0131ndaki vscode terminalinde g\xFCnl\xFCk mesajlar\u0131n\u0131 (basitle\u015Ftirilmi\u015F) g\xF6receksiniz.</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>running <span class="token number">1</span> <span class="token builtin class-name">test</span>
<span class="token string">&quot;bpf_program_template&quot;</span> program loaded as native code
Program 4uQeVj5tqViQh7yWWGStvkEG1Zmhx6uasJtWCJziofM invoke <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
Program log: process_instruction: 4uQeVj5tqViQh7yWWGStvkEG1Zmhx6uasJtWCJziofM: <span class="token number">1</span> accounts, <span class="token assign-left variable">data</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span><span class="token punctuation">]</span>
Program 4uQeVj5tqViQh7yWWGStvkEG1Zmhx6uasJtWCJziofM success
<span class="token builtin class-name">test</span> test::test_transaction <span class="token punctuation">..</span>. ok
<span class="token builtin class-name">test</span> result: ok. <span class="token number">1</span> passed<span class="token punctuation">;</span> <span class="token number">0</span> failed<span class="token punctuation">;</span> <span class="token number">0</span> ignored<span class="token punctuation">;</span> <span class="token number">0</span> measured<span class="token punctuation">;</span> <span class="token number">0</span> filtered out<span class="token punctuation">;</span> finished <span class="token keyword">in</span> <span class="token number">33</span>.41s
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ol start="2"><li>Programlar\u0131n msg! sat\u0131r\u0131nda bir kesme noktas\u0131 ayarlay\u0131n (11)</li><li>Test mod\xFCl\xFCne geri d\xF6n\xFCn, <code>Debug</code>&#39;a t\u0131klay\u0131n ve saniyeler i\xE7inde hata ay\u0131klay\u0131c\u0131 kesme noktas\u0131nda duracakt\u0131r ve \u015Fimdi verileri inceleyebilirsiniz, i\u015Flevler aras\u0131nda ad\u0131m ad\u0131m, vb.</li></ol><p>Bu testler ayr\u0131ca \u015Fu komut sat\u0131r\u0131ndan y\xFCr\xFCt\xFCl\xFCr: <code>cargo test</code> veya <code>cargo test-bpf</code>. Elbette herhangi bir kesme noktas\u0131 g\xF6z ard\u0131 edilecektir.</p><p>Harika gidiyorsun!</p><p>:::Not</p><p>Validator node kullanmad\u0131\u011F\u0131n\u0131z\u0131 ve bu nedenle varsay\u0131lan programlar, blockhash vb.&#39;nin temsil edilmedi\u011Fini veya validator node \xE7al\u0131\u015F\u0131rken oldu\u011Fu gibi davranmayaca\u011F\u0131n\u0131z\u0131 unutmay\u0131n. Bu y\xFCzden Solana&#39;da ekibi bize Local Validator Node testi verdi! :::</p><h2 id="local-validator-node-testing-in-editor-duzenleyicide-yerel-dogrulay\u0131c\u0131-node-testi" tabindex="-1"><a class="header-anchor" href="#local-validator-node-testing-in-editor-duzenleyicide-yerel-dogrulay\u0131c\u0131-node-testi" aria-hidden="true">#</a> Local Validator Node Testing in editor (D\xFCzenleyicide Yerel Do\u011Frulay\u0131c\u0131 Node Testi)</h2><p>Yerel bir validator node\u2019un programl\u0131 y\xFCklenmesini kullanan entegrasyon testi, <code>tests/integration.rs</code> dosyas\u0131nda tan\u0131mlan\u0131r.</p><p>Varsay\u0131lan olarak, \u015Fablon deposu entegrasyon testleri yaln\u0131zca <code>cargo test-bpf</code> kullan\u0131larak komut sat\u0131r\u0131ndan \xE7al\u0131\u015Ft\u0131r\u0131labilir. A\u015Fa\u011F\u0131daki ad\u0131mlar, d\xFCzenleyici i\xE7inde \xE7al\u0131\u015Fman\u0131za ve program\u0131n\u0131zdan program do\u011Frulay\u0131c\u0131 g\xFCnl\xFCklerini ve <code>msg!</code> \xE7\u0131kt\u0131lar\u0131n\u0131 g\xF6r\xFCnt\xFClemenize olanak tan\u0131r:</p><ol><li>\xD6rnek program\u0131 olu\u015Fturmak i\xE7in repo dizininde <code>cargo build-bpf</code> komutunu \xE7al\u0131\u015Ft\u0131r\u0131n</li><li>D\xFCzenleyicide, <code>tests/integration.rs</code> dosyas\u0131n\u0131 a\xE7\u0131n</li><li><ol><li>sat\u0131r\u0131 yorumlay\u0131n -&gt;<code>// #![cfg(feature = &quot;test-bpf&quot;)]</code></li></ol></li><li><ol start="19"><li>sat\u0131rda \u015Funu okuyun: <code>.add_program(&quot;target/deploy/bpf_program_template&quot;, program_id)</code></li></ol></li><li>A\u015Fa\u011F\u0131dakini 22. sat\u0131ra yerle\u015Ftirin: <code>solana_logger::setup_with_default(&quot;solana_runtime::message=debug&quot;);</code></li><li><code>test_validator_transaction()</code> i\u015Flevinin \xFCzerindeki <code>Run Test</code>&#39;e t\u0131klay\u0131n</li></ol><p>Bu, validator node\u2019u y\xFCkleyecek ve ard\u0131ndan bir i\u015Flem (Rust yolu) olu\u015Fturman\u0131za ve <code>RcpClient</code>&#39;i kullanarak node\u2019a g\xF6ndermenize izin verecektir.</p><p>Program\u0131n \xE7\u0131kt\u0131s\u0131 da edit\xF6r terminalinde yazd\u0131r\u0131lacakt\u0131r. \xD6rne\u011Fin (basitle\u015Ftirilmi\u015F):</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>running <span class="token number">1</span> <span class="token builtin class-name">test</span>
Waiting <span class="token keyword">for</span> fees to stabilize <span class="token number">1</span><span class="token punctuation">..</span>.
Waiting <span class="token keyword">for</span> fees to stabilize <span class="token number">2</span><span class="token punctuation">..</span>.
Program 4uQeVj5tqViQh7yWWGStvkEG1Zmhx6uasJtWCJziofM invoke <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
Program log: process_instruction: 4uQeVj5tqViQh7yWWGStvkEG1Zmhx6uasJtWCJziofM: <span class="token number">1</span> accounts, <span class="token assign-left variable">data</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span><span class="token punctuation">]</span>
Program 4uQeVj5tqViQh7yWWGStvkEG1Zmhx6uasJtWCJziofM consumed <span class="token number">13027</span> of <span class="token number">200000</span> compute <span class="token function">units</span>
Program 4uQeVj5tqViQh7yWWGStvkEG1Zmhx6uasJtWCJziofM success

<span class="token builtin class-name">test</span> test_validator_transaction <span class="token punctuation">..</span>. ok
<span class="token builtin class-name">test</span> result: ok. <span class="token number">1</span> passed<span class="token punctuation">;</span> <span class="token number">0</span> failed<span class="token punctuation">;</span> <span class="token number">0</span> ignored<span class="token punctuation">;</span> <span class="token number">0</span> measured<span class="token punctuation">;</span> <span class="token number">0</span> filtered out<span class="token punctuation">;</span> finished <span class="token keyword">in</span> <span class="token number">6</span>.40s
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>Burada hata ay\u0131klama, test g\xF6vdesinde kullan\u0131lan i\u015Flevler ve y\xF6ntemlerde hata ay\u0131klaman\u0131za izin verir ancak program\u0131n\u0131zda kesme noktas\u0131 olu\u015Fturmaz.</p><p>M\xFCkemmel de\u011Fil mi?</p><h2 id="local-validator-node-testing-from-client-apps-client-uygulamalar\u0131nda-yerel-validator-node-testi" tabindex="-1"><a class="header-anchor" href="#local-validator-node-testing-from-client-apps-client-uygulamalar\u0131nda-yerel-validator-node-testi" aria-hidden="true">#</a> Local Validator Node Testing from Client Apps (Client Uygulamalar\u0131nda Yerel Validator Node Testi)</h2><p>Son olarak, yerel bir validator node\u2019u ba\u015Flatabilir ve komut sat\u0131r\u0131ndan solana-test-validator kullanarak program\u0131n\u0131z\u0131 ve t\xFCm account&#39;lar\u0131n\u0131z\u0131 y\xFCkleyebilirsiniz.</p><p>Bu yakla\u015F\u0131mda, ya Rust <a href="#resources">RcpClient</a> kullanan ya da JavaScript veya TypeScript client&#39;lar\u0131nda bir client uygulamas\u0131na ihtiyac\u0131n\u0131z olacak.</p><p>Daha fazla ayr\u0131nt\u0131 ve se\xE7enek i\xE7in <code>solana-test-validator --help</code> b\xF6l\xFCm\xFCne <a href="#resources">JavaScript veya Typescript clients</a>\u2019lar\u0131na bak\u0131n. \xD6rnek program i\xE7in kurulum burada:</p><ol><li>Repo klas\xF6r\xFCnde bir terminal a\xE7\u0131n</li><li>Yap\u0131land\u0131rmay\u0131 yerele i\u015Faret edecek \u015Fekilde ayarlamak i\xE7in <code>solana config set -ul</code> komutunu \xE7al\u0131\u015Ft\u0131r\u0131n</li><li><code>solana-test-validator --bpf-program target/deploy/bpf_program_template-keypair.json target/deploy/bpf_program_template.so</code>&#39;yu \xE7al\u0131\u015Ft\u0131r\u0131n</li><li>Ba\u015Fka bir terminal a\xE7\u0131n ve g\xFCnl\xFCk aktar\u0131c\u0131y\u0131 ba\u015Flatmak i\xE7in <code>solana logs</code>\u2019u \xE7al\u0131\u015Ft\u0131r\u0131n</li><li>Daha sonra client program\u0131n\u0131z\u0131 \xE7al\u0131\u015Ft\u0131rabilir ve g\xFCnl\xFCk aktar\u0131c\u0131y\u0131 ba\u015Flatt\u0131\u011F\u0131n\u0131z terminalde program \xE7\u0131kt\u0131s\u0131n\u0131 g\xF6zlemleyebilirsiniz.</li></ol><h2 id="resources" tabindex="-1"><a class="header-anchor" href="#resources" aria-hidden="true">#</a> Resources</h2>`,31),u={href:"https://github.com/mvines/solana-bpf-program-template",target:"_blank",rel:"noopener noreferrer"},m=s("solana-program-bpf-template"),k={href:"https://docs.rs/solana-client/latest/solana_client/rpc_client/struct.RpcClient.html",target:"_blank",rel:"noopener noreferrer"},b=s("RcpClient"),g={href:"https://solana-labs.github.io/solana-web3.js/",target:"_blank",rel:"noopener noreferrer"},y=s("JavaScript/Typescript Library");function h(v,f){const n=l("ExternalLinkIcon");return r(),i(o,null,[d,a("p",null,[a("a",u,[m,e(n)])]),a("p",null,[a("a",k,[b,e(n)])]),a("p",null,[a("a",g,[y,e(n)])])],64)}var _=t(c,[["render",h]]);export{_ as default};
