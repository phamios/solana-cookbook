import{_ as s,r as i,o as r,c as a,a as t,b as c,w as h,F as d,d as n,e as l}from"./app.07ce7a66.js";var g="/assets/account-matrix.c3a79f80.png",u="/assets/pda-curve.7c0b9307.png";const _={},p=t("h1",{id:"program-derived-addresses-pdas",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#program-derived-addresses-pdas","aria-hidden":"true"},"#"),n(" Program Derived Addresses (PDAs)")],-1),m=n("Program Derived Addresses (hay c\xF2n g\u1ECDi v\u1EAFn t\u1EAFt l\xE0 PDA) l\xE0 nh\u1EEFng Account \u0111\u01B0\u1EE3c thi\u1EBFt k\u1EBF cho c\xE1c Program c\xF3 th\u1EC3 ki\u1EC3m so\xE1t. V\u1EDBi PDA, Program c\xF3 th\u1EC3 l\u1EADp tr\xECnh \u0111\u01B0\u1EE3c ch\u1EEF k\xFD cho m\u1ED9t s\u1ED1 \u0111\u1ECBa ch\u1EC9 c\u1EE5 th\u1EC3 m\xE0 kh\xF4ng c\u1EA7n kho\xE1 ri\xEAng t\u01B0 - private key. PDA l\xE0 c\u01A1 s\u1EDF \u0111\u1EC3 hi\u1EC7n th\u1EF1c "),k={href:"https://docs.solana.com/developing/programming-model/calling-between-programs#cross-program-invocations",target:"_blank",rel:"noopener noreferrer"},b=n("Cross-Program Invocation"),v=n(", trong \u0111\xF3 Solana cho ph\xE9p c\xE1c Program c\xF3 th\u1EC3 t\u01B0\u01A1ng t\xE1c c\u0169ng nh\u01B0 k\u1EBFt h\u1EE3p v\u1EDBi nhau \u0111\u1EC3 t\u1EA1o n\xEAn m\u1ED9t h\u1EC7 th\u1ED1ng ph\u1EE9c t\u1EA1p h\u01A1n."),P=t("h2",{id:"co-the-ban-chua-biet",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#co-the-ban-chua-biet","aria-hidden":"true"},"#"),n(" C\xF3 th\u1EC3 b\u1EA1n ch\u01B0a bi\u1EBFt")],-1),A={class:"custom-container tip"},f=t("p",{class:"custom-container-title"},"Nh\u1EEFng \u0111i\u1EC1u c\xF3 th\u1EC3 b\u1EA1n ch\u01B0a bi\u1EBFt",-1),D=t("li",null,"PDA l\xE0 m\u1ED9t chu\u1ED7i 32 byte t\u01B0\u01A1ng t\u1EF1 kho\xE1 c\xF4ng khai - public keys, nh\u01B0ng l\u1EA1i kh\xF4ng t\u1ED3n t\u1EA1i kho\xE1 ri\xEAng t\u01B0 t\u01B0\u01A1ng \u1EE9ng",-1),y=t("li",null,[t("code",null,"findProgramAddress"),n(" \u0111\u01B0\u1EE3c d\xF9ng \u0111\u1EC3 suy ra m\u1ED9t PDA t\u1EEB th\xF4ng tin "),t("code",null,"program_id"),n(" v\xE0 "),t("code",null,"seeds"),n(" (m\u1ED9t t\u1EADp h\u1EE3p c\xE1c bytes)")],-1),x=t("li",null,[n("M\u1ED9t "),t("code",null,"bump"),n(" (c\xF3 gi\xE1 tr\u1ECB 1 byte) \u0111\u01B0\u1EE3c d\xF9ng \u0111\u1EC3 t\u1EA1o ra m\u1ED9t PDA kh\u1EA3 d\u0129 n\u1EB1m ngo\xE0i \u0111\u01B0\u1EDDng cong ellipitic ed25519.")],-1),w=n("Program c\xF3 th\u1EC3 t\u1EA1o ra ch\u1EEF k\xFD cho PDA b\u1EB1ng c\xE1ch cung c\u1EA5p "),N=t("code",null,"seeds",-1),V=n(" v\xE0 "),q=t("code",null,"bump",-1),C=n(" cho h\xE0m "),L={href:"https://docs.solana.com/developing/programming-model/calling-between-programs#program-signed-accounts",target:"_blank",rel:"noopener noreferrer"},T=n("invoke_signed"),S=t("li",null,"M\u1ED9t PDA ch\u1EC9 c\xF3 th\u1EC3 \u0111\u01B0\u1EE3c k\xFD b\u1EDFi Program m\xE0 n\xF3 \u0111\u01B0\u1EE3c suy ra.",-1),B=n("Ngo\xE0i vi\u1EC7c cho ph\xE9p Program c\xF3 th\u1EC3 k\xFD l\xEAn c\xE1c instruction, PDA c\u0169ng cung c\u1EA5p m\u1ED9t interface gi\u1ED1ng v\u1EDBi hashmap d\xE0nh cho vi\u1EC7c "),E=n("\u0111\xE1nh ch\u1EC9 s\u1ED1 Account"),I=l('<h1 id="chi-tiet" tabindex="-1"><a class="header-anchor" href="#chi-tiet" aria-hidden="true">#</a> Chi ti\u1EBFt</h1><p>PDA l\xE0 m\u1ED9t kh\u1ED1i c\u01A1 s\u1EDF cho vi\u1EC7c l\u1EADp tr\xECnh tr\xEAn Solana. V\u1EDBi PDA, Program c\xF3 th\u1EC3 k\xFD cho nhi\u1EC1u Account trong khi \u0111\u1EA3m b\u1EA3o r\u1EB1ng kh\xF4ng t\u1ED3n t\u1EA1i ng\u01B0\u1EDDi d\xF9ng n\xE0o c\xF3 th\u1EC3 gi\u1EA3 m\u1EA1o ch\u1EEF k\xFD cho c\xF9ng Account \u0111\xF3. Ngo\xE0i vi\u1EC7c t\u1EA1o ra ch\u1EEF k\xFD, Program c\u0169ng c\xF3 th\u1EC3 ch\u1EC9nh s\u1EEDa Account \u0111\u01B0\u1EE3c s\u1EDF h\u1EEFu b\u1EDFi PDA c\u1EE7a n\xF3.</p><p><img src="'+g+'" alt="Accounts matrix"></p><p><small style="text-align:center;display:block;">H\xECnh \u1EA3nh \u0111\u01B0\u1EE3c cho ph\xE9p b\u1EDDi <a href="https://twitter.com/pencilflip">Pencilflip</a></small></p><h3 id="cach-sinh-pda" tabindex="-1"><a class="header-anchor" href="#cach-sinh-pda" aria-hidden="true">#</a> C\xE1ch sinh PDA</h3><p>\u0110\u1EC3 hi\u1EC3u \u0111\u01B0\u1EE3c kh\xE1i ni\u1EC7m \u0111\u1EB1ng sau PDA, l\xE0 c\u1EA7n thi\u1EBFt \u0111\u1EC3 l\xE0m r\xF5 r\u1EB1ng PDA kh\xF4ng ph\u1EA3i \u0111\u01B0\u1EE3c &quot;t\u1EA1o ra&quot; m\xE0 l\xE0 &quot;t\xECm ra&quot;. PDA \u0111\u01B0\u1EE3c sinh ra t\u1EEB qu\xE1 tr\xECnh k\u1EBFt h\u1EE3p gi\u1EEFa <code>seeds</code> (v\xED d\u1EE5 nh\u01B0 chu\u1ED7i k\xFD t\u1EF1 <code>\u201Cvote_account\u201D</code>) v\xE0 <code>program_id</code>. Vi\u1EC7c k\u1EBFt h\u1EE3p n\xE0y \u0111\u01B0\u1EE3c cho qua m\u1ED9t h\xE0m b\u0103m - sha256 - \u0111\u1EC3 th\u1EED xem gi\xE1 tr\u1ECB t\u1EA1o ra c\xF3 ph\u1EA3i l\xE0 m\u1ED9t kho\xE1 c\xF4ng khai n\u1EB1m ngo\xE0i \u0111\u01B0\u1EDDng cong ellipitic ed25519 hay kh\xF4ng.</p><p>Qu\xE1 tr\xECnh th\u1EED n\xE0y s\u1EBD c\xF3 x\xE1c su\u1EA5t 50/50. Ngh\u0129a l\xE0 s\u1EBD c\xF3 50% c\u01A1 h\u1ED9i qu\xE1 tr\xECnh sinh ra m\u1ED9t kho\xE1 c\xF4ng khai n\u1EB1m tr\xEAn \u0111\u01B0\u1EDDng cong ellipitic ed25519. Trong tr\u01B0\u1EDDng h\u1EE3p \u0111\xF3, ch\xFAng ta \u0111\u01A1n gi\u1EA3n ch\u1EC9 c\u1EA7n th\xEAm m\u1ED9t v\xE0i bit v\xE0o \u0111\u1EA7u v\xE0o \u0111\u1EC3 th\u1EED l\u1EA1i. Nh\u1EEFng bit \u0111\u01B0\u1EE3c th\xEAm v\xE0o trong thu\u1EADt ng\u1EEF k\u1EF9 thu\u1EADt \u0111\u01B0\u1EE3c g\u1ECDi l\xE0 bump. Trong Solana, ch\xFAng ta b\u1EAFt \u0111\u1EA7u v\u1EDBi bump = 255 v\xE0 ti\u1EBFp t\u1EE5c gi\u1EA3m xu\u1ED1ng 254, 253 c\u1EE9 th\u1EC3 cho \u0111\u1EBFn khi t\xECm \u0111\u01B0\u1EE3c \u0111\u1ECBa ch\u1EC9 PDA kh\xF4ng n\u1EB1m tr\xEAn \u0111\u01B0\u1EDDng cong ellipitic. Vi\u1EC7c n\xE0y c\xF3 v\u1EBB th\xF4 s\u01A1, nh\u01B0ng th\u1EF1c ra n\xF3 l\u1EA1i cho ch\xFAng ta m\u1ED9t ph\u01B0\u01A1ng ph\xE1p b\u1EA5t bi\u1EBFn \u0111\u1EC3 suy ra PDA cho c\xE1c l\u1EA7n th\u1EED kh\xE1c nhau, mi\u1EC5n l\xE0 c\xF9ng m\u1ED9t gi\xE1 tr\u1ECB \u0111\u1EA7u v\xE0o.</p><p><img src="'+u+'" alt="PDA on the ellipitic curve"></p><h3 id="tuong-tac-voi-pdas" tabindex="-1"><a class="header-anchor" href="#tuong-tac-voi-pdas" aria-hidden="true">#</a> T\u01B0\u01A1ng t\xE1c v\u1EDBi PDAs</h3>',9),F=n("Khi m\u1ED9t PDA \u0111\u01B0\u1EE3c sinh ra, "),K=t("code",null,"findProgramAddress",-1),M=n(" s\u1EBD tr\u1EA3 v\u1EC1 hai gi\xE1 tr\u1ECB l\xE0 \u0111\u1ECBa ch\u1EC9 c\u1EE7a PDA v\xE0 "),R=t("code",null,"bump",-1),z=n(" d\xF9ng \u0111\u1EC3 \u0111\u1EA3m b\u1EA3o PDA n\xE0y ngo\xE0i \u0111\u01B0\u1EDDng cong ellipitic. V\u1EDBi gi\xE1 tr\u1ECB "),H=t("code",null,"bump",-1),Q=n(" n\xE0y, Program c\xF3 th\u1EC3 "),U=n("k\xFD l\xEAn"),j=n(" b\u1EA5t k\u1EF3 instruction n\xE0o c\xF3 ch\u1EE9a PDA c\u1EE7a n\xF3 v\u1EC1 sau. \u0110\u1EC3 k\xFD, Program ph\u1EA3i truy\u1EC1n cho instruction m\u1ED9t danh s\xE1ch c\xE1c Account, c\xE1c "),G=t("code",null,"seeds",-1),J=n(" v\xE0 "),O=t("code",null,"bump",-1),W=n(" d\xF9ng \u0111\u1EC3 suy ra PDA v\xE0o h\xE0m "),X=t("code",null,"invoke_signed",-1),Y=n(". Ngo\xE0i vi\u1EC7c k\xFD l\xEAn instruction, PDA c\xF2n k\xFD cho vi\u1EC7c t\u1EA1o ra ch\xEDnh b\u1EA3n th\xE2n n\xF3 th\xF4ng qua h\xE0m "),Z=t("code",null,"invoke_signed",-1),$=n("."),tt=n("Khi ph\xE1t tri\u1EC3n \u1EE9ng d\u1EE5ng v\u1EDBi PDA, th\u01B0\u1EDDng th\xEC b\u1EA1n s\u1EBD ph\u1EA3i "),nt={href:"https://github.com/solana-labs/solana-program-library/blob/78e29e9238e555967b9125799d7d420d7d12b959/token-swap/program/src/state.rs#L100",target:"_blank",rel:"noopener noreferrer"},ct=n("l\u01B0u bump"),ot=n(" trong d\u1EEF li\u1EC7u Account. \u0110i\u1EC1u n\xE0y cho ph\xE9p l\u1EADp tr\xECnh vi\xEAn c\xF3 th\u1EC3 ki\u1EC3m tra PDA m\xE0 kh\xF4ng c\u1EA7n truy\u1EC1n bump v\xE0o d\u1EEF li\u1EC7u \u0111\u1EA7u v\xE0o c\u1EE7a instruction."),et=t("h2",{id:"cac-nguon-tai-lieu-khac",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#cac-nguon-tai-lieu-khac","aria-hidden":"true"},"#"),n(),t("a",{name:"resources"}),n(" C\xE1c ngu\u1ED3n t\xE0i li\u1EC7u kh\xE1c")],-1),it={href:"https://docs.solana.com/developing/programming-model/calling-between-programs#program-derived-addresses",target:"_blank",rel:"noopener noreferrer"},ht=n("T\xE0i li\u1EC7u ch\xEDnh th\u1ED1ng"),st={href:"https://www.brianfriel.xyz/understanding-program-derived-addresses/",target:"_blank",rel:"noopener noreferrer"},rt=n("Understanding Program Derived Addresses");function at(dt,lt){const o=i("ExternalLinkIcon"),e=i("RouterLink");return r(),a(d,null,[p,t("p",null,[m,t("a",k,[b,c(o)]),v]),P,t("div",A,[f,t("ul",null,[D,y,x,t("li",null,[w,N,V,q,C,t("a",L,[T,c(o)])]),S,t("li",null,[B,c(e,{to:"/vi/guides/account-maps.html"},{default:h(()=>[E]),_:1})])])]),I,t("p",null,[F,K,M,R,z,H,Q,c(e,{to:"/vi/references/accounts.html#sign-with-a-pda"},{default:h(()=>[U]),_:1}),j,G,J,O,W,X,Y,Z,$]),t("p",null,[tt,t("a",nt,[ct,c(o)]),ot]),et,t("ul",null,[t("li",null,[t("a",it,[ht,c(o)])]),t("li",null,[t("a",st,[rt,c(o)])])])],64)}var ut=s(_,[["render",at]]);export{ut as default};
