import{_ as k,r as e,o as m,c as d,b as s,w as t,a as n,F as b,e as u,d as a}from"./app.07ce7a66.js";var l="/assets/scfsd.cc67ec33.png";const g={},f=u(`<h1 id="pengujian-paritas-fitur" tabindex="-1"><a class="header-anchor" href="#pengujian-paritas-fitur" aria-hidden="true">#</a> Pengujian Paritas Fitur</h1><p>Saat menguji program Anda, jaminan bahwa program akan berjalan sama di berbagai cluster sangatlah penting untuk kualitas dan menghasilkan hasil yang diharapkan.</p><h2 id="fakta" tabindex="-1"><a class="header-anchor" href="#fakta" aria-hidden="true">#</a> Fakta</h2><div class="custom-container tip"><p class="custom-container-title">Lembar Fakta</p><ul><li>Fitur adalah kemampuan yang diperkenalkan ke validator Solana dan memerlukan aktivasi untuk digunakan.</li><li>Fitur dapat diaktifkan di satu cluster (misalnya testnet) tetapi tidak di cluster lain (misalnya mainnet-beta).</li><li>Namun; saat menjalankan <code>solana-test-validator</code> default secara lokal, semua fitur yang tersedia di Solana versi Anda diaktifkan secara otomatis. Hasilnya adalah ketika menguji secara lokal, kemampuan dan hasil dari pengujian Anda mungkin tidak sama saat menerapkan dan menjalankan di cluster yang berbeda!</li></ul></div><h2 id="skenario" tabindex="-1"><a class="header-anchor" href="#skenario" aria-hidden="true">#</a> Skenario</h2><p>Asumsikan Anda memiliki Transaksi yang berisi tiga (3) instruksi dan setiap instruksi mengkonsumsi kira-kira 100_000 Compute Unit (CU). Saat menjalankan dalam versi Solana 1.8.x, Anda akan mengamati konsumsi CU instruksi Anda mirip dengan:</p><table><thead><tr><th>Instruksi</th><th>Mulai CU</th><th>Eksekusi</th><th>Sisa CU</th></tr></thead><tbody><tr><td>1</td><td>200_000</td><td>-100_000</td><td>100_000</td></tr><tr><td>2</td><td>200_000</td><td>-100_000</td><td>100_000</td></tr><tr><td>3</td><td>200_000</td><td>-100_000</td><td>100_000</td></tr></tbody></table><p>Di Solana 1.9.2 fitur yang disebut &#39;transaction wide compute cap&#39; diperkenalkan di mana Transaksi, secara default, memiliki anggaran 200_000 CU dan instruksi yang dienkapsulasi <strong><em>draw down</em></strong> dari anggaran Transaksi tersebut. Menjalankan transaksi yang sama seperti yang sebelumnya akan menunjukkan hasil yang sangat berbeda:</p><table><thead><tr><th>Instruksi</th><th>Mulai CU</th><th>Eksekusi</th><th>Sisa CU</th></tr></thead><tbody><tr><td>1</td><td>200_000</td><td>-100_000</td><td>100_000</td></tr><tr><td>2</td><td>100_000</td><td>-100_000</td><td>0</td></tr><tr><td>3</td><td>0</td><td>GAGAL!!!</td><td>GAGAL!!!</td></tr></tbody></table><p>Astaga! Jika Anda tidak menyadari hal ini, Anda mungkin akan frustrasi karena tidak ada perubahan pada behavior instruksi Anda yang akan menyebabkan ini. Di devnet itu berfungsi dengan baik, tetapi secara lokal gagal?!?</p><p>Ada kemampuan untuk meningkatkan keseluruhan anggaran Transaksi, katakanlah 300_000 CU, dan selamatkan kewarasan Anda, namun ini menunjukkan mengapa pengujian dengan <strong><em>Feature Parity</em></strong> memberikan cara proaktif untuk menghindari kebingungan.</p><h2 id="status-fitur" tabindex="-1"><a class="header-anchor" href="#status-fitur" aria-hidden="true">#</a> Status Fitur</h2><p>Cukup mudah untuk memeriksa fitur apa yang diaktifkan untuk cluster tertentu dengan perintah <code>solana feature status</code>.</p><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana feature status -ud   // Displays by feature status for devnet
solana feature status -ut   // Displays for testnet
solana feature status -um   // Displays for mainnet-beta
solana feature status -ul   // Displays for local, requires running solana-test-validator
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Atau, Anda dapat menggunakan alat seperti <a href="#resources">scfsd</a> untuk mengamati status semua fitur di seluruh cluster yang akan ditampilkan, sebagian layar ditampilkan di sini, dan tidak memerlukan <code>solana-test-validator</code> untuk dijalankan:</p><img src="`+l+'" alt="Heatmap dari Status Fitur"><img src="'+l+`" alt="Feature Status Heatmap"><h2 id="uji-paritas" tabindex="-1"><a class="header-anchor" href="#uji-paritas" aria-hidden="true">#</a> Uji Paritas</h2><p>Seperti disebutkan di atas, <code>solana-test-validator</code> mengaktifkan <strong>semua</strong> fitur secara otomatis. Jadi untuk menjawab pertanyaan &quot;Bagaimana saya bisa menguji secara lokal di lingkungan yang memiliki paritas dengan devnet, testnet atau bahkan mainnet-beta?&quot;.</p><p>Solusi: PR ditambahkan ke Solana 1.9.6 untuk memungkinkan penonaktifan fitur:</p><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana-test-validator --deactivate-feature &lt;FEATURE_PUBKEY&gt; ...
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="demonstrasi-sederhana" tabindex="-1"><a class="header-anchor" href="#demonstrasi-sederhana" aria-hidden="true">#</a> Demonstrasi Sederhana</h2><p>Misalkan Anda memiliki program sederhana yang mencatat data yang diterimanya di entry-point. Dan Anda menguji transaksi yang menambahkan dua (2) instruksi untuk program Anda.</p><h3 id="semua-fitur-diaktifkan" tabindex="-1"><a class="header-anchor" href="#semua-fitur-diaktifkan" aria-hidden="true">#</a> Semua fitur diaktifkan</h3><ol><li>Anda memulai validator uji di satu terminal:</li></ol><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana config set -ul
solana-test-validator -l ./ledger --bpf-program target/deploy/PROGNAME.so --reset\`
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="2"><li>Di terminal lain Anda memulai log streamer:</li></ol><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana logs
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="3"><li>Anda kemudian menjalankan transaksi Anda. Anda akan melihat sesuatu yang serupa di terminal log (diedit untuk kejelasan):</li></ol><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc invoke [1]
Program log: process_instruction: PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc: 0 accounts, data=[0]
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc consumed 12843 of 200000 compute units
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc success
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc invoke [1]
Program log: process_instruction: PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc: 0 accounts, data=[1]
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc consumed 12843 of 187157 compute units
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc success[
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>Karena fitur &#39;batas komputasi luas transaksi&#39; kami secara otomatis diaktifkan secara default, kami mengamati masing-masing instruksi penarikan CU dari anggaran awal Transaksi sebesar 200_000 CU.</p><h3 id="fitur-selektif-dinonaktifkan" tabindex="-1"><a class="header-anchor" href="#fitur-selektif-dinonaktifkan" aria-hidden="true">#</a> Fitur selektif dinonaktifkan</h3><ol><li>Untuk menjalankan ini, kami ingin menjalankan agar behavior anggaran CU setara dengan apa yang berjalan di devnet. Menggunakan alat yang dijelaskan dalam <a href="#status-fitur">Status Fitur</a> pun kami mengisolasi kunci publik <code>batasan komputasi luas transaksi</code> dan gunakan <code>--deactivate-feature</code> pada uji startup validator</li></ol><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana-test-validator -l ./ledger --deactivate-feature 5ekBxc8itEnPv4NzGJtr8BVVQLNMQuLMNQQj7pHoLNZ9 --bpf-program target/deploy/PROGNAME.so --reset\`
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>Kami sekarang melihat di log kami bahwa instruksi kami sekarang memiliki anggaran 200_000 CU sendiri (diedit untuk kejelasan) yang saat ini merupakan status di semua cluster hulu:</li></ol><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc invoke [1]
Program log: process_instruction: PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc: 0 accounts, data=[0]
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc consumed 12843 of 200000 compute units
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc success
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc invoke [1]
Program log: process_instruction: PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc: 0 accounts, data=[0]
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc consumed 12843 of 200000 compute units
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc success
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="uji-paritas-penuh" tabindex="-1"><a class="header-anchor" href="#uji-paritas-penuh" aria-hidden="true">#</a> Uji Paritas Penuh</h2><p>Anda dapat berada dalam paritas penuh dengan cluster tertentu dengan mengidentifikasi setiap fitur yang belum diaktifkan dan tambahkan <code>--deactivate-feature &lt;FEATURE_PUBKEY&gt;</code> untuk masing-masing saat menjalankan <code>solana-test-validator</code>:</p><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana-test-validator --deactivate-feature PUBKEY_1 --deactivate-feature PUBKEY_2 ...
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Atau, <a href="#resources">scfsd</a> menyediakan sakelar perintah untuk menampilkan fitur yang dinonaktifkan sepenuhnya setel agar kluster diumpankan langsung ke startup <code>solana-test-validator</code>:</p><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana-test-validator -l ./.ledger $(scfsd -c devnet -k -t)
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Jika Anda membuka terminal lain, saat validator sedang berjalan, dan <code>status fitur solana</code> Anda akan melihat fitur dinonaktifkan yang ditemukan dinonaktifkan di devnet</p><h2 id="uji-paritas-penuh-secara-terprogram" tabindex="-1"><a class="header-anchor" href="#uji-paritas-penuh-secara-terprogram" aria-hidden="true">#</a> Uji Paritas Penuh Secara Terprogram</h2><p>Bagi mereka yang mengontrol jalannya validator pengujian dalam kode pengujian mereka, memodifikasi fitur validator uji yang diaktifkan/dinonaktifkan dimungkinkan menggunakan TestValidatorGenesis. Dengan Solana 1.9.6 sebuah fungsi yang telah ditambahkan ke pembuat validator untuk mendukung ini.</p><p>Di root folder program Anda, buat folder baru bernama <code>tests</code> dan tambahkan <code>parity_test.rs</code> mengajukan. Berikut adalah fungsi tempat boiler (boiler-plate jika Anda mau) yang digunakan oleh setiap pengujian</p>`,45),_=n("div",{class:"language-rust ext-rs line-numbers-mode"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token attribute attr-name"},"#[cfg(test)]"),a(`
`),n("span",{class:"token keyword"},"mod"),a(),n("span",{class:"token module-declaration namespace"},"tests"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"use"),a(),n("span",{class:"token namespace"},[a("std"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),a("error"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token namespace"},[a("path"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"PathBuf"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token keyword"},"str"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"FromStr"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},"// Use gadget-scfs to get interegate feature lists from clusters"),a(`
    `),n("span",{class:"token comment"},'// must have `gadgets-scfs = "0.2.0" in Cargo.toml [dev-dependencies] to use'),a(`
    `),n("span",{class:"token keyword"},"use"),a(),n("span",{class:"token namespace"},[a("gadgets_scfs"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"ScfsCriteria"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"ScfsMatrix"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token constant"},"SCFS_DEVNET"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"use"),a(),n("span",{class:"token namespace"},[a("solana_client"),n("span",{class:"token punctuation"},"::"),a("rpc_client"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"RpcClient"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"use"),a(),n("span",{class:"token namespace"},[a("solana_program"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),n("span",{class:"token namespace"},[a("instruction"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token namespace"},[a("message"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Message"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token namespace"},[a("pubkey"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Pubkey"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"use"),a(),n("span",{class:"token namespace"},[a("solana_sdk"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),a(`
        `),n("span",{class:"token comment"},"// Added in Solana 1.9.2"),a(`
        `),n("span",{class:"token namespace"},[a("compute_budget"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"ComputeBudgetInstruction"),n("span",{class:"token punctuation"},","),a(`
        pubkey`),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token namespace"},[a("signature"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"Keypair"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Signature"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token namespace"},[a("signer"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Signer"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token namespace"},[a("transaction"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Transaction"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Extended in Solana 1.9.6"),a(`
    `),n("span",{class:"token keyword"},"use"),a(),n("span",{class:"token namespace"},[a("solana_test_validator"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"TestValidator"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"TestValidatorGenesis"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},"/// Location/Name of ProgramTestGenesis ledger"),a(`
    `),n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"str"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},'"./.ledger"'),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"/// Path to BPF program (*.so) change if needed"),a(`
    `),n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token constant"},"PROG_PATH"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"str"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},'"target/deploy/"'),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"/// Program name from program Cargo.toml"),a(`
    `),n("span",{class:"token comment"},"/// FILL IN WITH YOUR PROGRAM_NAME"),a(`
    `),n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token constant"},"PROG_NAME"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"str"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},'"PROGRAM_NAME"'),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"/// Program public key"),a(`
    `),n("span",{class:"token comment"},"/// FILL IN WITH YOUR PROGRAM'S PUBLIC KEY str"),a(`
    `),n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Pubkey"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token macro property"},"pubkey!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"PROGRAMS_PUBLIC_KEY_BASE58_STRING"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"/// 'transaction wide compute cap' public key"),a(`
    `),n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token constant"},"TXWIDE_LIMITS"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Pubkey"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token macro property"},"pubkey!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"5ekBxc8itEnPv4NzGJtr8BVVQLNMQuLMNQQj7pHoLNZ9"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},"/// Setup the test validator passing features"),a(`
    `),n("span",{class:"token comment"},"/// you want to deactivate before running transactions"),a(`
    `),n("span",{class:"token keyword"},"pub"),a(),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"setup_validator"),n("span",{class:"token punctuation"},"("),a(`
        invalidate_features`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Pubkey"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"->"),a(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TestValidator"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Keypair"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),a(),n("span",{class:"token namespace"},[a("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),a(),n("span",{class:"token punctuation"},"{"),a(`
        `),n("span",{class:"token comment"},"// Extend environment variable to include our program location"),a(`
        `),n("span",{class:"token namespace"},[a("std"),n("span",{class:"token punctuation"},"::"),a("env"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"set_var"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"BPF_OUT_DIR"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token constant"},"PROG_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token comment"},"// Instantiate the test validator"),a(`
        `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token keyword"},"mut"),a(" test_validator "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token class-name"},"TestValidatorGenesis"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token comment"},"// Once instantiated, TestValidatorGenesis configuration functions follow"),a(`
        `),n("span",{class:"token comment"},"// a builder pattern enabling chaining of settings function calls"),a(`
        `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token punctuation"},"("),a("test_validator"),n("span",{class:"token punctuation"},","),a(" kp"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"="),a(` test_validator
            `),n("span",{class:"token comment"},"// Set the ledger path and name"),a(`
            `),n("span",{class:"token comment"},"// maps to `solana-test-validator --ledger <DIR>`"),a(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ledger_path"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),a(`
            `),n("span",{class:"token comment"},"// Load our program. Ignored if reusing ledger"),a(`
            `),n("span",{class:"token comment"},"// maps to `solana-test-validator --bpf-program <ADDRESS_OR_PATH BPF_PROGRAM.SO>`"),a(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add_program"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_NAME"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},")"),a(`
            `),n("span",{class:"token comment"},"// Identify features to deactivate. Ignored if reusing ledger"),a(`
            `),n("span",{class:"token comment"},"// maps to `solana-test-validator --deactivate-feature <FEATURE_PUBKEY>`"),a(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"deactivate_features"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),a("invalidate_features"),n("span",{class:"token punctuation"},")"),a(`
            `),n("span",{class:"token comment"},"// Start the test validator"),a(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"start"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token class-name"},"Ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),a("test_validator"),n("span",{class:"token punctuation"},","),a(" kp"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`

    `),n("span",{class:"token comment"},"/// Convenience function to remove existing ledger before TestValidatorGenesis setup"),a(`
    `),n("span",{class:"token comment"},"/// maps to `solana-test-validator ... --reset`"),a(`
    `),n("span",{class:"token keyword"},"pub"),a(),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"clean_ledger_setup_validator"),n("span",{class:"token punctuation"},"("),a(`
        invalidate_features`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Pubkey"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"->"),a(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TestValidator"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Keypair"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),a(),n("span",{class:"token namespace"},[a("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),a(),n("span",{class:"token punctuation"},"{"),a(`
        `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token class-name"},"PathBuf"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"from_str"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"exists"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
            `),n("span",{class:"token namespace"},[a("std"),n("span",{class:"token punctuation"},"::"),a("fs"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"remove_dir_all"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token punctuation"},"}"),a(`
        `),n("span",{class:"token function"},"setup_validator"),n("span",{class:"token punctuation"},"("),a("invalidate_features"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`

    `),n("span",{class:"token comment"},"/// Submits a transaction with programs instruction"),a(`
    `),n("span",{class:"token comment"},"/// Boiler plate"),a(`
    `),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"submit_transaction"),n("span",{class:"token punctuation"},"("),a(`
        rpc_client`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"RpcClient"),n("span",{class:"token punctuation"},","),a(`
        wallet_signer`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"dyn"),a(),n("span",{class:"token class-name"},"Signer"),n("span",{class:"token punctuation"},","),a(`
        instructions`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"->"),a(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Signature"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),a(),n("span",{class:"token namespace"},[a("std"),n("span",{class:"token punctuation"},"::"),a("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),a(),n("span",{class:"token punctuation"},"{"),a(`
        `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token keyword"},"mut"),a(" transaction "),n("span",{class:"token operator"},"="),a(`
            `),n("span",{class:"token class-name"},"Transaction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_unsigned"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Message"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),a("instructions"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),a("wallet_signer"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"pubkey"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token keyword"},"let"),a(" recent_blockhash "),n("span",{class:"token operator"},"="),a(` rpc_client
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_latest_blockhash"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),a("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),a(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: unable to get recent blockhash: {}"'),n("span",{class:"token punctuation"},","),a(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),a(`
        transaction
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"try_sign"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),a("wallet_signer"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),a(" recent_blockhash"),n("span",{class:"token punctuation"},")"),a(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),a("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),a(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: failed to sign transaction: {}"'),n("span",{class:"token punctuation"},","),a(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token keyword"},"let"),a(" signature "),n("span",{class:"token operator"},"="),a(` rpc_client
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"send_and_confirm_transaction"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),a("transaction"),n("span",{class:"token punctuation"},")"),a(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),a("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),a(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: send transaction: {}"'),n("span",{class:"token punctuation"},","),a(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token class-name"},"Ok"),n("span",{class:"token punctuation"},"("),a("signature"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token comment"},"// UNIT TEST FOLLOWS"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br"),n("span",{class:"line-number"},"31"),n("br"),n("span",{class:"line-number"},"32"),n("br"),n("span",{class:"line-number"},"33"),n("br"),n("span",{class:"line-number"},"34"),n("br"),n("span",{class:"line-number"},"35"),n("br"),n("span",{class:"line-number"},"36"),n("br"),n("span",{class:"line-number"},"37"),n("br"),n("span",{class:"line-number"},"38"),n("br"),n("span",{class:"line-number"},"39"),n("br"),n("span",{class:"line-number"},"40"),n("br"),n("span",{class:"line-number"},"41"),n("br"),n("span",{class:"line-number"},"42"),n("br"),n("span",{class:"line-number"},"43"),n("br"),n("span",{class:"line-number"},"44"),n("br"),n("span",{class:"line-number"},"45"),n("br"),n("span",{class:"line-number"},"46"),n("br"),n("span",{class:"line-number"},"47"),n("br"),n("span",{class:"line-number"},"48"),n("br"),n("span",{class:"line-number"},"49"),n("br"),n("span",{class:"line-number"},"50"),n("br"),n("span",{class:"line-number"},"51"),n("br"),n("span",{class:"line-number"},"52"),n("br"),n("span",{class:"line-number"},"53"),n("br"),n("span",{class:"line-number"},"54"),n("br"),n("span",{class:"line-number"},"55"),n("br"),n("span",{class:"line-number"},"56"),n("br"),n("span",{class:"line-number"},"57"),n("br"),n("span",{class:"line-number"},"58"),n("br"),n("span",{class:"line-number"},"59"),n("br"),n("span",{class:"line-number"},"60"),n("br"),n("span",{class:"line-number"},"61"),n("br"),n("span",{class:"line-number"},"62"),n("br"),n("span",{class:"line-number"},"63"),n("br"),n("span",{class:"line-number"},"64"),n("br"),n("span",{class:"line-number"},"65"),n("br"),n("span",{class:"line-number"},"66"),n("br"),n("span",{class:"line-number"},"67"),n("br"),n("span",{class:"line-number"},"68"),n("br"),n("span",{class:"line-number"},"69"),n("br"),n("span",{class:"line-number"},"70"),n("br"),n("span",{class:"line-number"},"71"),n("br"),n("span",{class:"line-number"},"72"),n("br"),n("span",{class:"line-number"},"73"),n("br"),n("span",{class:"line-number"},"74"),n("br"),n("span",{class:"line-number"},"75"),n("br"),n("span",{class:"line-number"},"76"),n("br"),n("span",{class:"line-number"},"77"),n("br"),n("span",{class:"line-number"},"78"),n("br"),n("span",{class:"line-number"},"79"),n("br"),n("span",{class:"line-number"},"80"),n("br"),n("span",{class:"line-number"},"81"),n("br"),n("span",{class:"line-number"},"82"),n("br"),n("span",{class:"line-number"},"83"),n("br"),n("span",{class:"line-number"},"84"),n("br"),n("span",{class:"line-number"},"85"),n("br"),n("span",{class:"line-number"},"86"),n("br"),n("span",{class:"line-number"},"87"),n("br"),n("span",{class:"line-number"},"88"),n("br"),n("span",{class:"line-number"},"89"),n("br"),n("span",{class:"line-number"},"90"),n("br"),n("span",{class:"line-number"},"91"),n("br"),n("span",{class:"line-number"},"92"),n("br")])],-1),h=n("div",{class:"language-rust ext-rs line-numbers-mode"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token comment"},"/// Setup the test validator passing features"),a(`
`),n("span",{class:"token comment"},"/// you want to deactivate before running transactions"),a(`
`),n("span",{class:"token keyword"},"pub"),a(),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"setup_validator"),n("span",{class:"token punctuation"},"("),a(`
    invalidate_features`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Pubkey"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"->"),a(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TestValidator"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Keypair"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),a(),n("span",{class:"token namespace"},[a("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Extend environment variable to include our program location"),a(`
    `),n("span",{class:"token namespace"},[a("std"),n("span",{class:"token punctuation"},"::"),a("env"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"set_var"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"BPF_OUT_DIR"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token constant"},"PROG_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Instantiate the test validator"),a(`
    `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token keyword"},"mut"),a(" test_validator "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token class-name"},"TestValidatorGenesis"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Once instantiated, TestValidatorGenesis configuration functions follow"),a(`
    `),n("span",{class:"token comment"},"// a builder pattern enabling chaining of settings function calls"),a(`
    `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token punctuation"},"("),a("test_validator"),n("span",{class:"token punctuation"},","),a(" kp"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"="),a(` test_validator
        `),n("span",{class:"token comment"},"// Set the ledger path and name"),a(`
        `),n("span",{class:"token comment"},"// maps to `solana-test-validator --ledger <DIR>`"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ledger_path"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token comment"},"// Load our program. Ignored if reusing ledger"),a(`
        `),n("span",{class:"token comment"},"// maps to `solana-test-validator --bpf-program <ADDRESS_OR_PATH BPF_PROGRAM.SO>`"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add_program"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_NAME"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token comment"},"// Identify features to deactivate. Ignored if reusing ledger"),a(`
        `),n("span",{class:"token comment"},"// maps to `solana-test-validator --deactivate-feature <FEATURE_PUBKEY>`"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"deactivate_features"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),a("invalidate_features"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token comment"},"// Start the test validator"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"start"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token class-name"},"Ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),a("test_validator"),n("span",{class:"token punctuation"},","),a(" kp"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token comment"},"/// Convenience function to remove existing ledger before TestValidatorGenesis setup"),a(`
`),n("span",{class:"token comment"},"/// maps to `solana-test-validator ... --reset`"),a(`
`),n("span",{class:"token keyword"},"pub"),a(),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"clean_ledger_setup_validator"),n("span",{class:"token punctuation"},"("),a(`
    invalidate_features`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Pubkey"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"->"),a(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TestValidator"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Keypair"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),a(),n("span",{class:"token namespace"},[a("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token class-name"},"PathBuf"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"from_str"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"exists"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
        `),n("span",{class:"token namespace"},[a("std"),n("span",{class:"token punctuation"},"::"),a("fs"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"remove_dir_all"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token function"},"setup_validator"),n("span",{class:"token punctuation"},"("),a("invalidate_features"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token comment"},"/// Submits a transaction with programs instruction"),a(`
`),n("span",{class:"token comment"},"/// Boiler plate"),a(`
`),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"submit_transaction"),n("span",{class:"token punctuation"},"("),a(`
    rpc_client`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"RpcClient"),n("span",{class:"token punctuation"},","),a(`
    wallet_signer`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"dyn"),a(),n("span",{class:"token class-name"},"Signer"),n("span",{class:"token punctuation"},","),a(`
    instructions`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"->"),a(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Signature"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),a(),n("span",{class:"token namespace"},[a("std"),n("span",{class:"token punctuation"},"::"),a("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token keyword"},"mut"),a(" transaction "),n("span",{class:"token operator"},"="),a(`
        `),n("span",{class:"token class-name"},"Transaction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_unsigned"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Message"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),a("instructions"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),a("wallet_signer"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"pubkey"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" recent_blockhash "),n("span",{class:"token operator"},"="),a(` rpc_client
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_latest_blockhash"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),a("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),a(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: unable to get recent blockhash: {}"'),n("span",{class:"token punctuation"},","),a(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),a(`
    transaction
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"try_sign"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),a("wallet_signer"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),a(" recent_blockhash"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),a("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),a(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: failed to sign transaction: {}"'),n("span",{class:"token punctuation"},","),a(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" signature "),n("span",{class:"token operator"},"="),a(` rpc_client
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"send_and_confirm_transaction"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),a("transaction"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),a("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),a(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: send transaction: {}"'),n("span",{class:"token punctuation"},","),a(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token class-name"},"Ok"),n("span",{class:"token punctuation"},"("),a("signature"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br"),n("span",{class:"line-number"},"31"),n("br"),n("span",{class:"line-number"},"32"),n("br"),n("span",{class:"line-number"},"33"),n("br"),n("span",{class:"line-number"},"34"),n("br"),n("span",{class:"line-number"},"35"),n("br"),n("span",{class:"line-number"},"36"),n("br"),n("span",{class:"line-number"},"37"),n("br"),n("span",{class:"line-number"},"38"),n("br"),n("span",{class:"line-number"},"39"),n("br"),n("span",{class:"line-number"},"40"),n("br"),n("span",{class:"line-number"},"41"),n("br"),n("span",{class:"line-number"},"42"),n("br"),n("span",{class:"line-number"},"43"),n("br"),n("span",{class:"line-number"},"44"),n("br"),n("span",{class:"line-number"},"45"),n("br"),n("span",{class:"line-number"},"46"),n("br"),n("span",{class:"line-number"},"47"),n("br"),n("span",{class:"line-number"},"48"),n("br"),n("span",{class:"line-number"},"49"),n("br"),n("span",{class:"line-number"},"50"),n("br"),n("span",{class:"line-number"},"51"),n("br"),n("span",{class:"line-number"},"52"),n("br"),n("span",{class:"line-number"},"53"),n("br"),n("span",{class:"line-number"},"54"),n("br"),n("span",{class:"line-number"},"55"),n("br"),n("span",{class:"line-number"},"56"),n("br"),n("span",{class:"line-number"},"57"),n("br")])],-1),v=u("<p>Kita sekarang dapat menambahkan fungsi pengujian di badan <code>mod test {...}</code> untuk mendemonstrasikan default penyiapan validator (semua fitur diaktifkan) lalu nonaktifkan <code>batas komputasi luas transaksi</code> sebagai per contoh sebelumnya menjalankan <code>solana-test-validator</code> dari CLI.</p><p>We can now add test functions in the body of <code>mod test {...}</code> to demonstrate default validator setup (all features enabled) and then disabling the <code>transaction wide compute cap</code> as per previous examples running <code>solana-test-validator</code> from the command line.</p>",2),y=n("div",{class:"language-rust ext-rs line-numbers-mode"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token attribute attr-name"},"#[test]"),a(`
`),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"test_base_pass"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Run with all features activated (default for TestValidatorGenesis)"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" inv_feat "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Start validator with clean (new) ledger"),a(`
    `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token punctuation"},"("),a("test_validator"),n("span",{class:"token punctuation"},","),a(" main_payer"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"clean_ledger_setup_validator"),n("span",{class:"token punctuation"},"("),a("inv_feat"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Get the RpcClient"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" connection "),n("span",{class:"token operator"},"="),a(" test_validator"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_rpc_client"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Capture our programs log statements"),a(`
    `),n("span",{class:"token namespace"},[a("solana_logger"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"setup_with_default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"solana_runtime::message=debug"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},"// This example doesn't require sending any accounts to program"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" accounts "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Build instruction array and submit transaction"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" txn "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"submit_transaction"),n("span",{class:"token punctuation"},"("),a(`
        `),n("span",{class:"token operator"},"&"),a("connection"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token operator"},"&"),a("main_payer"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token comment"},"// Add two (2) instructions to transaction to demonstrate"),a(`
        `),n("span",{class:"token comment"},"// that each instruction CU draws down from default Transaction CU (200_000)"),a(`
        `),n("span",{class:"token comment"},"// Replace with instructions that make sense for your program"),a(`
        `),n("span",{class:"token punctuation"},"["),a(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"0u8"),n("span",{class:"token punctuation"},","),a(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"1u8"),n("span",{class:"token punctuation"},","),a(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token punctuation"},"]"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token macro property"},"assert!"),n("span",{class:"token punctuation"},"("),a("txn"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is_ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br")])],-1),w=n("div",{class:"language-rust ext-rs line-numbers-mode"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token attribute attr-name"},"#[test]"),a(`
`),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"test_deactivate_tx_cu_pass"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Run with all features activated except 'transaction wide compute cap'"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" inv_feat "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),n("span",{class:"token constant"},"TXWIDE_LIMITS"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Start validator with clean (new) ledger"),a(`
    `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token punctuation"},"("),a("test_validator"),n("span",{class:"token punctuation"},","),a(" main_payer"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"clean_ledger_setup_validator"),n("span",{class:"token punctuation"},"("),a("inv_feat"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Get the RpcClient"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" connection "),n("span",{class:"token operator"},"="),a(" test_validator"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_rpc_client"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Capture our programs log statements"),a(`
    `),n("span",{class:"token namespace"},[a("solana_logger"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"setup_with_default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"solana_runtime::message=debug"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},"// This example doesn't require sending any accounts to program"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" accounts "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Build instruction array and submit transaction"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" txn "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"submit_transaction"),n("span",{class:"token punctuation"},"("),a(`
        `),n("span",{class:"token operator"},"&"),a("connection"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token operator"},"&"),a("main_payer"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token punctuation"},"["),a(`
            `),n("span",{class:"token comment"},"// This instruction adds CU to transaction budget (1.9.2) but does nothing"),a(`
            `),n("span",{class:"token comment"},"// when we deactivate the 'transaction wide compute cap' feature"),a(`
            `),n("span",{class:"token class-name"},"ComputeBudgetInstruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"request_units"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"400_000u32"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
            `),n("span",{class:"token comment"},"// Add two (2) instructions to transaction"),a(`
            `),n("span",{class:"token comment"},"// Replace with instructions that make sense for your program"),a(`
            `),n("span",{class:"token comment"},"// You will see that each instruction has the 1.8.x 200_000 CU per budget"),a(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"0u8"),n("span",{class:"token punctuation"},","),a(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"1u8"),n("span",{class:"token punctuation"},","),a(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token punctuation"},"]"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token macro property"},"assert!"),n("span",{class:"token punctuation"},"("),a("txn"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is_ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br"),n("span",{class:"line-number"},"31"),n("br")])],-1),P=n("p",null,[a("Atau, "),n("a",{href:"#resources"},"gadget mesin scfs"),a(" dapat menghasilkan vektor penuh yang dinonaktifkan fitur untuk sebuah cluster. Berikut ini menunjukkan menggunakan mesin itu untuk mendapatkan daftar dari semua fitur yang dinonaktifkan untuk devnet.")],-1),x=n("div",{class:"language-rust ext-rs line-numbers-mode"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token attribute attr-name"},"#[test]"),a(`
`),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"test_devnet_parity_pass"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Use gadget-scfs to get all deactivated features from devnet"),a(`
    `),n("span",{class:"token comment"},'// must have `gadgets-scfs = "0.2.0" in Cargo.toml to use'),a(`
    `),n("span",{class:"token comment"},"// Here we setup for a run that samples features only"),a(`
    `),n("span",{class:"token comment"},"// from devnet"),a(`
    `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token keyword"},"mut"),a(" my_matrix "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token class-name"},"ScfsMatrix"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ScfsCriteria"),a(),n("span",{class:"token punctuation"},"{"),a(`
        clusters`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),n("span",{class:"token constant"},"SCFS_DEVNET"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_string"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token punctuation"},".."),n("span",{class:"token class-name"},"Default"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Run the sampler matrix"),a(`
    `),n("span",{class:"token macro property"},"assert!"),n("span",{class:"token punctuation"},"("),a("my_matrix"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is_ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Get all deactivated features"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" deactivated "),n("span",{class:"token operator"},"="),a(` my_matrix
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_features"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"ScfsMatrix"),n("span",{class:"token punctuation"},"::"),a("any_inactive"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Confirm we have them"),a(`
    `),n("span",{class:"token macro property"},"assert_ne!"),n("span",{class:"token punctuation"},"("),a("deactivated"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"len"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Setup test validator and logging while deactivating all"),a(`
    `),n("span",{class:"token comment"},"// features that are deactivated in devnet"),a(`
    `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token punctuation"},"("),a("test_validator"),n("span",{class:"token punctuation"},","),a(" main_payer"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"clean_ledger_setup_validator"),n("span",{class:"token punctuation"},"("),a("deactivated"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" connection "),n("span",{class:"token operator"},"="),a(" test_validator"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_rpc_client"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token namespace"},[a("solana_logger"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"setup_with_default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"solana_runtime::message=debug"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token keyword"},"let"),a(" accounts "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" txn "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"submit_transaction"),n("span",{class:"token punctuation"},"("),a(`
        `),n("span",{class:"token operator"},"&"),a("connection"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token operator"},"&"),a("main_payer"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token punctuation"},"["),a(`
            `),n("span",{class:"token comment"},"// Add two (2) instructions to transaction"),a(`
            `),n("span",{class:"token comment"},"// Replace with instructions that make sense for your program"),a(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"0u8"),n("span",{class:"token punctuation"},","),a(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"1u8"),n("span",{class:"token punctuation"},","),a(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token punctuation"},"]"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token macro property"},"assert!"),n("span",{class:"token punctuation"},"("),a("txn"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is_ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br"),n("span",{class:"line-number"},"31"),n("br"),n("span",{class:"line-number"},"32"),n("br"),n("span",{class:"line-number"},"33"),n("br"),n("span",{class:"line-number"},"34"),n("br"),n("span",{class:"line-number"},"35"),n("br"),n("span",{class:"line-number"},"36"),n("br"),n("span",{class:"line-number"},"37"),n("br"),n("span",{class:"line-number"},"38"),n("br"),n("span",{class:"line-number"},"39"),n("br")])],-1),G=n("p",null,"Selamat menguji!",-1),B=n("h2",{id:"resources",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#resources","aria-hidden":"true"},"#"),a(" Resources")],-1),A={href:"https://github.com/FrankC01/solana-gadgets/tree/main/rust/scfsd",target:"_blank",rel:"noopener noreferrer"},S=a("scfsd"),E={href:"https://github.com/FrankC01/solana-gadgets/tree/main/rust/gadgets-scfs",target:"_blank",rel:"noopener noreferrer"},R=a("gadget-scfs");function j(D,L){const i=e("SolanaCodeGroupItem"),r=e("SolanaCodeGroup"),o=e("CodeGroupItem"),c=e("CodeGroup"),p=e("ExternalLinkIcon");return m(),d(b,null,[f,s(r,null,{default:t(()=>[s(i,{title:"Test Boiler Plate",active:""},{default:t(()=>[_]),preview:t(()=>[h]),_:1})]),_:1}),v,s(c,null,{default:t(()=>[s(o,{title:"All Features Test"},{default:t(()=>[y]),_:1}),s(o,{title:"Disable Tx CU Test",active:""},{default:t(()=>[w]),_:1})]),_:1}),P,s(c,null,{default:t(()=>[s(o,{title:"Devnet Parity"},{default:t(()=>[x]),_:1})]),_:1}),G,B,n("p",null,[n("a",A,[S,s(p)])]),n("p",null,[n("a",E,[R,s(p)])])],64)}var U=k(g,[["render",j]]);export{U as default};
