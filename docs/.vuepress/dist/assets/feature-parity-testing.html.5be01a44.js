import{_ as i,r as e,o as r,c as k,b as s,w as t,a as n,F as m,e as b,d as a}from"./app.07ce7a66.js";var d="/assets/scfsd.cc67ec33.png";const g={},f=b(`<h1 id="pagsubok-sa-pagkakapareho-ng-tampok" tabindex="-1"><a class="header-anchor" href="#pagsubok-sa-pagkakapareho-ng-tampok" aria-hidden="true">#</a> Pagsubok sa Pagkakapareho ng Tampok</h1><p>Kapag sinusubukan ang iyong programa, ang mga katiyakan na pareho itong tatakbo sa iba&#39;t ibang mga kumpol ay mahalaga sa parehong kalidad at paggawa ng inaasahang resulta.</p><h2 id="mga-katotohanan" tabindex="-1"><a class="header-anchor" href="#mga-katotohanan" aria-hidden="true">#</a> Mga Katotohanan</h2><div class="custom-container tip"><p class="custom-container-title">Fact Sheet</p><ul><li>Ang mga tampok ay mga kakayahan na ipinakilala sa mga validator ng Solana at nangangailangan ng pag-activate upang magamit.</li><li>Maaaring i-activate ang mga feature sa isang cluster (hal. testnet) ngunit hindi sa isa pa (hal. mainnet-beta).</li><li>Gayunpaman; kapag lokal na pinapatakbo ang default na <code>solana-test-validator</code>, lahat ng available na feature sa iyong Ang bersyon ng Solana ay awtomatikong naisaaktibo. Ang resulta ay kapag lokal na pagsubok, ang mga kakayahan at resulta ng maaaring hindi pareho ang iyong pagsubok kapag nagde-deploy at tumatakbo sa ibang cluster!</li></ul></div><h2 id="sitwasyon" tabindex="-1"><a class="header-anchor" href="#sitwasyon" aria-hidden="true">#</a> Sitwasyon</h2><p>Ipagpalagay na mayroon kang Transaksyon na naglalaman ng tatlong (3) mga instruction at ang bawat instruction ay kumukonsumo ng humigit-kumulang 100_000 Compute Units (CU). Kapag tumatakbo sa bersyon ng Solana 1.8.x, mapapansin mo ang iyong pagtuturo sa pagkonsumo ng CU katulad ng:</p><table><thead><tr><th>Instruction</th><th>Simula sa CU</th><th>Pagpapatupad</th><th>Natitirang CU</th></tr></thead><tbody><tr><td>1</td><td>200_000</td><td>-100_000</td><td>100_000</td></tr><tr><td>2</td><td>200_000</td><td>-100_000</td><td>100_000</td></tr><tr><td>3</td><td>200_000</td><td>-100_000</td><td>100_000</td></tr></tbody></table><p>Sa Solana 1.9.2 isang tampok na tinatawag na &#39;transaction wide compute cap&#39; ay ipinakilala kung saan ang isang Transaksyon, bilang default, ay may 200_000 CU na badyet at ang mga naka-encapsulate na instruction na <strong><em>ay kumukuha</em></strong> mula sa badyet ng Transaksyon na iyon. Parehong tumatakbo ang transaksyon tulad ng nabanggit sa itaas ay magkakaroon ng ibang pag-uugali:</p><table><thead><tr><th>Instruction</th><th>Simula sa CU</th><th>Pagpapatupad</th><th>Natitirang CU</th></tr></thead><tbody><tr><td>1</td><td>200_000</td><td>-100_000</td><td>100_000</td></tr><tr><td>2</td><td>100_000</td><td>-100_000</td><td>0</td></tr><tr><td>3</td><td>0</td><td>FAIL!!!</td><td>FAIL!!!</td></tr></tbody></table><p>Hays! Kung hindi mo alam ito, malamang na mabigo ka dahil walang pagbabago sa iyong pag-uugali sa pagtuturo magiging sanhi nito. Sa devnet ito ay gumana nang maayos, ngunit sa lokal na ito ay nabigo?!?</p><p>May kakayahang taasan ang kabuuang badyet sa Transaksyon, para sabihing 300_000 CU, at iligtas ang iyong katinuan ngunit ito ay nagpapakita kung bakit ang pagsubok sa <strong><em>Feature Parity</em></strong> ay nagbibigay ng isang maagap na paraan upang maiwasan ang anumang pagkalito.</p><h2 id="katayuan-ng-tampok" tabindex="-1"><a class="header-anchor" href="#katayuan-ng-tampok" aria-hidden="true">#</a> Katayuan ng Tampok</h2><p>Medyo madaling suriin kung anong mga feature ang pinagana para sa isang partikular na cluster gamit ang command na <code>solana feature status</code>.</p><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana feature status -ud // Ipinapakita ayon sa feature status para sa devnet
solana feature status -ut // Ipinapakita para sa testnet
solana feature status -um // Ipinapakita para sa mainnet-beta
status ng tampok na solana -ul // Ipinapakita para sa lokal, nangangailangan ng pagpapatakbo ng solana-test-validator
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Bilang kahalili, maaari kang gumamit ng tool tulad ng <a href="#resources">scfsd</a> upang obserbahan ang lahat ng katayuan ng tampok sa mga cluster na magpapakita, bahagyang screen na ipinapakita dito, at hindi nangangailangan ng <code>solana-test-validator</code> na tumakbo:</p><img src="`+d+`" alt="Feature Status Heatmap"><h2 id="pagsubok-sa-pagkakapantay-pantay" tabindex="-1"><a class="header-anchor" href="#pagsubok-sa-pagkakapantay-pantay" aria-hidden="true">#</a> Pagsubok sa Pagkakapantay-pantay</h2><p>Gaya ng nabanggit sa itaas, awtomatikong ina-activate ng <code>solana-test-validator</code> ang <strong>lahat</strong> ng mga feature. Kaya&#39;t upang masagot ang tanong na &quot;Paano ko masusubok nang lokal sa isang environment na may pagkakapareho sa devnet, testnet o kahit mainnet-beta?&quot;.</p><p>Solusyon: Ang mga PR ay idinagdag sa Solana 1.9.6 upang payagan ang pag-deactivate ng mga feature:</p><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana-test-validator --deactivate-feature &lt;FEATURE_PUBKEY&gt; ...
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="simpleng-pagpapakita" tabindex="-1"><a class="header-anchor" href="#simpleng-pagpapakita" aria-hidden="true">#</a> Simpleng Pagpapakita</h2><p>Ipagpalagay na mayroon kang isang simpleng programa na nag-log sa data na natatanggap nito sa entry-point nito. At ikaw ay pagsubok ng isang transaksyon na nagdaragdag ng dalawang (2) mga instruction para sa iyong programa.</p><h3 id="na-activate-ang-lahat-ng-feature" tabindex="-1"><a class="header-anchor" href="#na-activate-ang-lahat-ng-feature" aria-hidden="true">#</a> Na-activate ang lahat ng feature</h3><ol><li>Sisimulan mo ang test validator sa isang terminal:</li></ol><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana config set -ul
solana-test-validator -l ./ledger --bpf-program ADDRESS target/deploy/PROGNAME.so --reset\`
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="2"><li>Sa ibang terminal sisimulan mo ang log streamer:</li></ol><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana logs
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="3"><li>Pagkatapos ay patakbuhin mo ang iyong transaksyon. Makakakita ka ng katulad sa log terminal (na-edit para sa kalinawan):</li></ol><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc invoke [1]
Program log: process_instruction: PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc: 0 accounts, data=[0]
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc consumed 12843 of 200000 compute units
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc success
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc invoke [1]
Program log: process_instruction: PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc: 0 accounts, data=[1]
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc consumed 12843 of 187157 compute units
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc success[
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>Dahil ang aming feature na &#39;transaction wide compute cap&#39; ay awtomatikong naisaaktibo bilang default, sinusunod namin ang bawat isa pagtuturo na kumukuha ng CU mula sa panimulang Transaksyon na badyet na 200_000 CU.</p><h3 id="na-deactivate-ang-mga-piling-feature" tabindex="-1"><a class="header-anchor" href="#na-deactivate-ang-mga-piling-feature" aria-hidden="true">#</a> Na-deactivate ang mga piling feature</h3><ol><li>Para sa run na ito, gusto nating tumakbo upang ang pag-uugali ng badyet ng CU ay naaayon sa kung ano ang tumatakbo sa devnet. Gamit ang (mga) tool na inilalarawan sa <a href="#feature-status">Status ng Tampok</a> ibinubukod namin ang pampublikong key na <code>transaction wide compute cap</code> at gamitin ang <code>--deactivate-feature</code> sa test validator startup</li></ol><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana-test-validator -l ./ledger --deactivate-feature 5ekBxc8itEnPv4NzGJtr8BVVQLNMQuLMNQQj7pHoLNZ9 --bpf-program target/deploy/PROGNAME.so --reset\`
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>Nakita namin ngayon sa aming mga log na ang aming mga instruction ay mayroon na ngayong sariling 200_000 CU na badyet (na-edit para sa kalinawan) na kasalukuyang estado sa lahat ng upstream cluster:</li></ol><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc invoke [1]
Program log: process_instruction: PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc: 0 accounts, data=[0]
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc consumed 12843 of 200000 compute units
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc success
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc invoke [1]
Program log: process_instruction: PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc: 0 accounts, data=[0]
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc consumed 12843 of 200000 compute units
Program PWDnx8LkjJUn9bAVzG6Fp6BuvB41x7DkBZdo9YLMGcc success
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="buong-parity-testing" tabindex="-1"><a class="header-anchor" href="#buong-parity-testing" aria-hidden="true">#</a> Buong Parity Testing</h2><p>Maaari kang maging ganap na pare-pareho sa isang partikular na cluster sa pamamagitan ng pagtukoy sa bawat feature na hindi na-activate pa at magdagdag ng <code>--deactivate-feature &lt;FEATURE_PUBKEY&gt;</code> para sa bawat isa kapag gumagamit ng <code>solana-test-validator</code>:</p><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana-test-validator --deactivate-feature PUBKEY_1 --deactivate-feature PUBKEY_2 ...
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Bilang kahalili, ang <a href="#resources">scfsd</a> ay nagbibigay ng command switch upang i-output ang kumpletong na-deactivate na feature itinakda para sa isang cluster na direktang i-feed sa startup ng <code>solana-test-validator</code>:</p><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>solana-test-validator -l ./.ledger $(scfsd -c devnet -k -t)
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Kung magbubukas ka ng isa pang terminal, habang tumatakbo ang validator, at <code>solana feature status</code> ang makikita mo mga feature na na-deactivate na nakitang naka-deactivate sa devnet</p><h2 id="buong-parity-testing-sa-pamamagitan-ng-pag-program" tabindex="-1"><a class="header-anchor" href="#buong-parity-testing-sa-pamamagitan-ng-pag-program" aria-hidden="true">#</a> Buong Parity Testing sa pamamagitan ng pag-program</h2><p>Para sa mga kumokontrol sa pagpapatakbo ng test validator sa loob ng kanilang test code, nagbabago ang test validator activated/deactivated features ay posible gamit ang TestValidatorGenesis. Sa Solana 1.9.6 isang function ang idinagdag sa tagabuo ng validator upang suportahan ito.</p><p>Sa ugat ng folder ng iyong program, lumikha ng bagong folder na tinatawag na <code>tests</code> at magdagdag ng <code>parity_test.rs</code> file. Narito ang mga function ng boiler place (boiler-plate kung gugustuhin mo) na ginagamit ng bawat pagsubok</p>`,44),_=n("div",{class:"language-rust ext-rs line-numbers-mode"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token attribute attr-name"},"#[cfg(test)]"),a(`
`),n("span",{class:"token keyword"},"mod"),a(),n("span",{class:"token module-declaration namespace"},"tests"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"use"),a(),n("span",{class:"token namespace"},[a("std"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),a("error"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token namespace"},[a("path"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"PathBuf"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token keyword"},"str"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"FromStr"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},"// Use gadget-scfs to get interegate feature lists from clusters"),a(`
    `),n("span",{class:"token comment"},'// must have `gadgets-scfs = "0.2.0" in Cargo.toml [dev-dependencies] to use'),a(`
    `),n("span",{class:"token keyword"},"use"),a(),n("span",{class:"token namespace"},[a("gadgets_scfs"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"ScfsCriteria"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"ScfsMatrix"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token constant"},"SCFS_DEVNET"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"use"),a(),n("span",{class:"token namespace"},[a("solana_client"),n("span",{class:"token punctuation"},"::"),a("rpc_client"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"RpcClient"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"use"),a(),n("span",{class:"token namespace"},[a("solana_program"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),n("span",{class:"token namespace"},[a("instruction"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token namespace"},[a("message"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Message"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token namespace"},[a("pubkey"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Pubkey"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"use"),a(),n("span",{class:"token namespace"},[a("solana_sdk"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),a(`
        `),n("span",{class:"token comment"},"// Added in Solana 1.9.2"),a(`
        `),n("span",{class:"token namespace"},[a("compute_budget"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"ComputeBudgetInstruction"),n("span",{class:"token punctuation"},","),a(`
        pubkey`),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token namespace"},[a("signature"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"Keypair"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Signature"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token namespace"},[a("signer"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Signer"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token namespace"},[a("transaction"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Transaction"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Extended in Solana 1.9.6"),a(`
    `),n("span",{class:"token keyword"},"use"),a(),n("span",{class:"token namespace"},[a("solana_test_validator"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"TestValidator"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"TestValidatorGenesis"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},"/// Location/Name of ProgramTestGenesis ledger"),a(`
    `),n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"str"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},'"./.ledger"'),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"/// Path to BPF program (*.so) change if needed"),a(`
    `),n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token constant"},"PROG_PATH"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"str"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},'"target/deploy/"'),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"/// Program name from program Cargo.toml"),a(`
    `),n("span",{class:"token comment"},"/// FILL IN WITH YOUR PROGRAM_NAME"),a(`
    `),n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token constant"},"PROG_NAME"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"str"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},'"PROGRAM_NAME"'),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"/// Program public key"),a(`
    `),n("span",{class:"token comment"},"/// FILL IN WITH YOUR PROGRAM'S PUBLIC KEY str"),a(`
    `),n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Pubkey"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token macro property"},"pubkey!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"PROGRAMS_PUBLIC_KEY_BASE58_STRING"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"/// 'transaction wide compute cap' public key"),a(`
    `),n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token constant"},"TXWIDE_LIMITS"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Pubkey"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token macro property"},"pubkey!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"5ekBxc8itEnPv4NzGJtr8BVVQLNMQuLMNQQj7pHoLNZ9"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},"/// Setup the test validator passing features"),a(`
    `),n("span",{class:"token comment"},"/// you want to deactivate before running transactions"),a(`
    `),n("span",{class:"token keyword"},"pub"),a(),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"setup_validator"),n("span",{class:"token punctuation"},"("),a(`
        invalidate_features`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Pubkey"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"->"),a(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TestValidator"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Keypair"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),a(),n("span",{class:"token namespace"},[a("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),a(),n("span",{class:"token punctuation"},"{"),a(`
        `),n("span",{class:"token comment"},"// Extend environment variable to include our program location"),a(`
        `),n("span",{class:"token namespace"},[a("std"),n("span",{class:"token punctuation"},"::"),a("env"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"set_var"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"BPF_OUT_DIR"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token constant"},"PROG_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token comment"},"// Instantiate the test validator"),a(`
        `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token keyword"},"mut"),a(" test_validator "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token class-name"},"TestValidatorGenesis"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token comment"},"// Once instantiated, TestValidatorGenesis configuration functions follow"),a(`
        `),n("span",{class:"token comment"},"// a builder pattern enabling chaining of settings function calls"),a(`
        `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token punctuation"},"("),a("test_validator"),n("span",{class:"token punctuation"},","),a(" kp"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"="),a(` test_validator
            `),n("span",{class:"token comment"},"// Set the ledger path and name"),a(`
            `),n("span",{class:"token comment"},"// maps to `solana-test-validator --ledger <DIR>`"),a(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ledger_path"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),a(`
            `),n("span",{class:"token comment"},"// Load our program. Ignored if reusing ledger"),a(`
            `),n("span",{class:"token comment"},"// maps to `solana-test-validator --bpf-program <ADDRESS_OR_PATH BPF_PROGRAM.SO>`"),a(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add_program"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_NAME"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},")"),a(`
            `),n("span",{class:"token comment"},"// Identify features to deactivate. Ignored if reusing ledger"),a(`
            `),n("span",{class:"token comment"},"// maps to `solana-test-validator --deactivate-feature <FEATURE_PUBKEY>`"),a(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"deactivate_features"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),a("invalidate_features"),n("span",{class:"token punctuation"},")"),a(`
            `),n("span",{class:"token comment"},"// Start the test validator"),a(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"start"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token class-name"},"Ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),a("test_validator"),n("span",{class:"token punctuation"},","),a(" kp"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`

    `),n("span",{class:"token comment"},"/// Convenience function to remove existing ledger before TestValidatorGenesis setup"),a(`
    `),n("span",{class:"token comment"},"/// maps to `solana-test-validator ... --reset`"),a(`
    `),n("span",{class:"token keyword"},"pub"),a(),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"clean_ledger_setup_validator"),n("span",{class:"token punctuation"},"("),a(`
        invalidate_features`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Pubkey"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"->"),a(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TestValidator"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Keypair"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),a(),n("span",{class:"token namespace"},[a("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),a(),n("span",{class:"token punctuation"},"{"),a(`
        `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token class-name"},"PathBuf"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"from_str"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"exists"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
            `),n("span",{class:"token namespace"},[a("std"),n("span",{class:"token punctuation"},"::"),a("fs"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"remove_dir_all"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token punctuation"},"}"),a(`
        `),n("span",{class:"token function"},"setup_validator"),n("span",{class:"token punctuation"},"("),a("invalidate_features"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`

    `),n("span",{class:"token comment"},"/// Submits a transaction with programs instruction"),a(`
    `),n("span",{class:"token comment"},"/// Boiler plate"),a(`
    `),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"submit_transaction"),n("span",{class:"token punctuation"},"("),a(`
        rpc_client`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"RpcClient"),n("span",{class:"token punctuation"},","),a(`
        wallet_signer`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"dyn"),a(),n("span",{class:"token class-name"},"Signer"),n("span",{class:"token punctuation"},","),a(`
        instructions`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"->"),a(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Signature"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),a(),n("span",{class:"token namespace"},[a("std"),n("span",{class:"token punctuation"},"::"),a("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),a(),n("span",{class:"token punctuation"},"{"),a(`
        `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token keyword"},"mut"),a(" transaction "),n("span",{class:"token operator"},"="),a(`
            `),n("span",{class:"token class-name"},"Transaction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_unsigned"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Message"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),a("instructions"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),a("wallet_signer"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"pubkey"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token keyword"},"let"),a(" recent_blockhash "),n("span",{class:"token operator"},"="),a(` rpc_client
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_latest_blockhash"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),a("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),a(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: unable to get recent blockhash: {}"'),n("span",{class:"token punctuation"},","),a(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),a(`
        transaction
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"try_sign"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),a("wallet_signer"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),a(" recent_blockhash"),n("span",{class:"token punctuation"},")"),a(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),a("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),a(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: failed to sign transaction: {}"'),n("span",{class:"token punctuation"},","),a(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token keyword"},"let"),a(" signature "),n("span",{class:"token operator"},"="),a(` rpc_client
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"send_and_confirm_transaction"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),a("transaction"),n("span",{class:"token punctuation"},")"),a(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),a("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),a(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: send transaction: {}"'),n("span",{class:"token punctuation"},","),a(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token class-name"},"Ok"),n("span",{class:"token punctuation"},"("),a("signature"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token comment"},"// UNIT TEST FOLLOWS"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br"),n("span",{class:"line-number"},"31"),n("br"),n("span",{class:"line-number"},"32"),n("br"),n("span",{class:"line-number"},"33"),n("br"),n("span",{class:"line-number"},"34"),n("br"),n("span",{class:"line-number"},"35"),n("br"),n("span",{class:"line-number"},"36"),n("br"),n("span",{class:"line-number"},"37"),n("br"),n("span",{class:"line-number"},"38"),n("br"),n("span",{class:"line-number"},"39"),n("br"),n("span",{class:"line-number"},"40"),n("br"),n("span",{class:"line-number"},"41"),n("br"),n("span",{class:"line-number"},"42"),n("br"),n("span",{class:"line-number"},"43"),n("br"),n("span",{class:"line-number"},"44"),n("br"),n("span",{class:"line-number"},"45"),n("br"),n("span",{class:"line-number"},"46"),n("br"),n("span",{class:"line-number"},"47"),n("br"),n("span",{class:"line-number"},"48"),n("br"),n("span",{class:"line-number"},"49"),n("br"),n("span",{class:"line-number"},"50"),n("br"),n("span",{class:"line-number"},"51"),n("br"),n("span",{class:"line-number"},"52"),n("br"),n("span",{class:"line-number"},"53"),n("br"),n("span",{class:"line-number"},"54"),n("br"),n("span",{class:"line-number"},"55"),n("br"),n("span",{class:"line-number"},"56"),n("br"),n("span",{class:"line-number"},"57"),n("br"),n("span",{class:"line-number"},"58"),n("br"),n("span",{class:"line-number"},"59"),n("br"),n("span",{class:"line-number"},"60"),n("br"),n("span",{class:"line-number"},"61"),n("br"),n("span",{class:"line-number"},"62"),n("br"),n("span",{class:"line-number"},"63"),n("br"),n("span",{class:"line-number"},"64"),n("br"),n("span",{class:"line-number"},"65"),n("br"),n("span",{class:"line-number"},"66"),n("br"),n("span",{class:"line-number"},"67"),n("br"),n("span",{class:"line-number"},"68"),n("br"),n("span",{class:"line-number"},"69"),n("br"),n("span",{class:"line-number"},"70"),n("br"),n("span",{class:"line-number"},"71"),n("br"),n("span",{class:"line-number"},"72"),n("br"),n("span",{class:"line-number"},"73"),n("br"),n("span",{class:"line-number"},"74"),n("br"),n("span",{class:"line-number"},"75"),n("br"),n("span",{class:"line-number"},"76"),n("br"),n("span",{class:"line-number"},"77"),n("br"),n("span",{class:"line-number"},"78"),n("br"),n("span",{class:"line-number"},"79"),n("br"),n("span",{class:"line-number"},"80"),n("br"),n("span",{class:"line-number"},"81"),n("br"),n("span",{class:"line-number"},"82"),n("br"),n("span",{class:"line-number"},"83"),n("br"),n("span",{class:"line-number"},"84"),n("br"),n("span",{class:"line-number"},"85"),n("br"),n("span",{class:"line-number"},"86"),n("br"),n("span",{class:"line-number"},"87"),n("br"),n("span",{class:"line-number"},"88"),n("br"),n("span",{class:"line-number"},"89"),n("br"),n("span",{class:"line-number"},"90"),n("br"),n("span",{class:"line-number"},"91"),n("br"),n("span",{class:"line-number"},"92"),n("br")])],-1),h=n("div",{class:"language-rust ext-rs line-numbers-mode"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token comment"},"/// Setup the test validator passing features"),a(`
`),n("span",{class:"token comment"},"/// you want to deactivate before running transactions"),a(`
`),n("span",{class:"token keyword"},"pub"),a(),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"setup_validator"),n("span",{class:"token punctuation"},"("),a(`
    invalidate_features`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Pubkey"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"->"),a(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TestValidator"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Keypair"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),a(),n("span",{class:"token namespace"},[a("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Extend environment variable to include our program location"),a(`
    `),n("span",{class:"token namespace"},[a("std"),n("span",{class:"token punctuation"},"::"),a("env"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"set_var"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"BPF_OUT_DIR"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token constant"},"PROG_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Instantiate the test validator"),a(`
    `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token keyword"},"mut"),a(" test_validator "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token class-name"},"TestValidatorGenesis"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Once instantiated, TestValidatorGenesis configuration functions follow"),a(`
    `),n("span",{class:"token comment"},"// a builder pattern enabling chaining of settings function calls"),a(`
    `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token punctuation"},"("),a("test_validator"),n("span",{class:"token punctuation"},","),a(" kp"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"="),a(` test_validator
        `),n("span",{class:"token comment"},"// Set the ledger path and name"),a(`
        `),n("span",{class:"token comment"},"// maps to `solana-test-validator --ledger <DIR>`"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ledger_path"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token comment"},"// Load our program. Ignored if reusing ledger"),a(`
        `),n("span",{class:"token comment"},"// maps to `solana-test-validator --bpf-program <ADDRESS_OR_PATH BPF_PROGRAM.SO>`"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add_program"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_NAME"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token comment"},"// Identify features to deactivate. Ignored if reusing ledger"),a(`
        `),n("span",{class:"token comment"},"// maps to `solana-test-validator --deactivate-feature <FEATURE_PUBKEY>`"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"deactivate_features"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),a("invalidate_features"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token comment"},"// Start the test validator"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"start"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token class-name"},"Ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),a("test_validator"),n("span",{class:"token punctuation"},","),a(" kp"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token comment"},"/// Convenience function to remove existing ledger before TestValidatorGenesis setup"),a(`
`),n("span",{class:"token comment"},"/// maps to `solana-test-validator ... --reset`"),a(`
`),n("span",{class:"token keyword"},"pub"),a(),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"clean_ledger_setup_validator"),n("span",{class:"token punctuation"},"("),a(`
    invalidate_features`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Pubkey"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"->"),a(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TestValidator"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Keypair"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),a(),n("span",{class:"token namespace"},[a("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token class-name"},"PathBuf"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"from_str"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"exists"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
        `),n("span",{class:"token namespace"},[a("std"),n("span",{class:"token punctuation"},"::"),a("fs"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"remove_dir_all"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"LEDGER_PATH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token function"},"setup_validator"),n("span",{class:"token punctuation"},"("),a("invalidate_features"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token comment"},"/// Submits a transaction with programs instruction"),a(`
`),n("span",{class:"token comment"},"/// Boiler plate"),a(`
`),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"submit_transaction"),n("span",{class:"token punctuation"},"("),a(`
    rpc_client`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"RpcClient"),n("span",{class:"token punctuation"},","),a(`
    wallet_signer`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"dyn"),a(),n("span",{class:"token class-name"},"Signer"),n("span",{class:"token punctuation"},","),a(`
    instructions`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"->"),a(),n("span",{class:"token class-name"},"Result"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Signature"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"dyn"),a(),n("span",{class:"token namespace"},[a("std"),n("span",{class:"token punctuation"},"::"),a("error"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Error"),n("span",{class:"token operator"},">>"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token keyword"},"mut"),a(" transaction "),n("span",{class:"token operator"},"="),a(`
        `),n("span",{class:"token class-name"},"Transaction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_unsigned"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Message"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),a("instructions"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),a("wallet_signer"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"pubkey"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" recent_blockhash "),n("span",{class:"token operator"},"="),a(` rpc_client
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_latest_blockhash"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),a("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),a(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: unable to get recent blockhash: {}"'),n("span",{class:"token punctuation"},","),a(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),a(`
    transaction
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"try_sign"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),a("wallet_signer"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),a(" recent_blockhash"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),a("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),a(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: failed to sign transaction: {}"'),n("span",{class:"token punctuation"},","),a(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" signature "),n("span",{class:"token operator"},"="),a(` rpc_client
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"send_and_confirm_transaction"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),a("transaction"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_err"),n("span",{class:"token punctuation"},"("),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),a("err"),n("span",{class:"token closure-punctuation punctuation"},"|")]),a(),n("span",{class:"token macro property"},"format!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"error: send transaction: {}"'),n("span",{class:"token punctuation"},","),a(" err"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token class-name"},"Ok"),n("span",{class:"token punctuation"},"("),a("signature"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br"),n("span",{class:"line-number"},"31"),n("br"),n("span",{class:"line-number"},"32"),n("br"),n("span",{class:"line-number"},"33"),n("br"),n("span",{class:"line-number"},"34"),n("br"),n("span",{class:"line-number"},"35"),n("br"),n("span",{class:"line-number"},"36"),n("br"),n("span",{class:"line-number"},"37"),n("br"),n("span",{class:"line-number"},"38"),n("br"),n("span",{class:"line-number"},"39"),n("br"),n("span",{class:"line-number"},"40"),n("br"),n("span",{class:"line-number"},"41"),n("br"),n("span",{class:"line-number"},"42"),n("br"),n("span",{class:"line-number"},"43"),n("br"),n("span",{class:"line-number"},"44"),n("br"),n("span",{class:"line-number"},"45"),n("br"),n("span",{class:"line-number"},"46"),n("br"),n("span",{class:"line-number"},"47"),n("br"),n("span",{class:"line-number"},"48"),n("br"),n("span",{class:"line-number"},"49"),n("br"),n("span",{class:"line-number"},"50"),n("br"),n("span",{class:"line-number"},"51"),n("br"),n("span",{class:"line-number"},"52"),n("br"),n("span",{class:"line-number"},"53"),n("br"),n("span",{class:"line-number"},"54"),n("br"),n("span",{class:"line-number"},"55"),n("br"),n("span",{class:"line-number"},"56"),n("br"),n("span",{class:"line-number"},"57"),n("br")])],-1),y=n("p",null,[a("Maaari na kaming magdagdag ng mga function ng pagsubok sa katawan ng "),n("code",null,"mod test {...}"),a(" upang ipakita ang default setup ng validator (naka-enable ang lahat ng feature) at pagkatapos ay i-disable ang "),n("code",null,"transaction wide compute cap"),a(" bilang bawat nakaraang mga halimbawa na nagpapatakbo ng "),n("code",null,"solana-test-validator"),a(" mula sa command line.")],-1),v=n("div",{class:"language-rust ext-rs line-numbers-mode"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token attribute attr-name"},"#[test]"),a(`
`),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"test_base_pass"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Run with all features activated (default for TestValidatorGenesis)"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" inv_feat "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Start validator with clean (new) ledger"),a(`
    `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token punctuation"},"("),a("test_validator"),n("span",{class:"token punctuation"},","),a(" main_payer"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"clean_ledger_setup_validator"),n("span",{class:"token punctuation"},"("),a("inv_feat"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Get the RpcClient"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" connection "),n("span",{class:"token operator"},"="),a(" test_validator"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_rpc_client"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Capture our programs log statements"),a(`
    `),n("span",{class:"token namespace"},[a("solana_logger"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"setup_with_default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"solana_runtime::message=debug"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},"// This example doesn't require sending any accounts to program"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" accounts "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Build instruction array and submit transaction"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" txn "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"submit_transaction"),n("span",{class:"token punctuation"},"("),a(`
        `),n("span",{class:"token operator"},"&"),a("connection"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token operator"},"&"),a("main_payer"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token comment"},"// Add two (2) instructions to transaction to demonstrate"),a(`
        `),n("span",{class:"token comment"},"// that each instruction CU draws down from default Transaction CU (200_000)"),a(`
        `),n("span",{class:"token comment"},"// Replace with instructions that make sense for your program"),a(`
        `),n("span",{class:"token punctuation"},"["),a(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"0u8"),n("span",{class:"token punctuation"},","),a(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"1u8"),n("span",{class:"token punctuation"},","),a(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token punctuation"},"]"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token macro property"},"assert!"),n("span",{class:"token punctuation"},"("),a("txn"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is_ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br")])],-1),w=n("div",{class:"language-rust ext-rs line-numbers-mode"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token attribute attr-name"},"#[test]"),a(`
`),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"test_deactivate_tx_cu_pass"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Run with all features activated except 'transaction wide compute cap'"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" inv_feat "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),n("span",{class:"token constant"},"TXWIDE_LIMITS"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Start validator with clean (new) ledger"),a(`
    `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token punctuation"},"("),a("test_validator"),n("span",{class:"token punctuation"},","),a(" main_payer"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"clean_ledger_setup_validator"),n("span",{class:"token punctuation"},"("),a("inv_feat"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Get the RpcClient"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" connection "),n("span",{class:"token operator"},"="),a(" test_validator"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_rpc_client"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Capture our programs log statements"),a(`
    `),n("span",{class:"token namespace"},[a("solana_logger"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"setup_with_default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"solana_runtime::message=debug"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},"// This example doesn't require sending any accounts to program"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" accounts "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Build instruction array and submit transaction"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" txn "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"submit_transaction"),n("span",{class:"token punctuation"},"("),a(`
        `),n("span",{class:"token operator"},"&"),a("connection"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token operator"},"&"),a("main_payer"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token punctuation"},"["),a(`
            `),n("span",{class:"token comment"},"// This instruction adds CU to transaction budget (1.9.2) but does nothing"),a(`
            `),n("span",{class:"token comment"},"// when we deactivate the 'transaction wide compute cap' feature"),a(`
            `),n("span",{class:"token class-name"},"ComputeBudgetInstruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"request_units"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"400_000u32"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
            `),n("span",{class:"token comment"},"// Add two (2) instructions to transaction"),a(`
            `),n("span",{class:"token comment"},"// Replace with instructions that make sense for your program"),a(`
            `),n("span",{class:"token comment"},"// You will see that each instruction has the 1.8.x 200_000 CU per budget"),a(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"0u8"),n("span",{class:"token punctuation"},","),a(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"1u8"),n("span",{class:"token punctuation"},","),a(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token punctuation"},"]"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token macro property"},"assert!"),n("span",{class:"token punctuation"},"("),a("txn"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is_ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br"),n("span",{class:"line-number"},"31"),n("br")])],-1),P=n("p",null,[a("Bilang kahalili, ang "),n("a",{href:"#resources"},"scfs engine gadget"),a(" ay maaaring makagawa ng isang buong vector ng na-deactivate mga tampok para sa isang kumpol. Ipinapakita ng sumusunod ang paggamit ng makinang iyon upang makakuha ng listahan ng lahat ng na-deactivate na feature para sa devnet.")],-1),x=n("div",{class:"language-rust ext-rs line-numbers-mode"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token attribute attr-name"},"#[test]"),a(`
`),n("span",{class:"token keyword"},"fn"),a(),n("span",{class:"token function-definition function"},"test_devnet_parity_pass"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// Use gadget-scfs to get all deactivated features from devnet"),a(`
    `),n("span",{class:"token comment"},'// must have `gadgets-scfs = "0.2.0" in Cargo.toml to use'),a(`
    `),n("span",{class:"token comment"},"// Here we setup for a run that samples features only"),a(`
    `),n("span",{class:"token comment"},"// from devnet"),a(`
    `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token keyword"},"mut"),a(" my_matrix "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token class-name"},"ScfsMatrix"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ScfsCriteria"),a(),n("span",{class:"token punctuation"},"{"),a(`
        clusters`),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),n("span",{class:"token constant"},"SCFS_DEVNET"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_string"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token punctuation"},".."),n("span",{class:"token class-name"},"Default"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Run the sampler matrix"),a(`
    `),n("span",{class:"token macro property"},"assert!"),n("span",{class:"token punctuation"},"("),a("my_matrix"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is_ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Get all deactivated features"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" deactivated "),n("span",{class:"token operator"},"="),a(` my_matrix
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_features"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"ScfsMatrix"),n("span",{class:"token punctuation"},"::"),a("any_inactive"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Confirm we have them"),a(`
    `),n("span",{class:"token macro property"},"assert_ne!"),n("span",{class:"token punctuation"},"("),a("deactivated"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"len"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// Setup test validator and logging while deactivating all"),a(`
    `),n("span",{class:"token comment"},"// features that are deactivated in devnet"),a(`
    `),n("span",{class:"token keyword"},"let"),a(),n("span",{class:"token punctuation"},"("),a("test_validator"),n("span",{class:"token punctuation"},","),a(" main_payer"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"clean_ledger_setup_validator"),n("span",{class:"token punctuation"},"("),a("deactivated"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" connection "),n("span",{class:"token operator"},"="),a(" test_validator"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_rpc_client"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token namespace"},[a("solana_logger"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"setup_with_default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"solana_runtime::message=debug"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token keyword"},"let"),a(" accounts "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"let"),a(" txn "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"submit_transaction"),n("span",{class:"token punctuation"},"("),a(`
        `),n("span",{class:"token operator"},"&"),a("connection"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token operator"},"&"),a("main_payer"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token punctuation"},"["),a(`
            `),n("span",{class:"token comment"},"// Add two (2) instructions to transaction"),a(`
            `),n("span",{class:"token comment"},"// Replace with instructions that make sense for your program"),a(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"0u8"),n("span",{class:"token punctuation"},","),a(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
            `),n("span",{class:"token class-name"},"Instruction"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new_with_borsh"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"PROG_KEY"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),n("span",{class:"token number"},"1u8"),n("span",{class:"token punctuation"},","),a(" accounts"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
        `),n("span",{class:"token punctuation"},"]"),a(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_vec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token macro property"},"assert!"),n("span",{class:"token punctuation"},"("),a("txn"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is_ok"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br"),n("span",{class:"line-number"},"31"),n("br"),n("span",{class:"line-number"},"32"),n("br"),n("span",{class:"line-number"},"33"),n("br"),n("span",{class:"line-number"},"34"),n("br"),n("span",{class:"line-number"},"35"),n("br"),n("span",{class:"line-number"},"36"),n("br"),n("span",{class:"line-number"},"37"),n("br"),n("span",{class:"line-number"},"38"),n("br"),n("span",{class:"line-number"},"39"),n("br")])],-1),B=n("p",null,"Happy Testing!",-1),G=n("h2",{id:"resources",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#resources","aria-hidden":"true"},"#"),a(" Resources")],-1),S={href:"https://github.com/FrankC01/solana-gadgets/tree/main/rust/scfsd",target:"_blank",rel:"noopener noreferrer"},E=a("scfsd"),R={href:"https://github.com/FrankC01/solana-gadgets/tree/main/rust/gadgets-scfs",target:"_blank",rel:"noopener noreferrer"},T=a("gadget-scfs");function L(A,D){const l=e("SolanaCodeGroupItem"),u=e("SolanaCodeGroup"),o=e("CodeGroupItem"),c=e("CodeGroup"),p=e("ExternalLinkIcon");return r(),k(m,null,[f,s(u,null,{default:t(()=>[s(l,{title:"Test Boiler Plate",active:""},{default:t(()=>[_]),preview:t(()=>[h]),_:1})]),_:1}),y,s(c,null,{default:t(()=>[s(o,{title:"All Features Test"},{default:t(()=>[v]),_:1}),s(o,{title:"Disable Tx CU Test",active:""},{default:t(()=>[w]),_:1})]),_:1}),P,s(c,null,{default:t(()=>[s(o,{title:"Devnet Parity"},{default:t(()=>[x]),_:1})]),_:1}),B,G,n("p",null,[n("a",S,[E,s(p)])]),n("p",null,[n("a",R,[T,s(p)])])],64)}var U=i(g,[["render",L]]);export{U as default};
